code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sum, Posbility: 0.0107
Next Token :  int, Posbility: 0.0155
Next Token :  list, Posbility: 0.0155
Next Token :  rec, Posbility: 0.2754
Next Token :  , Posbility: 0.5820
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fold, Posbility: 0.0156
Next Token : f, Posbility: 0.0227
Next Token : concat, Posbility: 0.0227
Next Token : add, Posbility: 0.0332
Next Token : join, Posbility: 0.6641
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0190
Next Token :  i, Posbility: 0.0315
Next Token :  =, Posbility: 0.2051
Next Token :  , Posbility: 0.2637
Next Token : _, Posbility: 0.3828
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : many, Posbility: 0.0417
Next Token : integer, Posbility: 0.0474
Next Token : numbers, Posbility: 0.0688
Next Token : list, Posbility: 0.1650
Next Token : int, Posbility: 0.3965
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_int
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0052
Next Token :  , Posbility: 0.0388
Next Token :  =, Posbility: 0.0388
Next Token : _, Posbility: 0.1055
Next Token : s, Posbility: 0.7773
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0425
Next Token :  a, Posbility: 0.0425
Next Token :  i, Posbility: 0.0425
Next Token :  =, Posbility: 0.3145
Next Token :  , Posbility: 0.4023
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0469
Next Token : n, Posbility: 0.0469
Next Token : (, Posbility: 0.0532
Next Token : lst, Posbility: 0.0601
Next Token : x, Posbility: 0.5039
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0017
Next Token : i, Posbility: 0.0017
Next Token :  , Posbility: 0.0095
Next Token :  =, Posbility: 0.1162
Next Token : s, Posbility: 0.8594
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0008
Next Token : s, Posbility: 0.0009
Next Token :  i, Posbility: 0.0011
Next Token :  , Posbility: 0.0109
Next Token :  =, Posbility: 0.9805
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  String, Posbility: 0.0023
Next Token :  int, Posbility: 0.0034
Next Token :  match, Posbility: 0.0320
Next Token :  , Posbility: 0.2090
Next Token : 
, Posbility: 0.7305
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0054
Next Token : 	, Posbility: 0.0089
Next Token :    , Posbility: 0.0147
Next Token :     , Posbility: 0.1582
Next Token :   , Posbility: 0.8008
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0223
Next Token : if, Posbility: 0.0474
Next Token : List, Posbility: 0.0608
Next Token : match, Posbility: 0.3496
Next Token : let, Posbility: 0.4492
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  int, Posbility: 0.0430
Next Token :  open, Posbility: 0.0430
Next Token :  acc, Posbility: 0.0488
Next Token :  rec, Posbility: 0.2471
Next Token :  , Posbility: 0.3594
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0349
Next Token : s, Posbility: 0.0576
Next Token : n, Posbility: 0.0649
Next Token : y, Posbility: 0.0737
Next Token : x, Posbility: 0.2930
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : i, Posbility: 0.0165
Next Token : 0, Posbility: 0.0349
Next Token : _, Posbility: 0.0396
Next Token :  =, Posbility: 0.2266
Next Token : s, Posbility: 0.6172
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0244
Next Token : 2, Posbility: 0.0354
Next Token : ', Posbility: 0.1406
Next Token : _, Posbility: 0.2314
Next Token :  =, Posbility: 0.4902
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  String, Posbility: 0.0038
Next Token :  list, Posbility: 0.0038
Next Token : 
, Posbility: 0.0168
Next Token :  [, Posbility: 0.0168
Next Token :  , Posbility: 0.9219
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0082
Next Token : Seq, Posbility: 0.0106
Next Token : Array, Posbility: 0.0369
Next Token : x, Posbility: 0.3086
Next Token : List, Posbility: 0.5781
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token : Helpers, Posbility: 0.0003
Next Token : (, Posbility: 0.0007
Next Token : _, Posbility: 0.0019
Next Token : ., Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : of, Posbility: 0.0352
Next Token : filter, Posbility: 0.1396
Next Token : sort, Posbility: 0.1396
Next Token : map, Posbility: 0.1787
Next Token : rev, Posbility: 0.3789
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0012
Next Token : ., Posbility: 0.0013
Next Token : (, Posbility: 0.0028
Next Token : _, Posbility: 0.0085
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ^, Posbility: 0.0000
Next Token : Int, Posbility: 0.0001
Next Token : List, Posbility: 0.0008
Next Token : (, Posbility: 0.0059
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0007
Next Token :  , Posbility: 0.0012
Next Token :   , Posbility: 0.0017
Next Token : 
, Posbility: 0.0085
Next Token :  in, Posbility: 0.9844
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0004
Next Token : 

, Posbility: 0.0058
Next Token :  , Posbility: 0.0084
Next Token :   , Posbility: 0.0095
Next Token : 
, Posbility: 0.9727
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token :    , Posbility: 0.0005
Next Token :       , Posbility: 0.0007
Next Token :     , Posbility: 0.0041
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0247
Next Token : if, Posbility: 0.0522
Next Token : List, Posbility: 0.0762
Next Token : match, Posbility: 0.1426
Next Token : let, Posbility: 0.6367
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sum, Posbility: 0.0189
Next Token :  int, Posbility: 0.0215
Next Token :  acc, Posbility: 0.0659
Next Token :  rec, Posbility: 0.2305
Next Token :  , Posbility: 0.4316
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0271
Next Token : s, Posbility: 0.0308
Next Token : n, Posbility: 0.0649
Next Token : y, Posbility: 0.0649
Next Token : x, Posbility: 0.4238
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : i, Posbility: 0.0160
Next Token : _, Posbility: 0.0339
Next Token : 0, Posbility: 0.0557
Next Token :  =, Posbility: 0.3203
Next Token : s, Posbility: 0.5273
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0184
Next Token : 2, Posbility: 0.0210
Next Token : ', Posbility: 0.0645
Next Token : _, Posbility: 0.1367
Next Token :  =, Posbility: 0.6953
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0058
Next Token :  [, Posbility: 0.0159
Next Token :  String, Posbility: 0.0203
Next Token : 
, Posbility: 0.0708
Next Token :  , Posbility: 0.8633
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Array, Posbility: 0.0105
Next Token : if, Posbility: 0.0134
Next Token : Int, Posbility: 0.0222
Next Token : x, Posbility: 0.0603
Next Token : List, Posbility: 0.8320
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : sort, Posbility: 0.0237
Next Token : filter, Posbility: 0.1064
Next Token : fold, Posbility: 0.1543
Next Token : rev, Posbility: 0.2559
Next Token : map, Posbility: 0.2891
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0193
Next Token :  i, Posbility: 0.0249
Next Token : i, Posbility: 0.0282
Next Token :  int, Posbility: 0.1836
Next Token :  , Posbility: 0.6406
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : join, Posbility: 0.0236
Next Token : x, Posbility: 0.0302
Next Token : f, Posbility: 0.0388
Next Token : Int, Posbility: 0.0723
Next Token : (, Posbility: 0.7773
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : String, Posbility: 0.0223
Next Token : function, Posbility: 0.0223
Next Token : Int, Posbility: 0.0287
Next Token : +, Posbility: 0.0688
Next Token : fun, Posbility: 0.7383
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0112
Next Token :  int, Posbility: 0.0303
Next Token :  v, Posbility: 0.0388
Next Token :  i, Posbility: 0.2871
Next Token :  , Posbility: 0.6094
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0062
Next Token : n, Posbility: 0.0170
Next Token : (, Posbility: 0.0170
Next Token : y, Posbility: 0.0170
Next Token : x, Posbility: 0.9258
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ->, Posbility: 0.0009
Next Token : s, Posbility: 0.0019
Next Token : i, Posbility: 0.0040
Next Token :  i, Posbility: 0.0052
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0001
Next Token : →, Posbility: 0.0001
Next Token : y, Posbility: 0.0002
Next Token : ::, Posbility: 0.0003
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  to, Posbility: 0.0056
Next Token :  string, Posbility: 0.0153
Next Token :  int, Posbility: 0.0417
Next Token :  String, Posbility: 0.0417
Next Token :  , Posbility: 0.8359
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0210
Next Token : Format, Posbility: 0.0444
Next Token : (, Posbility: 0.0942
Next Token : Int, Posbility: 0.0942
Next Token : x, Posbility: 0.6133
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0791
Next Token : ., Posbility: 0.1152
Next Token : ), Posbility: 0.1475
Next Token :  *, Posbility: 0.1670
Next Token :  +, Posbility: 0.2148
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x +
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2), Posbility: 0.0198
Next Token :  10), Posbility: 0.0198
Next Token :  0), Posbility: 0.1465
Next Token :  , Posbility: 0.1875
Next Token :  1), Posbility: 0.5117
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  0, Posbility: 0.0002
Next Token :   , Posbility: 0.0003
Next Token :  ~, Posbility: 0.0007
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ::, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : List, Posbility: 0.0002
Next Token : (, Posbility: 0.0015
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0009
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0024
Next Token :  =, Posbility: 0.0044
Next Token : 
, Posbility: 0.0121
Next Token :  |, Posbility: 0.0155
Next Token :  in, Posbility: 0.9570
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0002
Next Token :   , Posbility: 0.0031
Next Token :  , Posbility: 0.0058
Next Token : 

, Posbility: 0.0075
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0001
Next Token :       , Posbility: 0.0002
Next Token :     , Posbility: 0.0006
Next Token :  , Posbility: 0.0015
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0240
Next Token : match, Posbility: 0.0396
Next Token : x, Posbility: 0.0508
Next Token : List, Posbility: 0.2012
Next Token : let, Posbility: 0.6211
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0080
Next Token :  sum, Posbility: 0.0192
Next Token :  acc, Posbility: 0.0459
Next Token :  rec, Posbility: 0.0859
Next Token :  , Posbility: 0.7188
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0079
Next Token : s, Posbility: 0.0148
Next Token : n, Posbility: 0.0244
Next Token : y, Posbility: 0.0244
Next Token : x, Posbility: 0.8086
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0012
Next Token : 0, Posbility: 0.0033
Next Token : _, Posbility: 0.0054
Next Token :  =, Posbility: 0.1797
Next Token : s, Posbility: 0.8047
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0031
Next Token : 2, Posbility: 0.0031
Next Token : ', Posbility: 0.0057
Next Token : _, Posbility: 0.0176
Next Token :  =, Posbility: 0.9609
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0003
Next Token :  [, Posbility: 0.0031
Next Token :  String, Posbility: 0.0040
Next Token : 
, Posbility: 0.0066
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0009
Next Token : Int, Posbility: 0.0021
Next Token : (, Posbility: 0.0027
Next Token : x, Posbility: 0.0157
Next Token : List, Posbility: 0.9727
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : concat, Posbility: 0.0250
Next Token : filter, Posbility: 0.0679
Next Token : fold, Posbility: 0.1118
Next Token : map, Posbility: 0.2090
Next Token : rev, Posbility: 0.3906
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0004
Next Token :  ~, Posbility: 0.0004
Next Token : ., Posbility: 0.0009
Next Token : _, Posbility: 0.0109
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : List, Posbility: 0.0015
Next Token : (, Posbility: 0.0041
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token : 
, Posbility: 0.0006
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0002
Next Token :   , Posbility: 0.0019
Next Token :  , Posbility: 0.0031
Next Token : 

, Posbility: 0.0046
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0015
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0193
Next Token : match, Posbility: 0.0408
Next Token : x, Posbility: 0.0522
Next Token : List, Posbility: 0.1826
Next Token : let, Posbility: 0.6367
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0098
Next Token :  sum, Posbility: 0.0183
Next Token :  acc, Posbility: 0.0388
Next Token :  rec, Posbility: 0.0388
Next Token :  , Posbility: 0.7812
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0080
Next Token : s, Posbility: 0.0132
Next Token : n, Posbility: 0.0217
Next Token : y, Posbility: 0.0280
Next Token : x, Posbility: 0.8164
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0029
Next Token : 0, Posbility: 0.0048
Next Token : _, Posbility: 0.0079
Next Token :  =, Posbility: 0.2617
Next Token : s, Posbility: 0.7109
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0027
Next Token : ,, Posbility: 0.0031
Next Token : ', Posbility: 0.0057
Next Token : _, Posbility: 0.0176
Next Token :  =, Posbility: 0.9609
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  int, Posbility: 0.0005
Next Token :  [, Posbility: 0.0040
Next Token :  String, Posbility: 0.0051
Next Token : 
, Posbility: 0.0138
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0016
Next Token : Int, Posbility: 0.0035
Next Token : (, Posbility: 0.0057
Next Token : x, Posbility: 0.0199
Next Token : List, Posbility: 0.9609
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : reduce, Posbility: 0.0122
Next Token : rev, Posbility: 0.0293
Next Token : filter, Posbility: 0.0332
Next Token : fold, Posbility: 0.0796
Next Token : map, Posbility: 0.7578
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  int, Posbility: 0.0031
Next Token : i, Posbility: 0.0040
Next Token : _, Posbility: 0.0045
Next Token :  ((, Posbility: 0.0045
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0031
Next Token : List, Posbility: 0.0044
Next Token : x, Posbility: 0.0083
Next Token : Int, Posbility: 0.0137
Next Token : (, Posbility: 0.9570
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : String, Posbility: 0.0002
Next Token : fn, Posbility: 0.0002
Next Token : function, Posbility: 0.0004
Next Token : +, Posbility: 0.0015
Next Token : fun, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0009
Next Token :  int, Posbility: 0.0010
Next Token :  v, Posbility: 0.0024
Next Token :  i, Posbility: 0.0157
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0019
Next Token : (, Posbility: 0.0031
Next Token : n, Posbility: 0.0031
Next Token : _, Posbility: 0.0052
Next Token : x, Posbility: 0.9844
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0002
Next Token : x, Posbility: 0.0002
Next Token :  i, Posbility: 0.0002
Next Token :  =>, Posbility: 0.0004
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : →, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0030
Next Token :  int, Posbility: 0.0049
Next Token :  1, Posbility: 0.0082
Next Token :  String, Posbility: 0.0105
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0096
Next Token : Int, Posbility: 0.0159
Next Token : if, Posbility: 0.0231
Next Token : (, Posbility: 0.0552
Next Token : x, Posbility: 0.8633
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ), Posbility: 0.0072
Next Token :  %, Posbility: 0.0364
Next Token :  +, Posbility: 0.1436
Next Token :  *, Posbility: 0.2090
Next Token :  , Posbility: 0.5703
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : //, Posbility: 0.0011
Next Token : >, Posbility: 0.0016
Next Token : ^, Posbility: 0.0133
Next Token : /, Posbility: 0.0464
Next Token : -, Posbility: 0.9336
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  10), Posbility: 0.0014
Next Token :  3), Posbility: 0.0039
Next Token :  2), Posbility: 0.0173
Next Token :  , Posbility: 0.0222
Next Token :  1), Posbility: 0.9453
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token :  ~, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 0.0006
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0015
Next Token :  , Posbility: 0.0025
Next Token : 

, Posbility: 0.0052
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0001
Next Token :       , Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0036
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0136
Next Token : match, Posbility: 0.0223
Next Token : x, Posbility: 0.0688
Next Token : List, Posbility: 0.1875
Next Token : let, Posbility: 0.6562
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0058
Next Token :  sum, Posbility: 0.0139
Next Token :  acc, Posbility: 0.0203
Next Token :  rec, Posbility: 0.0260
Next Token :  , Posbility: 0.8633
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0048
Next Token : s, Posbility: 0.0070
Next Token : n, Posbility: 0.0089
Next Token : y, Posbility: 0.0115
Next Token : x, Posbility: 0.9102
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0012
Next Token : 0, Posbility: 0.0020
Next Token : _, Posbility: 0.0033
Next Token :  =, Posbility: 0.1807
Next Token : s, Posbility: 0.8086
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0011
Next Token : ,, Posbility: 0.0015
Next Token : ', Posbility: 0.0027
Next Token : _, Posbility: 0.0085
Next Token :  =, Posbility: 0.9805
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0003
Next Token :  String, Posbility: 0.0031
Next Token :  [, Posbility: 0.0031
Next Token : 
, Posbility: 0.0040
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0007
Next Token : Int, Posbility: 0.0015
Next Token : (, Posbility: 0.0031
Next Token : x, Posbility: 0.0157
Next Token : List, Posbility: 0.9727
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : filter, Posbility: 0.0325
Next Token : concat, Posbility: 0.0417
Next Token : fold, Posbility: 0.0688
Next Token : map, Posbility: 0.2119
Next Token : rev, Posbility: 0.5078
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : map, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : ., Posbility: 0.0002
Next Token : _, Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  for, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  (*, Posbility: 0.0001
Next Token :   , Posbility: 0.0006
Next Token :  , Posbility: 0.0012
Next Token : 

, Posbility: 0.0041
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0001
Next Token :       , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0019
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0143
Next Token : match, Posbility: 0.0302
Next Token : x, Posbility: 0.0439
Next Token : List, Posbility: 0.1738
Next Token : let, Posbility: 0.6875
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0067
Next Token :  sum, Posbility: 0.0142
Next Token :  rec, Posbility: 0.0142
Next Token :  acc, Posbility: 0.0182
Next Token :  , Posbility: 0.8750
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0037
Next Token : s, Posbility: 0.0062
Next Token : n, Posbility: 0.0090
Next Token : y, Posbility: 0.0131
Next Token : x, Posbility: 0.9141
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0008
Next Token : _, Posbility: 0.0022
Next Token : 0, Posbility: 0.0022
Next Token :  =, Posbility: 0.1182
Next Token : s, Posbility: 0.8711
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0015
Next Token :  , Posbility: 0.0017
Next Token : ', Posbility: 0.0024
Next Token : _, Posbility: 0.0075
Next Token :  =, Posbility: 0.9805
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0004
Next Token :  String, Posbility: 0.0024
Next Token :  [, Posbility: 0.0040
Next Token : 
, Posbility: 0.0066
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0009
Next Token : Int, Posbility: 0.0021
Next Token : (, Posbility: 0.0045
Next Token : x, Posbility: 0.0123
Next Token : List, Posbility: 0.9727
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : concat, Posbility: 0.0187
Next Token : rev, Posbility: 0.0239
Next Token : filter, Posbility: 0.0349
Next Token : fold, Posbility: 0.0449
Next Token : map, Posbility: 0.7930
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0031
Next Token :  ((, Posbility: 0.0035
Next Token :  int, Posbility: 0.0045
Next Token : i, Posbility: 0.0074
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0034
Next Token : List, Posbility: 0.0044
Next Token : x, Posbility: 0.0064
Next Token : Int, Posbility: 0.0176
Next Token : (, Posbility: 0.9570
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : fn, Posbility: 0.0002
Next Token : String, Posbility: 0.0002
Next Token : function, Posbility: 0.0004
Next Token : +, Posbility: 0.0010
Next Token : fun, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0003
Next Token :  v, Posbility: 0.0008
Next Token :  int, Posbility: 0.0009
Next Token :  i, Posbility: 0.0046
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0005
Next Token : n, Posbility: 0.0007
Next Token : (, Posbility: 0.0012
Next Token : _, Posbility: 0.0015
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0001
Next Token : ->, Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token :  =>, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0029
Next Token :  int, Posbility: 0.0063
Next Token :  1, Posbility: 0.0103
Next Token :  String, Posbility: 0.0132
Next Token :  , Posbility: 0.9258
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0139
Next Token : Int, Posbility: 0.0157
Next Token : if, Posbility: 0.0259
Next Token : (, Posbility: 0.0427
Next Token : x, Posbility: 0.8594
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0057
Next Token :  %, Posbility: 0.0198
Next Token :  , Posbility: 0.1875
Next Token :  +, Posbility: 0.2412
Next Token :  *, Posbility: 0.5117
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x *
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  -1), Posbility: 0.0248
Next Token :  100), Posbility: 0.0674
Next Token :  , Posbility: 0.1113
Next Token :  10), Posbility: 0.1836
Next Token :  2), Posbility: 0.4980
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  ~, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  in, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0004
Next Token :  , Posbility: 0.0010
Next Token : 

, Posbility: 0.0032
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0010
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0069
Next Token : (, Posbility: 0.0089
Next Token : x, Posbility: 0.0352
Next Token : List, Posbility: 0.1230
Next Token : let, Posbility: 0.8008
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0016
Next Token :  rec, Posbility: 0.0039
Next Token :  sum, Posbility: 0.0045
Next Token :  acc, Posbility: 0.0051
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0009
Next Token : s, Posbility: 0.0015
Next Token : n, Posbility: 0.0019
Next Token : y, Posbility: 0.0031
Next Token : x, Posbility: 0.9805
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0001
Next Token : 0, Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token :  =, Posbility: 0.0293
Next Token : s, Posbility: 0.9688
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0002
Next Token : ', Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token : _, Posbility: 0.0013
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token : 
, Posbility: 0.0004
Next Token :  [, Posbility: 0.0004
Next Token :  String, Posbility: 0.0004
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : Int, Posbility: 0.0003
Next Token : (, Posbility: 0.0008
Next Token : x, Posbility: 0.0032
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Ext, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fold, Posbility: 0.0060
Next Token : concat, Posbility: 0.0060
Next Token : reverse, Posbility: 0.0164
Next Token : map, Posbility: 0.0447
Next Token : rev, Posbility: 0.8945
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  for, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0003
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0036
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :  , Posbility: 0.0019
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0111
Next Token : match, Posbility: 0.0143
Next Token : x, Posbility: 0.0302
Next Token : List, Posbility: 0.1357
Next Token : let, Posbility: 0.7773
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0034
Next Token :  rec, Posbility: 0.0056
Next Token :  acc, Posbility: 0.0081
Next Token :  sum, Posbility: 0.0092
Next Token :  , Posbility: 0.9336
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0016
Next Token : s, Posbility: 0.0024
Next Token : n, Posbility: 0.0035
Next Token : y, Posbility: 0.0065
Next Token : x, Posbility: 0.9648
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0003
Next Token : _, Posbility: 0.0005
Next Token : 0, Posbility: 0.0005
Next Token :  =, Posbility: 0.0598
Next Token : s, Posbility: 0.9375
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0004
Next Token : ', Posbility: 0.0005
Next Token :  , Posbility: 0.0006
Next Token : _, Posbility: 0.0019
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0003
Next Token :  String, Posbility: 0.0009
Next Token :  [, Posbility: 0.0015
Next Token : 
, Posbility: 0.0022
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0003
Next Token : Int, Posbility: 0.0010
Next Token : (, Posbility: 0.0024
Next Token : x, Posbility: 0.0075
Next Token : List, Posbility: 0.9844
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : concat, Posbility: 0.0061
Next Token : filter, Posbility: 0.0101
Next Token : rev, Posbility: 0.0101
Next Token : fold, Posbility: 0.0275
Next Token : map, Posbility: 0.9102
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0009
Next Token : i, Posbility: 0.0013
Next Token :  int, Posbility: 0.0013
Next Token :  ((, Posbility: 0.0015
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0012
Next Token : List, Posbility: 0.0022
Next Token : x, Posbility: 0.0024
Next Token : Int, Posbility: 0.0075
Next Token : (, Posbility: 0.9844
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : String, Posbility: 0.0001
Next Token : fn, Posbility: 0.0001
Next Token : function, Posbility: 0.0002
Next Token : +, Posbility: 0.0005
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  v, Posbility: 0.0002
Next Token :  int, Posbility: 0.0003
Next Token :  i, Posbility: 0.0009
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0001
Next Token : y, Posbility: 0.0002
Next Token : (, Posbility: 0.0004
Next Token : _, Posbility: 0.0004
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  String, Posbility: 0.0021
Next Token :  Math, Posbility: 0.0021
Next Token :  int, Posbility: 0.0035
Next Token :  1, Posbility: 0.0045
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0034
Next Token : -, Posbility: 0.0063
Next Token : if, Posbility: 0.0072
Next Token : (, Posbility: 0.0286
Next Token : x, Posbility: 0.9453
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0027
Next Token :  %, Posbility: 0.0093
Next Token :  *, Posbility: 0.0254
Next Token :  +, Posbility: 0.1138
Next Token :  , Posbility: 0.8398
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : div, Posbility: 0.0008
Next Token : ^, Posbility: 0.0077
Next Token : //, Posbility: 0.0098
Next Token : -, Posbility: 0.0933
Next Token : /, Posbility: 0.8867
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x /
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1), Posbility: 0.0060
Next Token :  , Posbility: 0.0164
Next Token :  4), Posbility: 0.0164
Next Token :  3), Posbility: 0.0447
Next Token :  2), Posbility: 0.8945
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  ~, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0001
Next Token :   , Posbility: 0.0003
Next Token :  , Posbility: 0.0008
Next Token : 

, Posbility: 0.0036
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0012
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0117
Next Token : match, Posbility: 0.0117
Next Token : x, Posbility: 0.0405
Next Token : List, Posbility: 0.1816
Next Token : let, Posbility: 0.7188
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0024
Next Token :  sum, Posbility: 0.0044
Next Token :  rec, Posbility: 0.0050
Next Token :  acc, Posbility: 0.0057
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0015
Next Token : s, Posbility: 0.0024
Next Token : n, Posbility: 0.0031
Next Token : y, Posbility: 0.0040
Next Token : x, Posbility: 0.9727
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0002
Next Token : 0, Posbility: 0.0004
Next Token : _, Posbility: 0.0005
Next Token :  =, Posbility: 0.0474
Next Token : s, Posbility: 0.9492
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0003
Next Token :  , Posbility: 0.0004
Next Token : ', Posbility: 0.0005
Next Token : _, Posbility: 0.0019
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  String, Posbility: 0.0004
Next Token :  [, Posbility: 0.0006
Next Token : 
, Posbility: 0.0007
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0002
Next Token : Int, Posbility: 0.0003
Next Token : (, Posbility: 0.0010
Next Token : x, Posbility: 0.0046
Next Token : List, Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Ext, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fold, Posbility: 0.0089
Next Token : concat, Posbility: 0.0089
Next Token : reverse, Posbility: 0.0243
Next Token : map, Posbility: 0.1089
Next Token : rev, Posbility: 0.8047
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0003
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0046
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0022
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0118
Next Token : match, Posbility: 0.0171
Next Token : x, Posbility: 0.0249
Next Token : List, Posbility: 0.1836
Next Token : let, Posbility: 0.7266
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0034
Next Token :  rec, Posbility: 0.0049
Next Token :  sum, Posbility: 0.0072
Next Token :  acc, Posbility: 0.0072
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0016
Next Token : s, Posbility: 0.0027
Next Token : n, Posbility: 0.0035
Next Token : y, Posbility: 0.0057
Next Token : x, Posbility: 0.9648
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token : _, Posbility: 0.0005
Next Token : 0, Posbility: 0.0005
Next Token :  =, Posbility: 0.0757
Next Token : s, Posbility: 0.9219
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0005
Next Token :  , Posbility: 0.0008
Next Token : ', Posbility: 0.0008
Next Token : _, Posbility: 0.0022
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0003
Next Token :  String, Posbility: 0.0010
Next Token :  [, Posbility: 0.0022
Next Token : 
, Posbility: 0.0031
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0004
Next Token : Int, Posbility: 0.0009
Next Token : (, Posbility: 0.0024
Next Token : x, Posbility: 0.0059
Next Token : List, Posbility: 0.9883
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : concat, Posbility: 0.0078
Next Token : rev, Posbility: 0.0101
Next Token : filter, Posbility: 0.0166
Next Token : fold, Posbility: 0.0212
Next Token : map, Posbility: 0.9062
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0013
Next Token : i, Posbility: 0.0017
Next Token :  ((, Posbility: 0.0019
Next Token :  int, Posbility: 0.0024
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0019
Next Token : List, Posbility: 0.0027
Next Token : x, Posbility: 0.0031
Next Token : Int, Posbility: 0.0156
Next Token : (, Posbility: 0.9688
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : String, Posbility: 0.0001
Next Token : fn, Posbility: 0.0001
Next Token : function, Posbility: 0.0003
Next Token : +, Posbility: 0.0004
Next Token : fun, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0002
Next Token :  v, Posbility: 0.0003
Next Token :  int, Posbility: 0.0005
Next Token :  i, Posbility: 0.0013
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0002
Next Token : n, Posbility: 0.0002
Next Token : _, Posbility: 0.0006
Next Token : (, Posbility: 0.0006
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Math, Posbility: 0.0039
Next Token :  1, Posbility: 0.0050
Next Token :  String, Posbility: 0.0073
Next Token :  int, Posbility: 0.0082
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0142
Next Token : -, Posbility: 0.0161
Next Token : if, Posbility: 0.0161
Next Token : (, Posbility: 0.0496
Next Token : x, Posbility: 0.8789
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  **, Posbility: 0.0176
Next Token :  *, Posbility: 0.1011
Next Token :  %, Posbility: 0.1299
Next Token :  +, Posbility: 0.3535
Next Token :  , Posbility: 0.3535
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : <, Posbility: 0.0056
Next Token : //, Posbility: 0.0063
Next Token : /, Posbility: 0.0874
Next Token : -, Posbility: 0.3906
Next Token : ^, Posbility: 0.5000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0284
Next Token :  -1), Posbility: 0.0284
Next Token :  1), Posbility: 0.0776
Next Token :  3), Posbility: 0.0776
Next Token :  2), Posbility: 0.7344
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  ~, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  for, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0006
Next Token : 

, Posbility: 0.0012
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0032
Next Token : (, Posbility: 0.0067
Next Token : x, Posbility: 0.0142
Next Token : List, Posbility: 0.0820
Next Token : let, Posbility: 0.8789
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0007
Next Token :  rec, Posbility: 0.0008
Next Token :  acc, Posbility: 0.0008
Next Token :  sum, Posbility: 0.0010
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0004
Next Token : s, Posbility: 0.0006
Next Token : n, Posbility: 0.0008
Next Token : y, Posbility: 0.0009
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0001
Next Token : 0, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  =, Posbility: 0.0140
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0001
Next Token : ', Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 0.0004
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  String, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : Int, Posbility: 0.0001
Next Token : (, Posbility: 0.0004
Next Token : x, Posbility: 0.0015
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Ext, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fold, Posbility: 0.0014
Next Token : concat, Posbility: 0.0014
Next Token : reverse, Posbility: 0.0107
Next Token : map, Posbility: 0.0176
Next Token : rev, Posbility: 0.9609
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0041
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :  , Posbility: 0.0019
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0102
Next Token : (, Posbility: 0.0115
Next Token : x, Posbility: 0.0215
Next Token : List, Posbility: 0.1240
Next Token : let, Posbility: 0.8086
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0019
Next Token :  rec, Posbility: 0.0027
Next Token :  acc, Posbility: 0.0027
Next Token :  sum, Posbility: 0.0035
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0010
Next Token : s, Posbility: 0.0013
Next Token : n, Posbility: 0.0019
Next Token : y, Posbility: 0.0031
Next Token : x, Posbility: 0.9805
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token : 0, Posbility: 0.0003
Next Token :  =, Posbility: 0.0374
Next Token : s, Posbility: 0.9609
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0002
Next Token : ', Posbility: 0.0003
Next Token :  , Posbility: 0.0004
Next Token : _, Posbility: 0.0009
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0002
Next Token :  String, Posbility: 0.0005
Next Token : 
, Posbility: 0.0013
Next Token :  [, Posbility: 0.0013
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0002
Next Token : Int, Posbility: 0.0005
Next Token : (, Posbility: 0.0015
Next Token : x, Posbility: 0.0036
Next Token : List, Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : concat, Posbility: 0.0039
Next Token : rev, Posbility: 0.0050
Next Token : filter, Posbility: 0.0082
Next Token : fold, Posbility: 0.0082
Next Token : map, Posbility: 0.9531
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : i, Posbility: 0.0005
Next Token :  int, Posbility: 0.0006
Next Token :  ~, Posbility: 0.0007
Next Token :  ((, Posbility: 0.0010
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0008
Next Token : x, Posbility: 0.0013
Next Token : List, Posbility: 0.0017
Next Token : Int, Posbility: 0.0046
Next Token : (, Posbility: 0.9883
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : String, Posbility: 0.0001
Next Token : fn, Posbility: 0.0001
Next Token : function, Posbility: 0.0002
Next Token : +, Posbility: 0.0003
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  int, Posbility: 0.0001
Next Token :  i, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0001
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : _, Posbility: 0.0004
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  String, Posbility: 0.0024
Next Token :  ~, Posbility: 0.0027
Next Token :  int, Posbility: 0.0027
Next Token :  1, Posbility: 0.0051
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0034
Next Token : if, Posbility: 0.0071
Next Token : -, Posbility: 0.0150
Next Token : (, Posbility: 0.0317
Next Token : x, Posbility: 0.9297
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  &, Posbility: 0.0337
Next Token :  *, Posbility: 0.0913
Next Token :  %, Posbility: 0.1177
Next Token :  +, Posbility: 0.2490
Next Token :  , Posbility: 0.4102
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : >, Posbility: 0.0459
Next Token : <, Posbility: 0.0520
Next Token : /, Posbility: 0.2637
Next Token : ^, Posbility: 0.2988
Next Token : -, Posbility: 0.2988
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4), Posbility: 0.0221
Next Token :  3), Posbility: 0.0413
Next Token :  , Posbility: 0.0874
Next Token :  2), Posbility: 0.1270
Next Token :  1), Posbility: 0.6445
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  *, Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  for, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0004
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0005
Next Token :  , Posbility: 0.0012
Next Token : 

, Posbility: 0.0041
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0013
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0065
Next Token : (, Posbility: 0.0156
Next Token : x, Posbility: 0.0425
Next Token : List, Posbility: 0.1484
Next Token : let, Posbility: 0.7539
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  rec, Posbility: 0.0013
Next Token :  acc, Posbility: 0.0017
Next Token :  res, Posbility: 0.0021
Next Token :  sum, Posbility: 0.0027
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0010
Next Token : s, Posbility: 0.0017
Next Token : n, Posbility: 0.0024
Next Token : y, Posbility: 0.0035
Next Token : x, Posbility: 0.9805
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 0.0002
Next Token : 0, Posbility: 0.0003
Next Token :  =, Posbility: 0.0374
Next Token : s, Posbility: 0.9609
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0002
Next Token : ', Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token : _, Posbility: 0.0009
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0002
Next Token :  String, Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token :  [, Posbility: 0.0006
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0002
Next Token : Int, Posbility: 0.0003
Next Token : (, Posbility: 0.0008
Next Token : x, Posbility: 0.0046
Next Token : List, Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fold, Posbility: 0.0032
Next Token : concat, Posbility: 0.0032
Next Token : reverse, Posbility: 0.0143
Next Token : map, Posbility: 0.1738
Next Token : rev, Posbility: 0.7773
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  (*, Posbility: 0.0000
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0032
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0001
Next Token :       , Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0008
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0090
Next Token : (, Posbility: 0.0131
Next Token : x, Posbility: 0.0215
Next Token : List, Posbility: 0.1240
Next Token : let, Posbility: 0.8086
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0019
Next Token :  acc, Posbility: 0.0024
Next Token :  res, Posbility: 0.0027
Next Token :  sum, Posbility: 0.0040
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0010
Next Token : s, Posbility: 0.0015
Next Token : n, Posbility: 0.0021
Next Token : y, Posbility: 0.0035
Next Token : x, Posbility: 0.9805
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token : 0, Posbility: 0.0003
Next Token :  =, Posbility: 0.0374
Next Token : s, Posbility: 0.9609
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0003
Next Token : ', Posbility: 0.0003
Next Token :  , Posbility: 0.0006
Next Token : _, Posbility: 0.0012
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0003
Next Token :  String, Posbility: 0.0003
Next Token : 
, Posbility: 0.0009
Next Token :  [, Posbility: 0.0013
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0002
Next Token : Int, Posbility: 0.0005
Next Token : (, Posbility: 0.0015
Next Token : x, Posbility: 0.0046
Next Token : List, Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : append, Posbility: 0.0024
Next Token : filter, Posbility: 0.0039
Next Token : rev, Posbility: 0.0039
Next Token : fold, Posbility: 0.0065
Next Token : map, Posbility: 0.9648
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0003
Next Token :  int, Posbility: 0.0003
Next Token : i, Posbility: 0.0004
Next Token :  ((, Posbility: 0.0007
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0008
Next Token : f, Posbility: 0.0012
Next Token : Int, Posbility: 0.0019
Next Token : x, Posbility: 0.0025
Next Token : (, Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : fn, Posbility: 0.0001
Next Token : +, Posbility: 0.0002
Next Token : function, Posbility: 0.0002
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  int, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  i, Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0001
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : _, Posbility: 0.0009
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  String, Posbility: 0.0008
Next Token :  Math, Posbility: 0.0009
Next Token :  ~, Posbility: 0.0010
Next Token :  1, Posbility: 0.0036
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0027
Next Token : 2, Posbility: 0.0035
Next Token : -, Posbility: 0.0121
Next Token : (, Posbility: 0.0137
Next Token : x, Posbility: 0.9609
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  &, Posbility: 0.0048
Next Token :  %, Posbility: 0.0131
Next Token :  , Posbility: 0.2637
Next Token :  *, Posbility: 0.2637
Next Token :  +, Posbility: 0.4336
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x +
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  3), Posbility: 0.0061
Next Token :  4), Posbility: 0.0061
Next Token :  , Posbility: 0.0167
Next Token :  2), Posbility: 0.0454
Next Token :  1), Posbility: 0.9141
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0007
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0003
Next Token :  , Posbility: 0.0008
Next Token : 

, Posbility: 0.0052
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0019
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0047
Next Token : (, Posbility: 0.0129
Next Token : x, Posbility: 0.0349
Next Token : List, Posbility: 0.1221
Next Token : let, Posbility: 0.7969
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  rec, Posbility: 0.0013
Next Token :  acc, Posbility: 0.0015
Next Token :  res, Posbility: 0.0021
Next Token :  sum, Posbility: 0.0024
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0009
Next Token : s, Posbility: 0.0012
Next Token : n, Posbility: 0.0019
Next Token : y, Posbility: 0.0024
Next Token : x, Posbility: 0.9844
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : 0, Posbility: 0.0002
Next Token :  =, Posbility: 0.0229
Next Token : s, Posbility: 0.9766
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0001
Next Token : ', Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : _, Posbility: 0.0006
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  String, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  [, Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : Int, Posbility: 0.0002
Next Token : (, Posbility: 0.0005
Next Token : x, Posbility: 0.0032
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : append, Posbility: 0.0013
Next Token : concat, Posbility: 0.0022
Next Token : reverse, Posbility: 0.0162
Next Token : map, Posbility: 0.0728
Next Token : rev, Posbility: 0.8867
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  (*, Posbility: 0.0000
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0036
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0001
Next Token :       , Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0012
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0071
Next Token : (, Posbility: 0.0133
Next Token : x, Posbility: 0.0219
Next Token : List, Posbility: 0.1113
Next Token : let, Posbility: 0.8203
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  acc, Posbility: 0.0017
Next Token :  rec, Posbility: 0.0017
Next Token :  res, Posbility: 0.0024
Next Token :  sum, Posbility: 0.0031
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0009
Next Token : s, Posbility: 0.0012
Next Token : n, Posbility: 0.0019
Next Token : y, Posbility: 0.0035
Next Token : x, Posbility: 0.9844
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token : _, Posbility: 0.0003
Next Token :  =, Posbility: 0.0374
Next Token : s, Posbility: 0.9609
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0002
Next Token : 1, Posbility: 0.0002
Next Token :  , Posbility: 0.0005
Next Token : _, Posbility: 0.0007
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0002
Next Token :  String, Posbility: 0.0003
Next Token : 
, Posbility: 0.0007
Next Token :  [, Posbility: 0.0012
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : Int, Posbility: 0.0004
Next Token : (, Posbility: 0.0013
Next Token : x, Posbility: 0.0046
Next Token : List, Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : append, Posbility: 0.0015
Next Token : fold, Posbility: 0.0031
Next Token : filter, Posbility: 0.0031
Next Token : rev, Posbility: 0.0031
Next Token : map, Posbility: 0.9766
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0002
Next Token :  int, Posbility: 0.0002
Next Token : i, Posbility: 0.0004
Next Token :  ((, Posbility: 0.0006
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0006
Next Token : f, Posbility: 0.0009
Next Token : Int, Posbility: 0.0012
Next Token : x, Posbility: 0.0017
Next Token : (, Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : fn, Posbility: 0.0001
Next Token : +, Posbility: 0.0001
Next Token : function, Posbility: 0.0002
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0000
Next Token :  a, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  i, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0001
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : _, Posbility: 0.0005
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  int, Posbility: 0.0004
Next Token :  String, Posbility: 0.0004
Next Token :  Math, Posbility: 0.0004
Next Token :  1, Posbility: 0.0015
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0010
Next Token : 2, Posbility: 0.0017
Next Token : -, Posbility: 0.0045
Next Token : (, Posbility: 0.0085
Next Token : x, Posbility: 0.9805
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  <<, Posbility: 0.0022
Next Token :  %, Posbility: 0.0098
Next Token :  , Posbility: 0.3262
Next Token :  *, Posbility: 0.3262
Next Token :  +, Posbility: 0.3262
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x +
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  10), Posbility: 0.0056
Next Token :  , Posbility: 0.0151
Next Token :  3), Posbility: 0.0151
Next Token :  2), Posbility: 0.1118
Next Token :  1), Posbility: 0.8281
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0010
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0009
Next Token : 

, Posbility: 0.0046
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0013
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0040
Next Token : (, Posbility: 0.0122
Next Token : x, Posbility: 0.0259
Next Token : List, Posbility: 0.0796
Next Token : let, Posbility: 0.8555
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  result, Posbility: 0.0004
Next Token :  v, Posbility: 0.0005
Next Token :  res, Posbility: 0.0009
Next Token :  sum, Posbility: 0.0010
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0005
Next Token : s, Posbility: 0.0007
Next Token : n, Posbility: 0.0010
Next Token : y, Posbility: 0.0019
Next Token : x, Posbility: 0.9883
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0001
Next Token : 0, Posbility: 0.0002
Next Token : _, Posbility: 0.0002
Next Token :  =, Posbility: 0.0229
Next Token : s, Posbility: 0.9766
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  String, Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : Int, Posbility: 0.0001
Next Token : (, Posbility: 0.0004
Next Token : x, Posbility: 0.0015
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : append, Posbility: 0.0005
Next Token : concat, Posbility: 0.0009
Next Token : reverse, Posbility: 0.0064
Next Token : map, Posbility: 0.0289
Next Token : rev, Posbility: 0.9570
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0025
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0001
Next Token :       , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0007
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0053
Next Token : (, Posbility: 0.0112
Next Token : x, Posbility: 0.0162
Next Token : List, Posbility: 0.0645
Next Token : let, Posbility: 0.8867
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  rec, Posbility: 0.0005
Next Token :  v, Posbility: 0.0005
Next Token :  res, Posbility: 0.0008
Next Token :  sum, Posbility: 0.0012
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0005
Next Token : (, Posbility: 0.0005
Next Token : n, Posbility: 0.0012
Next Token : y, Posbility: 0.0019
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : 0, Posbility: 0.0001
Next Token :  =, Posbility: 0.0110
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  String, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  [, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Map, Posbility: 0.0001
Next Token : Int, Posbility: 0.0002
Next Token : (, Posbility: 0.0008
Next Token : x, Posbility: 0.0028
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : append, Posbility: 0.0007
Next Token : fold, Posbility: 0.0009
Next Token : filter, Posbility: 0.0009
Next Token : rev, Posbility: 0.0009
Next Token : map, Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0001
Next Token :  int, Posbility: 0.0001
Next Token : i, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0002
Next Token : f, Posbility: 0.0003
Next Token : Int, Posbility: 0.0003
Next Token : x, Posbility: 0.0008
Next Token : (, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token : +, Posbility: 0.0001
Next Token : function, Posbility: 0.0001
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  a, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  i, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1), Posbility: 0.0002
Next Token :  Math, Posbility: 0.0002
Next Token :  2*, Posbility: 0.0002
Next Token :  1, Posbility: 0.0006
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0004
Next Token : 2, Posbility: 0.0010
Next Token : -, Posbility: 0.0017
Next Token : (, Posbility: 0.0046
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ), Posbility: 0.0008
Next Token :  %, Posbility: 0.0037
Next Token :  , Posbility: 0.3301
Next Token :  *, Posbility: 0.3301
Next Token :  +, Posbility: 0.3301
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x +
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  10), Posbility: 0.0009
Next Token :  3), Posbility: 0.0024
Next Token :  , Posbility: 0.0065
Next Token :  2), Posbility: 0.0177
Next Token :  1), Posbility: 0.9688
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0001
Next Token : 
, Posbility: 0.0013
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token : 

, Posbility: 0.0046
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0013
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0028
Next Token : (, Posbility: 0.0128
Next Token : x, Posbility: 0.0210
Next Token : List, Posbility: 0.0503
Next Token : let, Posbility: 0.8945
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0005
Next Token :  result, Posbility: 0.0005
Next Token :  res, Posbility: 0.0010
Next Token :  sum, Posbility: 0.0010
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0004
Next Token : s, Posbility: 0.0005
Next Token : n, Posbility: 0.0008
Next Token : y, Posbility: 0.0013
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : 0, Posbility: 0.0001
Next Token :  =, Posbility: 0.0110
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  String, Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : Int, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 0.0012
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : append, Posbility: 0.0005
Next Token : concat, Posbility: 0.0009
Next Token : reverse, Posbility: 0.0065
Next Token : map, Posbility: 0.0177
Next Token : rev, Posbility: 0.9688
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0025
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0009
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0025
Next Token : (, Posbility: 0.0099
Next Token : x, Posbility: 0.0127
Next Token : List, Posbility: 0.0728
Next Token : let, Posbility: 0.8906
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  result, Posbility: 0.0005
Next Token :  v, Posbility: 0.0006
Next Token :  res, Posbility: 0.0010
Next Token :  sum, Posbility: 0.0013
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0003
Next Token : (, Posbility: 0.0004
Next Token : n, Posbility: 0.0008
Next Token : y, Posbility: 0.0013
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : 0, Posbility: 0.0001
Next Token :  =, Posbility: 0.0140
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  String, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  [, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : Int, Posbility: 0.0002
Next Token : (, Posbility: 0.0008
Next Token : x, Posbility: 0.0028
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : append, Posbility: 0.0005
Next Token : filter, Posbility: 0.0006
Next Token : fold, Posbility: 0.0007
Next Token : rev, Posbility: 0.0010
Next Token : map, Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  int, Posbility: 0.0001
Next Token :  ~, Posbility: 0.0001
Next Token : i, Posbility: 0.0002
Next Token :  ((, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0002
Next Token : Int, Posbility: 0.0003
Next Token : f, Posbility: 0.0003
Next Token : x, Posbility: 0.0008
Next Token : (, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token : +, Posbility: 0.0001
Next Token : function, Posbility: 0.0001
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  a, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  i, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Math, Posbility: 0.0001
Next Token :  2*, Posbility: 0.0001
Next Token :  1), Posbility: 0.0002
Next Token :  1, Posbility: 0.0005
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0003
Next Token : 2, Posbility: 0.0009
Next Token : -, Posbility: 0.0013
Next Token : (, Posbility: 0.0046
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ), Posbility: 0.0006
Next Token :  %, Posbility: 0.0016
Next Token :  *, Posbility: 0.0898
Next Token :  , Posbility: 0.2441
Next Token :  +, Posbility: 0.6641
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x +
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  10), Posbility: 0.0009
Next Token :  3), Posbility: 0.0024
Next Token :  , Posbility: 0.0065
Next Token :  2), Posbility: 0.0177
Next Token :  1), Posbility: 0.9688
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : 

, Posbility: 0.0001
Next Token : 
, Posbility: 0.0012
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0041
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0015
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0037
Next Token : (, Posbility: 0.0114
Next Token : x, Posbility: 0.0166
Next Token : List, Posbility: 0.0452
Next Token : let, Posbility: 0.9062
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0003
Next Token :  result, Posbility: 0.0003
Next Token :  res, Posbility: 0.0005
Next Token :  sum, Posbility: 0.0006
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0003
Next Token : s, Posbility: 0.0003
Next Token : n, Posbility: 0.0006
Next Token : y, Posbility: 0.0009
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : 0, Posbility: 0.0001
Next Token :  =, Posbility: 0.0085
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  String, Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Map, Posbility: 0.0000
Next Token : Int, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 0.0010
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : append, Posbility: 0.0003
Next Token : concat, Posbility: 0.0005
Next Token : reverse, Posbility: 0.0051
Next Token : map, Posbility: 0.0139
Next Token : rev, Posbility: 0.9766
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0028
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0012
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0020
Next Token : (, Posbility: 0.0088
Next Token : x, Posbility: 0.0128
Next Token : List, Posbility: 0.0649
Next Token : let, Posbility: 0.8984
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  result, Posbility: 0.0004
Next Token :  v, Posbility: 0.0005
Next Token :  res, Posbility: 0.0008
Next Token :  sum, Posbility: 0.0012
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0003
Next Token : (, Posbility: 0.0004
Next Token : n, Posbility: 0.0008
Next Token : y, Posbility: 0.0012
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : 0, Posbility: 0.0001
Next Token :  =, Posbility: 0.0125
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  String, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  [, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Map, Posbility: 0.0001
Next Token : Int, Posbility: 0.0001
Next Token : (, Posbility: 0.0007
Next Token : x, Posbility: 0.0032
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : append, Posbility: 0.0005
Next Token : filter, Posbility: 0.0006
Next Token : fold, Posbility: 0.0006
Next Token : rev, Posbility: 0.0009
Next Token : map, Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  ~, Posbility: 0.0001
Next Token : i, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0001
Next Token : Int, Posbility: 0.0002
Next Token : f, Posbility: 0.0003
Next Token : x, Posbility: 0.0007
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : +, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token : function, Posbility: 0.0001
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  i, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Math, Posbility: 0.0001
Next Token :  2*, Posbility: 0.0001
Next Token :  1), Posbility: 0.0002
Next Token :  1, Posbility: 0.0004
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0002
Next Token : 2, Posbility: 0.0007
Next Token : -, Posbility: 0.0009
Next Token : (, Posbility: 0.0032
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ), Posbility: 0.0007
Next Token :  %, Posbility: 0.0019
Next Token :  , Posbility: 0.1060
Next Token :  *, Posbility: 0.1060
Next Token :  +, Posbility: 0.7852
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x +
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  10), Posbility: 0.0003
Next Token :  3), Posbility: 0.0009
Next Token :  , Posbility: 0.0015
Next Token :  2), Posbility: 0.0067
Next Token :  1), Posbility: 0.9883
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token : 

, Posbility: 0.0001
Next Token : 
, Posbility: 0.0012
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token : 

, Posbility: 0.0032
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0015
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0029
Next Token : (, Posbility: 0.0116
Next Token : x, Posbility: 0.0131
Next Token : List, Posbility: 0.0356
Next Token : let, Posbility: 0.9219
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0002
Next Token :  result, Posbility: 0.0002
Next Token :  res, Posbility: 0.0003
Next Token :  sum, Posbility: 0.0004
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : s, Posbility: 0.0002
Next Token : n, Posbility: 0.0005
Next Token : y, Posbility: 0.0006
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : 0, Posbility: 0.0001
Next Token :  =, Posbility: 0.0097
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  String, Posbility: 0.0000
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Map, Posbility: 0.0000
Next Token : Int, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 0.0010
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : append, Posbility: 0.0003
Next Token : concat, Posbility: 0.0005
Next Token : reverse, Posbility: 0.0065
Next Token : map, Posbility: 0.0178
Next Token : rev, Posbility: 0.9688
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0025
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0010
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0018
Next Token : (, Posbility: 0.0090
Next Token : x, Posbility: 0.0090
Next Token : List, Posbility: 0.0518
Next Token : let, Posbility: 0.9180
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  result, Posbility: 0.0003
Next Token :  v, Posbility: 0.0004
Next Token :  res, Posbility: 0.0006
Next Token :  sum, Posbility: 0.0008
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0003
Next Token : (, Posbility: 0.0004
Next Token : n, Posbility: 0.0006
Next Token : y, Posbility: 0.0012
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  =, Posbility: 0.0159
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  String, Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  [, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Map, Posbility: 0.0000
Next Token : Int, Posbility: 0.0001
Next Token : (, Posbility: 0.0006
Next Token : x, Posbility: 0.0019
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : append, Posbility: 0.0004
Next Token : fold, Posbility: 0.0005
Next Token : filter, Posbility: 0.0005
Next Token : rev, Posbility: 0.0010
Next Token : map, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  ~, Posbility: 0.0001
Next Token : i, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0001
Next Token : f, Posbility: 0.0002
Next Token : Int, Posbility: 0.0002
Next Token : x, Posbility: 0.0005
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token : +, Posbility: 0.0000
Next Token : function, Posbility: 0.0001
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  i, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Math, Posbility: 0.0001
Next Token :  2*, Posbility: 0.0001
Next Token :  1), Posbility: 0.0001
Next Token :  1, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0002
Next Token : 2, Posbility: 0.0006
Next Token : -, Posbility: 0.0008
Next Token : (, Posbility: 0.0032
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ), Posbility: 0.0008
Next Token :  %, Posbility: 0.0021
Next Token :  *, Posbility: 0.0417
Next Token :  , Posbility: 0.1138
Next Token :  +, Posbility: 0.8398
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x +
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  10), Posbility: 0.0003
Next Token :  3), Posbility: 0.0009
Next Token :  , Posbility: 0.0015
Next Token :  2), Posbility: 0.0041
Next Token :  1), Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token : 
, Posbility: 0.0008
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : ;, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0032
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0013
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : in, Posbility: 0.0026
Next Token : (, Posbility: 0.0091
Next Token : x, Posbility: 0.0132
Next Token : List, Posbility: 0.0317
Next Token : let, Posbility: 0.9297
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0001
Next Token :  result, Posbility: 0.0002
Next Token :  res, Posbility: 0.0003
Next Token :  sum, Posbility: 0.0004
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 0.0004
Next Token : y, Posbility: 0.0006
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0097
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  String, Posbility: 0.0000
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Map, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 0.0007
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : sort, Posbility: 0.0002
Next Token : concat, Posbility: 0.0003
Next Token : reverse, Posbility: 0.0031
Next Token : map, Posbility: 0.0109
Next Token : rev, Posbility: 0.9844
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0017
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0009
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0018
Next Token : (, Posbility: 0.0090
Next Token : x, Posbility: 0.0103
Next Token : List, Posbility: 0.0459
Next Token : let, Posbility: 0.9219
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  result, Posbility: 0.0004
Next Token :  v, Posbility: 0.0004
Next Token :  res, Posbility: 0.0007
Next Token :  sum, Posbility: 0.0010
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0003
Next Token : s, Posbility: 0.0003
Next Token : n, Posbility: 0.0006
Next Token : y, Posbility: 0.0013
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : 0, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token :  =, Posbility: 0.0085
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  String, Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Map, Posbility: 0.0000
Next Token : Int, Posbility: 0.0001
Next Token : (, Posbility: 0.0006
Next Token : x, Posbility: 0.0022
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : append, Posbility: 0.0003
Next Token : filter, Posbility: 0.0003
Next Token : fold, Posbility: 0.0003
Next Token : rev, Posbility: 0.0005
Next Token : map, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  ~, Posbility: 0.0001
Next Token : i, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0001
Next Token : f, Posbility: 0.0001
Next Token : Int, Posbility: 0.0001
Next Token : x, Posbility: 0.0004
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : +, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token : function, Posbility: 0.0001
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Math, Posbility: 0.0001
Next Token :  2*, Posbility: 0.0001
Next Token :  1), Posbility: 0.0001
Next Token :  1, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : 2, Posbility: 0.0004
Next Token : -, Posbility: 0.0005
Next Token : (, Posbility: 0.0022
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  %, Posbility: 0.0005
Next Token : ), Posbility: 0.0009
Next Token :  , Posbility: 0.0284
Next Token :  *, Posbility: 0.0284
Next Token :  +, Posbility: 0.9414
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x +
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  5), Posbility: 0.0003
Next Token :  3), Posbility: 0.0007
Next Token :  , Posbility: 0.0015
Next Token :  2), Posbility: 0.0041
Next Token :  1), Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token : 
, Posbility: 0.0010
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ;, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0028
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :  , Posbility: 0.0009
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0016
Next Token : (, Posbility: 0.0082
Next Token : x, Posbility: 0.0082
Next Token : List, Posbility: 0.0223
Next Token : let, Posbility: 0.9492
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0001
Next Token :  result, Posbility: 0.0002
Next Token :  res, Posbility: 0.0002
Next Token :  sum, Posbility: 0.0003
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 0.0003
Next Token : y, Posbility: 0.0005
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0041
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  String, Posbility: 0.0000
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Map, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 0.0006
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : sort, Posbility: 0.0002
Next Token : concat, Posbility: 0.0003
Next Token : reverse, Posbility: 0.0031
Next Token : map, Posbility: 0.0109
Next Token : rev, Posbility: 0.9844
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0019
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in

 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :  , Posbility: 0.0008
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0018
Next Token : (, Posbility: 0.0090
Next Token : x, Posbility: 0.0116
Next Token : List, Posbility: 0.0459
Next Token : let, Posbility: 0.9219
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let
 score:False
Error type: noerr
---------------------------
Next Token :  result, Posbility: 0.0003
Next Token :  v, Posbility: 0.0003
Next Token :  res, Posbility: 0.0005
Next Token :  sum, Posbility: 0.0008
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let 
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0003
Next Token : (, Posbility: 0.0003
Next Token : n, Posbility: 0.0007
Next Token : y, Posbility: 0.0010
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let x
 score:False
Error type: noerr
---------------------------
Next Token : 0, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0067
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs =
 score:False
Error type: noerr
---------------------------
Next Token :  String, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = 
 score:False
Error type: noerr
---------------------------
Next Token : Map, Posbility: 0.0000
Next Token : Int, Posbility: 0.0001
Next Token : (, Posbility: 0.0005
Next Token : x, Posbility: 0.0015
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.
 score:False
Error type: noerr
---------------------------
Next Token : append, Posbility: 0.0003
Next Token : filter, Posbility: 0.0003
Next Token : fold, Posbility: 0.0003
Next Token : rev, Posbility: 0.0007
Next Token : map, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : i, Posbility: 0.0000
Next Token :  ~, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0001
Next Token : f, Posbility: 0.0001
Next Token : Int, Posbility: 0.0001
Next Token : x, Posbility: 0.0004
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : +, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token : function, Posbility: 0.0001
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun
 score:False
Error type: noerr
---------------------------
Next Token :  k, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun 
 score:False
Error type: noerr
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x ->
 score:False
Error type: noerr
---------------------------
Next Token :  Math, Posbility: 0.0001
Next Token :  2*, Posbility: 0.0001
Next Token :  1), Posbility: 0.0001
Next Token :  1, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> 
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : 2, Posbility: 0.0004
Next Token : -, Posbility: 0.0005
Next Token : (, Posbility: 0.0025
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x
 score:False
Error type: noerr
---------------------------
Next Token :  %, Posbility: 0.0005
Next Token : ), Posbility: 0.0009
Next Token :  , Posbility: 0.0284
Next Token :  *, Posbility: 0.0284
Next Token :  +, Posbility: 0.9414
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x +
 score:False
Error type: noerr
---------------------------
Next Token :  5), Posbility: 0.0002
Next Token :  3), Posbility: 0.0003
Next Token :  , Posbility: 0.0007
Next Token :  2), Posbility: 0.0025
Next Token :  1), Posbility: 0.9961
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1)
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) 
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to join a list of multiple integers into a single integer. *)
let join_ints xs =
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x * 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x / 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x ^ 2) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x - 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) xs in
  let xs = List.rev xs in
  let xs = List.map (fun x -> x + 1) x
 score:False


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>