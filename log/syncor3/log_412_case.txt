code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  string, Posbility: 0.0359
Next Token :  a, Posbility: 0.0525
Next Token :  match, Posbility: 0.1260
Next Token :  rec, Posbility: 0.2656
Next Token :  , Posbility: 0.3008
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0532
Next Token : f, Posbility: 0.0532
Next Token : (, Posbility: 0.0603
Next Token : ab, Posbility: 0.0603
Next Token : end, Posbility: 0.0776
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let end
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0077
Next Token :  , Posbility: 0.0237
Next Token :  =, Posbility: 0.0303
Next Token : _, Posbility: 0.4180
Next Token : s, Posbility: 0.4746
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : with, Posbility: 0.0031
Next Token :  , Posbility: 0.0039
Next Token : With, Posbility: 0.0051
Next Token :  =, Posbility: 0.0121
Next Token : _, Posbility: 0.9648
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : b, Posbility: 0.0042
Next Token : ab, Posbility: 0.0306
Next Token : in, Posbility: 0.0393
Next Token : a, Posbility: 0.1069
Next Token : with, Posbility: 0.7891
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ', Posbility: 0.0090
Next Token :  =, Posbility: 0.0522
Next Token :  , Posbility: 0.0522
Next Token :  a, Posbility: 0.0522
Next Token : _, Posbility: 0.8164
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : any, Posbility: 0.0065
Next Token : abc, Posbility: 0.0177
Next Token : b, Posbility: 0.0481
Next Token : ab, Posbility: 0.2441
Next Token : a, Posbility: 0.5859
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ab, Posbility: 0.0034
Next Token :  a, Posbility: 0.0063
Next Token :  , Posbility: 0.0986
Next Token :  =, Posbility: 0.1436
Next Token : _, Posbility: 0.7305
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : follow, Posbility: 0.0154
Next Token : a, Posbility: 0.0199
Next Token : and, Posbility: 0.1299
Next Token : then, Posbility: 0.1465
Next Token : b, Posbility: 0.5820
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0085
Next Token : _, Posbility: 0.0625
Next Token :  a, Posbility: 0.0625
Next Token :  =, Posbility: 0.4082
Next Token :  , Posbility: 0.4082
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0035
Next Token : :, Posbility: 0.0040
Next Token : (, Posbility: 0.0228
Next Token : x, Posbility: 0.0796
Next Token : s, Posbility: 0.8555
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0009
Next Token : 
, Posbility: 0.0015
Next Token : 1, Posbility: 0.0019
Next Token :  , Posbility: 0.0109
Next Token :  =, Posbility: 0.9805
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  string, Posbility: 0.0098
Next Token :  match, Posbility: 0.0564
Next Token :  String, Posbility: 0.0564
Next Token :  , Posbility: 0.2227
Next Token : 
, Posbility: 0.6055
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0043
Next Token : 	, Posbility: 0.0049
Next Token :    , Posbility: 0.0150
Next Token :     , Posbility: 0.1426
Next Token :   , Posbility: 0.8203
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0486
Next Token : s, Posbility: 0.0549
Next Token : if, Posbility: 0.0801
Next Token : match, Posbility: 0.2461
Next Token : let, Posbility: 0.4062
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0286
Next Token :  open, Posbility: 0.0471
Next Token :  len, Posbility: 0.0776
Next Token :  rec, Posbility: 0.1641
Next Token :  , Posbility: 0.4473
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0452
Next Token : (, Posbility: 0.0579
Next Token : x, Posbility: 0.0654
Next Token : r, Posbility: 0.0654
Next Token : s, Posbility: 0.2949
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0442
Next Token : s, Posbility: 0.0566
Next Token : 1, Posbility: 0.0645
Next Token : _, Posbility: 0.1748
Next Token :  =, Posbility: 0.5391
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0032
Next Token :  S, Posbility: 0.0032
Next Token :  match, Posbility: 0.0088
Next Token :  , Posbility: 0.4805
Next Token :  String, Posbility: 0.4805
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0021
Next Token :  , Posbility: 0.0024
Next Token : s, Posbility: 0.0024
Next Token : _, Posbility: 0.0031
Next Token : ., Posbility: 0.9805
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : get, Posbility: 0.0325
Next Token : down, Posbility: 0.0608
Next Token : sub, Posbility: 0.0884
Next Token : to, Posbility: 0.1865
Next Token : trim, Posbility: 0.2402
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0008
Next Token : (, Posbility: 0.0014
Next Token : Left, Posbility: 0.0016
Next Token : _, Posbility: 0.3438
Next Token :  , Posbility: 0.6445
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (", Posbility: 0.0000
Next Token : Str, Posbility: 0.0000
Next Token : ^, Posbility: 0.0001
Next Token : (, Posbility: 0.0110
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0003
Next Token :  0, Posbility: 0.0009
Next Token :  , Posbility: 0.0013
Next Token : 
, Posbility: 0.0025
Next Token :  in, Posbility: 0.9922
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0005
Next Token : 

, Posbility: 0.0051
Next Token :   , Posbility: 0.0058
Next Token :  , Posbility: 0.0075
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0003
Next Token :       , Posbility: 0.0003
Next Token :  , Posbility: 0.0004
Next Token :     , Posbility: 0.0032
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0815
Next Token : match, Posbility: 0.1187
Next Token : String, Posbility: 0.1348
Next Token : if, Posbility: 0.1729
Next Token : let, Posbility: 0.3652
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0383
Next Token :  pos, Posbility: 0.0493
Next Token :  rec, Posbility: 0.0811
Next Token :  len, Posbility: 0.1045
Next Token :  , Posbility: 0.4668
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0471
Next Token : x, Posbility: 0.0605
Next Token : b, Posbility: 0.0605
Next Token : n, Posbility: 0.0688
Next Token : s, Posbility: 0.3477
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0124
Next Token : 1, Posbility: 0.0231
Next Token : ,, Posbility: 0.0337
Next Token : _, Posbility: 0.1035
Next Token :  =, Posbility: 0.7656
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0017
Next Token : 
, Posbility: 0.0128
Next Token :  match, Posbility: 0.0128
Next Token :  , Posbility: 0.2559
Next Token :  String, Posbility: 0.6992
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Scanner, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 0.0002
Next Token : _, Posbility: 0.0002
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : down, Posbility: 0.0874
Next Token : length, Posbility: 0.0991
Next Token : trim, Posbility: 0.0991
Next Token : sub, Posbility: 0.1123
Next Token : to, Posbility: 0.1846
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0006
Next Token : lower, Posbility: 0.0009
Next Token : Lower, Posbility: 0.0012
Next Token : list, Posbility: 0.0019
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : array, Posbility: 0.0559
Next Token : char, Posbility: 0.0559
Next Token : string, Posbility: 0.1523
Next Token : lowercase, Posbility: 0.2520
Next Token : list, Posbility: 0.2520
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ', Posbility: 0.0002
Next Token :  char, Posbility: 0.0002
Next Token :  ~, Posbility: 0.0009
Next Token : _, Posbility: 0.0159
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Next Token : (, Posbility: 0.0041
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0002
Next Token : ., Posbility: 0.0003
Next Token :  , Posbility: 0.0008
Next Token : 
, Posbility: 0.0015
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0013
Next Token :  , Posbility: 0.0017
Next Token : 

, Posbility: 0.0067
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0002
Next Token :       , Posbility: 0.0003
Next Token :  , Posbility: 0.0010
Next Token :     , Posbility: 0.0015
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0449
Next Token : if, Posbility: 0.0952
Next Token : match, Posbility: 0.1221
Next Token : List, Posbility: 0.1572
Next Token : let, Posbility: 0.4277
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0383
Next Token :  l, Posbility: 0.0435
Next Token :  len, Posbility: 0.0493
Next Token :  rec, Posbility: 0.1045
Next Token :  , Posbility: 0.4688
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0334
Next Token : (, Posbility: 0.0488
Next Token : b, Posbility: 0.0806
Next Token : x, Posbility: 0.0913
Next Token : s, Posbility: 0.3613
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0079
Next Token : ', Posbility: 0.0090
Next Token : 1, Posbility: 0.0115
Next Token : _, Posbility: 0.0215
Next Token :  =, Posbility: 0.9141
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0094
Next Token :  [, Posbility: 0.0155
Next Token : 
, Posbility: 0.0256
Next Token :  String, Posbility: 0.0698
Next Token :  , Posbility: 0.8477
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0090
Next Token : Seq, Posbility: 0.0520
Next Token : Array, Posbility: 0.0520
Next Token : s, Posbility: 0.0972
Next Token : List, Posbility: 0.7188
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : _, Posbility: 0.0005
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : last, Posbility: 0.0312
Next Token : map, Posbility: 0.0354
Next Token : find, Posbility: 0.0515
Next Token : filter, Posbility: 0.1592
Next Token : rev, Posbility: 0.4316
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0004
Next Token :  ~, Posbility: 0.0009
Next Token : ., Posbility: 0.0024
Next Token : _, Posbility: 0.0259
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0022
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0003
Next Token :  , Posbility: 0.0005
Next Token :  =, Posbility: 0.0005
Next Token : 
, Posbility: 0.0012
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0019
Next Token :  , Posbility: 0.0022
Next Token : 

, Posbility: 0.0085
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0001
Next Token :       , Posbility: 0.0003
Next Token :     , Posbility: 0.0008
Next Token :  , Posbility: 0.0017
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0601
Next Token : if, Posbility: 0.0601
Next Token : List, Posbility: 0.1270
Next Token : match, Posbility: 0.1270
Next Token : let, Posbility: 0.5039
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0262
Next Token :  a, Posbility: 0.0337
Next Token :  first, Posbility: 0.0337
Next Token :  rec, Posbility: 0.0713
Next Token :  , Posbility: 0.5977
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : p, Posbility: 0.0175
Next Token : (, Posbility: 0.0537
Next Token : b, Posbility: 0.0537
Next Token : x, Posbility: 0.0889
Next Token : s, Posbility: 0.5117
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0050
Next Token : 1, Posbility: 0.0050
Next Token : ', Posbility: 0.0064
Next Token : _, Posbility: 0.0083
Next Token :  =, Posbility: 0.9570
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0057
Next Token :  [, Posbility: 0.0093
Next Token : 
, Posbility: 0.0154
Next Token :  String, Posbility: 0.1138
Next Token :  , Posbility: 0.8398
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0078
Next Token : Array, Posbility: 0.0078
Next Token : Seq, Posbility: 0.0078
Next Token : s, Posbility: 0.0272
Next Token : List, Posbility: 0.9023
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0004
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : take, Posbility: 0.0454
Next Token : map, Posbility: 0.0957
Next Token : find, Posbility: 0.1230
Next Token : rev, Posbility: 0.1582
Next Token : filter, Posbility: 0.1582
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0135
Next Token :  ~, Posbility: 0.0197
Next Token :  is, Posbility: 0.0197
Next Token : _, Posbility: 0.0776
Next Token :  , Posbility: 0.8320
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Fun, Posbility: 0.0016
Next Token : List, Posbility: 0.0023
Next Token : f, Posbility: 0.0034
Next Token : s, Posbility: 0.0286
Next Token : (, Posbility: 0.9453
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : f, Posbility: 0.0059
Next Token : fn, Posbility: 0.0233
Next Token : String, Posbility: 0.0437
Next Token : function, Posbility: 0.0923
Next Token : fun, Posbility: 0.7734
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0125
Next Token :  v, Posbility: 0.0206
Next Token :  l, Posbility: 0.0300
Next Token :  a, Posbility: 0.0339
Next Token :  , Posbility: 0.8789
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0161
Next Token : ch, Posbility: 0.0266
Next Token : s, Posbility: 0.0439
Next Token : c, Posbility: 0.3242
Next Token : x, Posbility: 0.5352
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0001
Next Token :  =>, Posbility: 0.0001
Next Token : ->, Posbility: 0.0002
Next Token : s, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0138
Next Token :  ', Posbility: 0.0177
Next Token : 
, Posbility: 0.0292
Next Token :  String, Posbility: 0.1309
Next Token :  , Posbility: 0.7539
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (', Posbility: 0.0054
Next Token : List, Posbility: 0.0147
Next Token : (, Posbility: 0.0400
Next Token : Char, Posbility: 0.0845
Next Token : x, Posbility: 0.8047
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  >=, Posbility: 0.0033
Next Token :  !=, Posbility: 0.0149
Next Token :  ==, Posbility: 0.0405
Next Token :  , Posbility: 0.1104
Next Token :  =, Posbility: 0.8125
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0023
Next Token :  '#, Posbility: 0.0064
Next Token :  , Posbility: 0.0173
Next Token :  ", Posbility: 0.0173
Next Token :  ', Posbility: 0.9453
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = '
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0003
Next Token :  a, Posbility: 0.0004
Next Token : A, Posbility: 0.0004
Next Token : b, Posbility: 0.1475
Next Token : a, Posbility: 0.8477
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = 'a
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = 'b
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = 'A
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = ' a
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = 'x
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0004
Next Token :  a, Posbility: 0.0007
Next Token : ab, Posbility: 0.0036
Next Token : b, Posbility: 0.2207
Next Token : a, Posbility: 0.7695
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ");, Posbility: 0.0004
Next Token : "|", Posbility: 0.0013
Next Token : ";, Posbility: 0.0074
Next Token : ", Posbility: 0.3164
Next Token : "), Posbility: 0.6719
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a")
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0001
Next Token :  |, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  ~, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ->, Posbility: 0.0001
Next Token : ::, Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token : (, Posbility: 0.0019
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0120
Next Token : 
, Posbility: 0.0198
Next Token :  |, Posbility: 0.0225
Next Token :  =, Posbility: 0.0693
Next Token :  in, Posbility: 0.8438
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0010
Next Token :  , Posbility: 0.0022
Next Token : 

, Posbility: 0.0025
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0001
Next Token :       , Posbility: 0.0002
Next Token :     , Posbility: 0.0006
Next Token :  , Posbility: 0.0022
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0430
Next Token : s, Posbility: 0.0552
Next Token : match, Posbility: 0.0625
Next Token : List, Posbility: 0.1328
Next Token : let, Posbility: 0.5938
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  rec, Posbility: 0.0027
Next Token :  a, Posbility: 0.0030
Next Token :  l, Posbility: 0.0034
Next Token :  len, Posbility: 0.0106
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0019
Next Token : (, Posbility: 0.0021
Next Token : b, Posbility: 0.0031
Next Token : x, Posbility: 0.0107
Next Token : s, Posbility: 0.9648
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0007
Next Token : 1, Posbility: 0.0010
Next Token : ,, Posbility: 0.0012
Next Token : _, Posbility: 0.0015
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0004
Next Token :  match, Posbility: 0.0031
Next Token : 
, Posbility: 0.0040
Next Token :  String, Posbility: 0.0139
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Option, Posbility: 0.0005
Next Token : (, Posbility: 0.0015
Next Token : if, Posbility: 0.0015
Next Token : s, Posbility: 0.0040
Next Token : List, Posbility: 0.9883
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : find, Posbility: 0.0250
Next Token : length, Posbility: 0.0322
Next Token : map, Posbility: 0.0874
Next Token : rev, Posbility: 0.2383
Next Token : filter, Posbility: 0.3926
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0010
Next Token :  not, Posbility: 0.0013
Next Token :  ((, Posbility: 0.0022
Next Token : _, Posbility: 0.0059
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Fun, Posbility: 0.0001
Next Token : s, Posbility: 0.0002
Next Token : end, Posbility: 0.0005
Next Token : x, Posbility: 0.0006
Next Token : (, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : String, Posbility: 0.0001
Next Token : fn, Posbility: 0.0001
Next Token : function, Posbility: 0.0013
Next Token : not, Posbility: 0.0013
Next Token : fun, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0001
Next Token :  a, Posbility: 0.0001
Next Token :  i, Posbility: 0.0001
Next Token :  v, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0003
Next Token : y, Posbility: 0.0003
Next Token : s, Posbility: 0.0004
Next Token : _, Posbility: 0.0019
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0007
Next Token :  !, Posbility: 0.0019
Next Token :  String, Posbility: 0.0040
Next Token :  not, Posbility: 0.0059
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0003
Next Token : List, Posbility: 0.0005
Next Token : Char, Posbility: 0.0010
Next Token : (, Posbility: 0.0025
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ~, Posbility: 0.0002
Next Token :  ==, Posbility: 0.0010
Next Token :  , Posbility: 0.0085
Next Token :  !=, Posbility: 0.0109
Next Token :  =, Posbility: 0.9805
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  "\, Posbility: 0.0002
Next Token :  "'", Posbility: 0.0003
Next Token :  , Posbility: 0.0025
Next Token :  ', Posbility: 0.0067
Next Token :  ", Posbility: 0.9883
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : z, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : a, Posbility: 0.0005
Next Token : b, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ")), Posbility: 0.0000
Next Token : ");, Posbility: 0.0000
Next Token : ";, Posbility: 0.0001
Next Token : ", Posbility: 0.0110
Next Token : "), Posbility: 0.9883
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b")
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token :  ~, Posbility: 0.0008
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0025
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0009
Next Token :  |, Posbility: 0.0013
Next Token : 
, Posbility: 0.0017
Next Token :  =, Posbility: 0.0067
Next Token :  in, Posbility: 0.9883
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0005
Next Token :  , Posbility: 0.0009
Next Token : 

, Posbility: 0.0052
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0001
Next Token :       , Posbility: 0.0002
Next Token :     , Posbility: 0.0008
Next Token :  , Posbility: 0.0028
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0630
Next Token : String, Posbility: 0.0913
Next Token : s, Posbility: 0.1172
Next Token : let, Posbility: 0.2188
Next Token : List, Posbility: 0.3184
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : not, Posbility: 0.0215
Next Token : member, Posbility: 0.0276
Next Token : empty, Posbility: 0.0354
Next Token : is, Posbility: 0.0962
Next Token : length, Posbility: 0.7109
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0005
Next Token : (, Posbility: 0.0032
Next Token : _, Posbility: 0.0099
Next Token :  =, Posbility: 0.0938
Next Token :  , Posbility: 0.8906
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length 
 score:False
Error type: noerr
---------------------------
Next Token : ^, Posbility: 0.0001
Next Token : <, Posbility: 0.0012
Next Token : >, Posbility: 0.0019
Next Token : (, Posbility: 0.0140
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0084
Next Token :  ==, Posbility: 0.1689
Next Token :  , Posbility: 0.1689
Next Token :  >=, Posbility: 0.1689
Next Token :  =, Posbility: 0.4609
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0;, Posbility: 0.0022
Next Token :  4, Posbility: 0.0060
Next Token :  , Posbility: 0.3262
Next Token :  0, Posbility: 0.3262
Next Token :  1, Posbility: 0.3262
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
 score:False
Error type: noerr
---------------------------
Next Token :  and, Posbility: 0.0131
Next Token : L, Posbility: 0.0190
Next Token :  &&, Posbility: 0.0664
Next Token : 

, Posbility: 0.3828
Next Token : 
, Posbility: 0.4922
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1

 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0330
Next Token : ;, Posbility: 0.0422
Next Token : ```, Posbility: 0.0479
Next Token : 

, Posbility: 0.0542
Next Token : end, Posbility: 0.0952
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
end
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0098
Next Token : ;, Posbility: 0.0135
Next Token : s, Posbility: 0.0391
Next Token : 
, Posbility: 0.3262
Next Token : 

, Posbility: 0.5391
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
end


 score:True
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
end

 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0019
Next Token :  =, Posbility: 0.0031
Next Token : 
, Posbility: 0.0045
Next Token : 

, Posbility: 0.0095
Next Token : _, Posbility: 0.9688
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_
 score:False
Error type: noerr
---------------------------
Next Token : string, Posbility: 0.0001
Next Token : of, Posbility: 0.0001
Next Token : a, Posbility: 0.0001
Next Token : end, Posbility: 0.0067
Next Token : with, Posbility: 0.9922
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  a, Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_
 score:False
Error type: noerr
---------------------------
Next Token : string, Posbility: 0.0000
Next Token : any, Posbility: 0.0001
Next Token : b, Posbility: 0.0003
Next Token : ab, Posbility: 0.0007
Next Token : a, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token : ., Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : a, Posbility: 0.0001
Next Token : b, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0076
Next Token :  =, Posbility: 0.0076
Next Token :  "", Posbility: 0.0339
Next Token :  , Posbility: 0.0435
Next Token :  ", Posbility: 0.8750
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : aaa, Posbility: 0.0262
Next Token : aa, Posbility: 0.0297
Next Token : ab, Posbility: 0.0913
Next Token : abc, Posbility: 0.1177
Next Token : a, Posbility: 0.3184
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : B, Posbility: 0.0226
Next Token : bbb, Posbility: 0.0255
Next Token : \, Posbility: 0.0327
Next Token : ", Posbility: 0.2139
Next Token :  , Posbility: 0.4531
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ab, Posbility: 0.0060
Next Token : abc, Posbility: 0.0087
Next Token : bc, Posbility: 0.0143
Next Token : bb, Posbility: 0.0184
Next Token : b, Posbility: 0.8906
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0021
Next Token :  a, Posbility: 0.0177
Next Token : ";, Posbility: 0.0227
Next Token :  , Posbility: 0.0898
Next Token : ", Posbility: 0.8516
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b"
 score:False
Error type: noerr
---------------------------
Next Token :  ==, Posbility: 0.0277
Next Token : 

, Posbility: 0.1094
Next Token : 
, Posbility: 0.1406
Next Token :  , Posbility: 0.2051
Next Token :  =, Posbility: 0.4336
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0018
Next Token :  , Posbility: 0.0018
Next Token :  false, Posbility: 0.0102
Next Token :  True, Posbility: 0.0664
Next Token :  true, Posbility: 0.9180
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
 score:False
Error type: noerr
---------------------------
Next Token :  (*, Posbility: 0.0029
Next Token :  , Posbility: 0.0078
Next Token : ;, Posbility: 0.1211
Next Token : 

, Posbility: 0.1553
Next Token : 
, Posbility: 0.6953
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true

 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0432
Next Token : ```, Posbility: 0.0669
Next Token : let, Posbility: 0.1611
Next Token : ;, Posbility: 0.2344
Next Token : end, Posbility: 0.3398
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
end
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token : _, Posbility: 0.0022
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  with, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_
 score:False
Error type: noerr
---------------------------
Next Token : after, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token : only, Posbility: 0.0000
Next Token : without, Posbility: 0.0000
Next Token : with, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with
 score:False
Error type: noerr
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  a, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_
 score:False
Error type: noerr
---------------------------
Next Token : an, Posbility: 0.0000
Next Token : ab, Posbility: 0.0000
Next Token : any, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : a, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : b, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b
 score:False
Error type: noerr
---------------------------
Next Token :  "\, Posbility: 0.0004
Next Token : (", Posbility: 0.0005
Next Token :  , Posbility: 0.0035
Next Token :  "", Posbility: 0.0178
Next Token :  ", Posbility: 0.9766
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  a, Posbility: 0.0121
Next Token : aa, Posbility: 0.0330
Next Token : ab, Posbility: 0.0698
Next Token : b, Posbility: 0.1021
Next Token : a, Posbility: 0.6641
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : \, Posbility: 0.0188
Next Token :   , Posbility: 0.0240
Next Token :  a, Posbility: 0.0654
Next Token : ", Posbility: 0.3320
Next Token :  , Posbility: 0.4277
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ab, Posbility: 0.0574
Next Token : bc, Posbility: 0.0574
Next Token : bb, Posbility: 0.1216
Next Token : c, Posbility: 0.2275
Next Token : b, Posbility: 0.3750
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0175
Next Token :  ", Posbility: 0.0287
Next Token : ", Posbility: 0.1133
Next Token :  a, Posbility: 0.1289
Next Token :  , Posbility: 0.6523
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : d, Posbility: 0.0033
Next Token : ab, Posbility: 0.0033
Next Token : x, Posbility: 0.0070
Next Token : b, Posbility: 0.0459
Next Token : c, Posbility: 0.9180
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : def, Posbility: 0.0003
Next Token :  ", Posbility: 0.0005
Next Token :  a, Posbility: 0.0070
Next Token :  , Posbility: 0.0752
Next Token : ", Posbility: 0.9141
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c"
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  !, Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token :   , Posbility: 0.0006
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c" =
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c"  
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c" 
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c" !
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c"

 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : def, Posbility: 0.0033
Next Token : x, Posbility: 0.0043
Next Token : c, Posbility: 0.0043
Next Token : b, Posbility: 0.0520
Next Token : d, Posbility: 0.9219
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ef, Posbility: 0.0005
Next Token :  ", Posbility: 0.0009
Next Token :  a, Posbility: 0.0067
Next Token :  , Posbility: 0.2207
Next Token : ", Posbility: 0.7695
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d"
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token :   , Posbility: 0.0004
Next Token :  , Posbility: 0.0008
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d" =
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d" 
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d"  
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d"

 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d" !
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : d, Posbility: 0.0007
Next Token : x, Posbility: 0.0010
Next Token : f, Posbility: 0.0040
Next Token : b, Posbility: 0.0177
Next Token : e, Posbility: 0.9688
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0003
Next Token :  ", Posbility: 0.0013
Next Token :  a, Posbility: 0.0053
Next Token :  , Posbility: 0.3730
Next Token : ", Posbility: 0.6172
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e"
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :   , Posbility: 0.0003
Next Token :  , Posbility: 0.0008
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e" =
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e" 
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e"  
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e"

 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e" !
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : z, Posbility: 0.0007
Next Token : g, Posbility: 0.0013
Next Token : h, Posbility: 0.0019
Next Token : b, Posbility: 0.0085
Next Token : f, Posbility: 0.9805
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0012
Next Token :  gh, Posbility: 0.0032
Next Token :  a, Posbility: 0.0068
Next Token :  , Posbility: 0.3711
Next Token : ", Posbility: 0.6133
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f"
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token :   , Posbility: 0.0004
Next Token :  , Posbility: 0.0008
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f" =
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f" 
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f"  
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f"

 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f" |
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0005
Next Token : ghi, Posbility: 0.0006
Next Token : h, Posbility: 0.0028
Next Token : b, Posbility: 0.0031
Next Token : g, Posbility: 0.9883
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  hg, Posbility: 0.0009
Next Token :  ", Posbility: 0.0023
Next Token :  a, Posbility: 0.0101
Next Token : ", Posbility: 0.4297
Next Token :  , Posbility: 0.5508
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : z, Posbility: 0.0002
Next Token : hh, Posbility: 0.0002
Next Token : j, Posbility: 0.0005
Next Token : b, Posbility: 0.0006
Next Token : h, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  a, Posbility: 0.0030
Next Token :  ii, Posbility: 0.0049
Next Token :  , Posbility: 0.0762
Next Token : ", Posbility: 0.3418
Next Token :  i, Posbility: 0.5625
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0009
Next Token : j, Posbility: 0.0013
Next Token :  k, Posbility: 0.0383
Next Token : ", Posbility: 0.0815
Next Token :  , Posbility: 0.8750
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : z, Posbility: 0.0001
Next Token : b, Posbility: 0.0002
Next Token : jk, Posbility: 0.0002
Next Token : h, Posbility: 0.0002
Next Token : j, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  l, Posbility: 0.0013
Next Token :  ", Posbility: 0.0015
Next Token :  , Posbility: 0.0305
Next Token : ", Posbility: 0.1758
Next Token :  k, Posbility: 0.7852
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  k, Posbility: 0.0009
Next Token :  a, Posbility: 0.0010
Next Token :  , Posbility: 0.0564
Next Token : ", Posbility: 0.0564
Next Token :  l, Posbility: 0.8828
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0003
Next Token :  a, Posbility: 0.0003
Next Token :  l, Posbility: 0.0016
Next Token : ", Posbility: 0.0371
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : n, Posbility: 0.0004
Next Token : mn, Posbility: 0.0004
Next Token : mM, Posbility: 0.0005
Next Token : o, Posbility: 0.0015
Next Token : m, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0006
Next Token :  nn, Posbility: 0.0010
Next Token :  no, Posbility: 0.0143
Next Token : ", Posbility: 0.0938
Next Token :  , Posbility: 0.8867
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0002
Next Token : w, Posbility: 0.0002
Next Token : m, Posbility: 0.0002
Next Token : o, Posbility: 0.0110
Next Token : n, Posbility: 0.9883
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  a, Posbility: 0.0009
Next Token :  ", Posbility: 0.0010
Next Token :  op, Posbility: 0.0013
Next Token : ", Posbility: 0.2207
Next Token :  , Posbility: 0.7695
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : \, Posbility: 0.0001
Next Token : w, Posbility: 0.0001
Next Token : q, Posbility: 0.0001
Next Token : p, Posbility: 0.0003
Next Token : o, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0004
Next Token :  op, Posbility: 0.0006
Next Token :  ", Posbility: 0.0007
Next Token : ", Posbility: 0.0757
Next Token :  , Posbility: 0.9180
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : \, Posbility: 0.0001
Next Token : o, Posbility: 0.0002
Next Token : q, Posbility: 0.0007
Next Token : pq, Posbility: 0.0007
Next Token : p, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  pr, Posbility: 0.0014
Next Token :  a, Posbility: 0.0030
Next Token :  qu, Posbility: 0.0044
Next Token : ", Posbility: 0.1455
Next Token :  , Posbility: 0.8398
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : qq, Posbility: 0.0002
Next Token : p, Posbility: 0.0003
Next Token : pq, Posbility: 0.0003
Next Token : r, Posbility: 0.0025
Next Token : q, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  v, Posbility: 0.0003
Next Token :  rR, Posbility: 0.0005
Next Token :  a, Posbility: 0.0005
Next Token : ", Posbility: 0.0371
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : w, Posbility: 0.0001
Next Token : q, Posbility: 0.0001
Next Token : s, Posbility: 0.0002
Next Token : r, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  re, Posbility: 0.0002
Next Token :  ", Posbility: 0.0004
Next Token :  a, Posbility: 0.0006
Next Token : ", Posbility: 0.0532
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : w, Posbility: 0.0004
Next Token : q, Posbility: 0.0004
Next Token : r, Posbility: 0.0012
Next Token : t, Posbility: 0.0097
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  a, Posbility: 0.0001
Next Token :  ", Posbility: 0.0004
Next Token : ", Posbility: 0.0229
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : s, Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token : w, Posbility: 0.0001
Next Token : u, Posbility: 0.0003
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  ", Posbility: 0.0001
Next Token :  v, Posbility: 0.0028
Next Token : ", Posbility: 0.0159
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : t, Posbility: 0.0001
Next Token : y, Posbility: 0.0001
Next Token : w, Posbility: 0.0002
Next Token : x, Posbility: 0.0002
Next Token : u, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0001
Next Token :  vi, Posbility: 0.0003
Next Token : ", Posbility: 0.0045
Next Token :  , Posbility: 0.0330
Next Token :  v, Posbility: 0.9609
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  W, Posbility: 0.0003
Next Token :  ", Posbility: 0.0004
Next Token :  v, Posbility: 0.0005
Next Token : ", Posbility: 0.0229
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : \, Posbility: 0.0001
Next Token : z, Posbility: 0.0007
Next Token : y, Posbility: 0.0027
Next Token : x, Posbility: 0.0228
Next Token : w, Posbility: 0.9727
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  ", Posbility: 0.0002
Next Token : ", Posbility: 0.0097
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : w, Posbility: 0.0001
Next Token : xyz, Posbility: 0.0001
Next Token : z, Posbility: 0.0015
Next Token : y, Posbility: 0.0067
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  k, Posbility: 0.0001
Next Token :  ", Posbility: 0.0002
Next Token : ", Posbility: 0.0159
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : yy, Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : z, Posbility: 0.0015
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  k, Posbility: 0.0002
Next Token :  za, Posbility: 0.0002
Next Token : z, Posbility: 0.0003
Next Token : ", Posbility: 0.0097
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : zz, Posbility: 0.0000
Next Token : Z, Posbility: 0.0000
Next Token : y, Posbility: 0.0003
Next Token : z, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  0, Posbility: 0.0150
Next Token :  a, Posbility: 0.0281
Next Token :  A, Posbility: 0.0408
Next Token :  , Posbility: 0.0593
Next Token : ", Posbility: 0.8203
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z"
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0003
Next Token :  |, Posbility: 0.0008
Next Token :  , Posbility: 0.0010
Next Token : 
, Posbility: 0.0028
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z" =
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z"

 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z" 
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z" |
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z"  
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 123, Posbility: 0.0498
Next Token : !", Posbility: 0.0564
Next Token : z, Posbility: 0.0820
Next Token : aa, Posbility: 0.1973
Next Token : b, Posbility: 0.2539
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  k, Posbility: 0.0017
Next Token :  ", Posbility: 0.0033
Next Token :  a, Posbility: 0.0240
Next Token :  , Posbility: 0.1562
Next Token : ", Posbility: 0.7969
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b"
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0005
Next Token :  |, Posbility: 0.0006
Next Token :  , Posbility: 0.0013
Next Token : 
, Posbility: 0.0052
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b" =
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b"

 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b" 
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b" |
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b"


 score:True
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : z, Posbility: 0.0052
Next Token : d, Posbility: 0.0076
Next Token : y, Posbility: 0.0097
Next Token : b, Posbility: 0.4141
Next Token : c, Posbility: 0.5312
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0018
Next Token :  k, Posbility: 0.0044
Next Token :  a, Posbility: 0.0105
Next Token : ", Posbility: 0.2383
Next Token :  , Posbility: 0.7344
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0007
Next Token : f, Posbility: 0.0012
Next Token : e, Posbility: 0.0019
Next Token : b, Posbility: 0.0036
Next Token : d, Posbility: 0.9883
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  k, Posbility: 0.0006
Next Token :  ", Posbility: 0.0007
Next Token :  a, Posbility: 0.0037
Next Token : ", Posbility: 0.0947
Next Token :  , Posbility: 0.8984
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : g, Posbility: 0.0002
Next Token : z, Posbility: 0.0002
Next Token : b, Posbility: 0.0013
Next Token : f, Posbility: 0.0019
Next Token : e, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0006
Next Token :  k, Posbility: 0.0006
Next Token :  a, Posbility: 0.0010
Next Token : ", Posbility: 0.0371
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : h, Posbility: 0.0002
Next Token : fg, Posbility: 0.0002
Next Token : b, Posbility: 0.0006
Next Token : g, Posbility: 0.0009
Next Token : f, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  v, Posbility: 0.0006
Next Token :  a, Posbility: 0.0011
Next Token :  gh, Posbility: 0.0023
Next Token : ", Posbility: 0.0530
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : o, Posbility: 0.0001
Next Token : j, Posbility: 0.0001
Next Token : b, Posbility: 0.0003
Next Token : h, Posbility: 0.0010
Next Token : g, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  a, Posbility: 0.0007
Next Token :  i, Posbility: 0.0010
Next Token :  k, Posbility: 0.0022
Next Token : ", Posbility: 0.0140
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : hi, Posbility: 0.0000
Next Token : g, Posbility: 0.0001
Next Token : j, Posbility: 0.0001
Next Token : h, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0003
Next Token :  ii, Posbility: 0.0009
Next Token : ", Posbility: 0.0106
Next Token :  , Posbility: 0.0369
Next Token :  i, Posbility: 0.9492
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0001
Next Token :  l, Posbility: 0.0002
Next Token :  k, Posbility: 0.0017
Next Token : ", Posbility: 0.0041
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : o, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : jk, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : j, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0004
Next Token :  l, Posbility: 0.0013
Next Token :  , Posbility: 0.0085
Next Token : ", Posbility: 0.0096
Next Token :  k, Posbility: 0.9805
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0001
Next Token :  k, Posbility: 0.0014
Next Token : ", Posbility: 0.0045
Next Token :  , Posbility: 0.0330
Next Token :  l, Posbility: 0.9609
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  l, Posbility: 0.0001
Next Token :  ", Posbility: 0.0001
Next Token : ", Posbility: 0.0046
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : mM, Posbility: 0.0001
Next Token : \, Posbility: 0.0001
Next Token : o, Posbility: 0.0002
Next Token : n, Posbility: 0.0010
Next Token : m, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0001
Next Token : ";, Posbility: 0.0001
Next Token :  no, Posbility: 0.0003
Next Token : ", Posbility: 0.0046
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : m, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : o, Posbility: 0.0013
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  l, Posbility: 0.0001
Next Token : ";, Posbility: 0.0001
Next Token :  ", Posbility: 0.0002
Next Token : ", Posbility: 0.0097
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : p, Posbility: 0.0003
Next Token : o, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  ", Posbility: 0.0002
Next Token : ", Posbility: 0.0036
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : o, Posbility: 0.0001
Next Token : pq, Posbility: 0.0003
Next Token : q, Posbility: 0.0004
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0001
Next Token :  qu, Posbility: 0.0001
Next Token :  v, Posbility: 0.0002
Next Token : ", Posbility: 0.0076
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : p, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : qr, Posbility: 0.0001
Next Token : r, Posbility: 0.0025
Next Token : q, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token :  rR, Posbility: 0.0000
Next Token :  v, Posbility: 0.0001
Next Token : ", Posbility: 0.0028
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : t, Posbility: 0.0000
Next Token : rs, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : s, Posbility: 0.0005
Next Token : r, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token : ", Posbility: 0.0041
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : u, Posbility: 0.0000
Next Token : w, Posbility: 0.0000
Next Token : t, Posbility: 0.0019
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  v, Posbility: 0.0001
Next Token :  ", Posbility: 0.0001
Next Token : ", Posbility: 0.0046
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : w, Posbility: 0.0000
Next Token : u, Posbility: 0.0003
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token :  v, Posbility: 0.0006
Next Token : ", Posbility: 0.0022
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : uv, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : w, Posbility: 0.0001
Next Token : u, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token :  vi, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 0.0041
Next Token :  v, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token :  v, Posbility: 0.0001
Next Token : ", Posbility: 0.0015
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : b, Posbility: 0.0000
Next Token : z, Posbility: 0.0001
Next Token : y, Posbility: 0.0001
Next Token : x, Posbility: 0.0013
Next Token : w, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  ", Posbility: 0.0001
Next Token : ", Posbility: 0.0036
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : b, Posbility: 0.0000
Next Token : w, Posbility: 0.0001
Next Token : z, Posbility: 0.0004
Next Token : y, Posbility: 0.0017
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  k, Posbility: 0.0001
Next Token :  ", Posbility: 0.0001
Next Token : ", Posbility: 0.0076
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : yy, Posbility: 0.0000
Next Token : b, Posbility: 0.0001
Next Token : z, Posbility: 0.0015
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token : z, Posbility: 0.0002
Next Token :  k, Posbility: 0.0003
Next Token : ", Posbility: 0.0067
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0001
Next Token : zz, Posbility: 0.0001
Next Token : y, Posbility: 0.0001
Next Token : b, Posbility: 0.0009
Next Token : z, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0055
Next Token :  k, Posbility: 0.0070
Next Token :  a, Posbility: 0.0854
Next Token :  , Posbility: 0.3828
Next Token : ", Posbility: 0.4922
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z"
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0011
Next Token :  , Posbility: 0.0031
Next Token :  |, Posbility: 0.0074
Next Token : 
, Posbility: 0.0200
Next Token :  =, Posbility: 0.9648
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z" =
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z"

 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z" |
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z" 
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z"


 score:True
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0025
Next Token : g, Posbility: 0.0037
Next Token : z, Posbility: 0.0069
Next Token : c, Posbility: 0.1572
Next Token : b, Posbility: 0.8008
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  k, Posbility: 0.0010
Next Token :  ", Posbility: 0.0014
Next Token :  a, Posbility: 0.0031
Next Token : ", Posbility: 0.2422
Next Token :  , Posbility: 0.7461
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : h, Posbility: 0.0003
Next Token : e, Posbility: 0.0004
Next Token : d, Posbility: 0.0009
Next Token : b, Posbility: 0.0052
Next Token : c, Posbility: 0.9922
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  v, Posbility: 0.0001
Next Token :  a, Posbility: 0.0002
Next Token :  ", Posbility: 0.0002
Next Token : ", Posbility: 0.0374
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : g, Posbility: 0.0000
Next Token : b, Posbility: 0.0001
Next Token : f, Posbility: 0.0002
Next Token : e, Posbility: 0.0007
Next Token : d, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0001
Next Token : ";, Posbility: 0.0001
Next Token :  a, Posbility: 0.0002
Next Token : ", Posbility: 0.0140
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : h, Posbility: 0.0000
Next Token : g, Posbility: 0.0001
Next Token : b, Posbility: 0.0001
Next Token : f, Posbility: 0.0005
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0001
Next Token :  a, Posbility: 0.0001
Next Token :  k, Posbility: 0.0001
Next Token : ", Posbility: 0.0059
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : b, Posbility: 0.0000
Next Token : h, Posbility: 0.0001
Next Token : fg, Posbility: 0.0002
Next Token : g, Posbility: 0.0017
Next Token : f, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  gh, Posbility: 0.0003
Next Token : ", Posbility: 0.0124
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : j, Posbility: 0.0000
Next Token : b, Posbility: 0.0001
Next Token : h, Posbility: 0.0004
Next Token : g, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  i, Posbility: 0.0002
Next Token :  k, Posbility: 0.0003
Next Token : ", Posbility: 0.0028
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : hi, Posbility: 0.0000
Next Token : g, Posbility: 0.0000
Next Token : j, Posbility: 0.0000
Next Token : h, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  k, Posbility: 0.0001
Next Token :  ii, Posbility: 0.0007
Next Token : ", Posbility: 0.0015
Next Token :  , Posbility: 0.0041
Next Token :  i, Posbility: 0.9922
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  l, Posbility: 0.0001
Next Token :  k, Posbility: 0.0006
Next Token : ", Posbility: 0.0010
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : jj, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : jk, Posbility: 0.0000
Next Token : j, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  l, Posbility: 0.0002
Next Token :  , Posbility: 0.0006
Next Token : ", Posbility: 0.0009
Next Token :  k, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token :  k, Posbility: 0.0008
Next Token : ", Posbility: 0.0012
Next Token :  , Posbility: 0.0015
Next Token :  l, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token :  l, Posbility: 0.0001
Next Token : ", Posbility: 0.0013
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : o, Posbility: 0.0000
Next Token : n, Posbility: 0.0009
Next Token : m, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token :  no, Posbility: 0.0000
Next Token : ", Posbility: 0.0012
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : o, Posbility: 0.0004
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token :  l, Posbility: 0.0001
Next Token : ";, Posbility: 0.0001
Next Token : ", Posbility: 0.0036
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : p, Posbility: 0.0001
Next Token : o, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token : ", Posbility: 0.0010
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : r, Posbility: 0.0000
Next Token : o, Posbility: 0.0000
Next Token : pq, Posbility: 0.0001
Next Token : q, Posbility: 0.0003
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token :  v, Posbility: 0.0001
Next Token : ", Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : qr, Posbility: 0.0000
Next Token : r, Posbility: 0.0003
Next Token : q, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token : ", Posbility: 0.0009
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : t, Posbility: 0.0000
Next Token : rs, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token : r, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token : ", Posbility: 0.0015
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : w, Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : t, Posbility: 0.0006
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token : ", Posbility: 0.0025
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : z, Posbility: 0.0000
Next Token : w, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : u, Posbility: 0.0002
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token :  v, Posbility: 0.0003
Next Token : ", Posbility: 0.0013
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : w, Posbility: 0.0000
Next Token : u, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  va, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  vi, Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token :  v, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token : ", Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : b, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : x, Posbility: 0.0004
Next Token : w, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ";, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token : ", Posbility: 0.0028
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : w, Posbility: 0.0000
Next Token : z, Posbility: 0.0003
Next Token : y, Posbility: 0.0006
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token :  k, Posbility: 0.0001
Next Token : ", Posbility: 0.0032
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : yy, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : z, Posbility: 0.0009
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token : z, Posbility: 0.0001
Next Token :  k, Posbility: 0.0002
Next Token : ", Posbility: 0.0032
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : y, Posbility: 0.0001
Next Token : zz, Posbility: 0.0001
Next Token : c, Posbility: 0.0001
Next Token : b, Posbility: 0.0005
Next Token : z, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0037
Next Token :  k, Posbility: 0.0061
Next Token :  a, Posbility: 0.0576
Next Token : ", Posbility: 0.2930
Next Token :  , Posbility: 0.6211
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : f, Posbility: 0.0011
Next Token : d, Posbility: 0.0012
Next Token : g, Posbility: 0.0014
Next Token : c, Posbility: 0.0527
Next Token : b, Posbility: 0.9336
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  k, Posbility: 0.0006
Next Token :  ", Posbility: 0.0006
Next Token :  a, Posbility: 0.0012
Next Token : ", Posbility: 0.1060
Next Token :  , Posbility: 0.8867
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : f, Posbility: 0.0002
Next Token : e, Posbility: 0.0003
Next Token : d, Posbility: 0.0007
Next Token : b, Posbility: 0.0028
Next Token : c, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  ", Posbility: 0.0001
Next Token : ";, Posbility: 0.0001
Next Token : ", Posbility: 0.0179
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : g, Posbility: 0.0000
Next Token : b, Posbility: 0.0001
Next Token : f, Posbility: 0.0001
Next Token : e, Posbility: 0.0008
Next Token : d, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token :  a, Posbility: 0.0001
Next Token : ", Posbility: 0.0046
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : h, Posbility: 0.0000
Next Token : g, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : f, Posbility: 0.0003
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ", Posbility: 0.0025
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ff, Posbility: 0.0000
Next Token : h, Posbility: 0.0000
Next Token : fg, Posbility: 0.0001
Next Token : g, Posbility: 0.0007
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  gh, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token : ", Posbility: 0.0052
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : h, Posbility: 0.0003
Next Token : g, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  k, Posbility: 0.0001
Next Token :  i, Posbility: 0.0002
Next Token : ", Posbility: 0.0015
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : hi, Posbility: 0.0000
Next Token : g, Posbility: 0.0000
Next Token : j, Posbility: 0.0000
Next Token : h, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  k, Posbility: 0.0000
Next Token : ", Posbility: 0.0004
Next Token :  ii, Posbility: 0.0006
Next Token :  , Posbility: 0.0017
Next Token :  i, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  l, Posbility: 0.0001
Next Token : ", Posbility: 0.0004
Next Token :  k, Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : h, Posbility: 0.0000
Next Token : jk, Posbility: 0.0000
Next Token : jj, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : j, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  l, Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token : ", Posbility: 0.0004
Next Token :  k, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : l, Posbility: 0.0000
Next Token : ", Posbility: 0.0006
Next Token :  k, Posbility: 0.0007
Next Token :  , Posbility: 0.0012
Next Token :  l, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  k, Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token :  l, Posbility: 0.0003
Next Token : ", Posbility: 0.0009
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : mn, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : o, Posbility: 0.0000
Next Token : n, Posbility: 0.0019
Next Token : m, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token : ", Posbility: 0.0008
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : q, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : o, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token : ";, Posbility: 0.0001
Next Token :  l, Posbility: 0.0001
Next Token : ", Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : oh, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : p, Posbility: 0.0001
Next Token : o, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token : ", Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : r, Posbility: 0.0000
Next Token : o, Posbility: 0.0000
Next Token : pq, Posbility: 0.0002
Next Token : q, Posbility: 0.0003
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  k, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  v, Posbility: 0.0001
Next Token : ", Posbility: 0.0010
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : p, Posbility: 0.0000
Next Token : qq, Posbility: 0.0000
Next Token : qr, Posbility: 0.0000
Next Token : r, Posbility: 0.0002
Next Token : q, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token : ", Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : t, Posbility: 0.0000
Next Token : rs, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token : r, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token : ", Posbility: 0.0008
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : z, Posbility: 0.0000
Next Token : r, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : t, Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token :  v, Posbility: 0.0001
Next Token : ";, Posbility: 0.0001
Next Token : ", Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : z, Posbility: 0.0000
Next Token : w, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : u, Posbility: 0.0001
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  v, Posbility: 0.0006
Next Token : ", Posbility: 0.0010
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : uv, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : w, Posbility: 0.0000
Next Token : u, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  va, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  vi, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token :  v, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  v, Posbility: 0.0001
Next Token : ", Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : x, Posbility: 0.0004
Next Token : w, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ";, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token : ", Posbility: 0.0015
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : w, Posbility: 0.0000
Next Token : z, Posbility: 0.0001
Next Token : y, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token : ", Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : yy, Posbility: 0.0000
Next Token : z, Posbility: 0.0004
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token : z, Posbility: 0.0001
Next Token :  k, Posbility: 0.0001
Next Token : ", Posbility: 0.0015
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : zz, Posbility: 0.0001
Next Token : b, Posbility: 0.0001
Next Token : z, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  v, Posbility: 0.0025
Next Token :  k, Posbility: 0.0048
Next Token :  a, Posbility: 0.0242
Next Token : ", Posbility: 0.1572
Next Token :  , Posbility: 0.7969
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : e, Posbility: 0.0007
Next Token : f, Posbility: 0.0009
Next Token : g, Posbility: 0.0010
Next Token : c, Posbility: 0.0201
Next Token : b, Posbility: 0.9727
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0002
Next Token :  k, Posbility: 0.0002
Next Token :  a, Posbility: 0.0003
Next Token : ", Posbility: 0.0420
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : f, Posbility: 0.0001
Next Token : e, Posbility: 0.0002
Next Token : d, Posbility: 0.0004
Next Token : b, Posbility: 0.0006
Next Token : c, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : ";, Posbility: 0.0001
Next Token : ", Posbility: 0.0097
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : g, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : f, Posbility: 0.0001
Next Token : e, Posbility: 0.0007
Next Token : d, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ef, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token : ", Posbility: 0.0022
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : b, Posbility: 0.0000
Next Token : h, Posbility: 0.0000
Next Token : g, Posbility: 0.0000
Next Token : f, Posbility: 0.0002
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ", Posbility: 0.0010
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : e, Posbility: 0.0000
Next Token : h, Posbility: 0.0000
Next Token : fg, Posbility: 0.0001
Next Token : g, Posbility: 0.0007
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  i, Posbility: 0.0000
Next Token :  gh, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token : ", Posbility: 0.0032
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : j, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : h, Posbility: 0.0004
Next Token : g, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  k, Posbility: 0.0001
Next Token :  i, Posbility: 0.0002
Next Token : ", Posbility: 0.0013
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : hh, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : g, Posbility: 0.0000
Next Token : j, Posbility: 0.0000
Next Token : h, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  k, Posbility: 0.0000
Next Token : ", Posbility: 0.0003
Next Token :  ii, Posbility: 0.0013
Next Token :  , Posbility: 0.0017
Next Token :  i, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  l, Posbility: 0.0001
Next Token : ", Posbility: 0.0004
Next Token :  k, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ij, Posbility: 0.0000
Next Token : jj, Posbility: 0.0000
Next Token : h, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : j, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  l, Posbility: 0.0002
Next Token : ", Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token :  k, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ", Posbility: 0.0004
Next Token :  , Posbility: 0.0013
Next Token :  k, Posbility: 0.0015
Next Token :  l, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  k, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  l, Posbility: 0.0003
Next Token : ", Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : o, Posbility: 0.0000
Next Token : n, Posbility: 0.0019
Next Token : m, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ", Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : p, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : o, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  l, Posbility: 0.0001
Next Token : ", Posbility: 0.0012
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : oh, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : o, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ", Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : o, Posbility: 0.0000
Next Token : pq, Posbility: 0.0001
Next Token : q, Posbility: 0.0003
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  k, Posbility: 0.0000
Next Token :  l, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token : ", Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : p, Posbility: 0.0000
Next Token : qr, Posbility: 0.0000
Next Token : qq, Posbility: 0.0000
Next Token : r, Posbility: 0.0001
Next Token : q, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ", Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : rq, Posbility: 0.0000
Next Token : rs, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token : r, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ", Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : t, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token : ", Posbility: 0.0022
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : w, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : u, Posbility: 0.0000
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  k, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  v, Posbility: 0.0004
Next Token : ", Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : uv, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : w, Posbility: 0.0000
Next Token : u, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token : v, Posbility: 0.0000
Next Token :  vi, Posbility: 0.0000
Next Token :  , Posbility: 0.0006
Next Token :  v, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  i, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ww, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : x, Posbility: 0.0010
Next Token : w, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token :  v, Posbility: 0.0001
Next Token : ", Posbility: 0.0012
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : w, Posbility: 0.0000
Next Token : z, Posbility: 0.0001
Next Token : y, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token : ", Posbility: 0.0012
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : j, Posbility: 0.0000
Next Token : yy, Posbility: 0.0000
Next Token : yt, Posbility: 0.0000
Next Token : z, Posbility: 0.0002
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : z, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  k, Posbility: 0.0001
Next Token : ", Posbility: 0.0008
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : zz, Posbility: 0.0000
Next Token : zw, Posbility: 0.0000
Next Token : c, Posbility: 0.0001
Next Token : b, Posbility: 0.0001
Next Token : z, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  v, Posbility: 0.0020
Next Token :  k, Posbility: 0.0033
Next Token :  a, Posbility: 0.0100
Next Token : ", Posbility: 0.0742
Next Token :  , Posbility: 0.9023
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : e, Posbility: 0.0003
Next Token : f, Posbility: 0.0004
Next Token : g, Posbility: 0.0005
Next Token : c, Posbility: 0.0067
Next Token : b, Posbility: 0.9883
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  i, Posbility: 0.0001
Next Token :  k, Posbility: 0.0002
Next Token : ", Posbility: 0.0140
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : e, Posbility: 0.0001
Next Token : b, Posbility: 0.0002
Next Token : d, Posbility: 0.0003
Next Token : c, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ";, Posbility: 0.0001
Next Token : ", Posbility: 0.0036
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : g, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : e, Posbility: 0.0004
Next Token : d, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  i, Posbility: 0.0000
Next Token :  ef, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ", Posbility: 0.0008
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : h, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : g, Posbility: 0.0000
Next Token : f, Posbility: 0.0003
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ", Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : b, Posbility: 0.0000
Next Token : h, Posbility: 0.0000
Next Token : fg, Posbility: 0.0000
Next Token : g, Posbility: 0.0009
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  i, Posbility: 0.0000
Next Token :  gh, Posbility: 0.0000
Next Token :  v, Posbility: 0.0001
Next Token : ", Posbility: 0.0013
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : b, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : j, Posbility: 0.0000
Next Token : h, Posbility: 0.0003
Next Token : g, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token :  k, Posbility: 0.0001
Next Token :  i, Posbility: 0.0001
Next Token : ", Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : m, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : g, Posbility: 0.0000
Next Token : j, Posbility: 0.0000
Next Token : h, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  k, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token :  ii, Posbility: 0.0007
Next Token :  , Posbility: 0.0015
Next Token :  i, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  l, Posbility: 0.0002
Next Token :  k, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : jj, Posbility: 0.0000
Next Token : ij, Posbility: 0.0000
Next Token : h, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : j, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token :  l, Posbility: 0.0004
Next Token :  k, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : l, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token :  k, Posbility: 0.0009
Next Token :  , Posbility: 0.0012
Next Token :  l, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token :  l, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : n, Posbility: 0.0036
Next Token : m, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token :  l, Posbility: 0.0001
Next Token : ", Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : p, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : o, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  l, Posbility: 0.0003
Next Token : ", Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : oh, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : n, Posbility: 0.0003
Next Token : o, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : r, Posbility: 0.0000
Next Token : o, Posbility: 0.0000
Next Token : pq, Posbility: 0.0001
Next Token : q, Posbility: 0.0006
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  k, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  l, Posbility: 0.0001
Next Token : ", Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : o, Posbility: 0.0000
Next Token : qq, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : r, Posbility: 0.0005
Next Token : q, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : rq, Posbility: 0.0000
Next Token : rs, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : r, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  i, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : t, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ", Posbility: 0.0008
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : z, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : w, Posbility: 0.0000
Next Token : u, Posbility: 0.0000
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  k, Posbility: 0.0000
Next Token :  l, Posbility: 0.0001
Next Token : ", Posbility: 0.0002
Next Token :  v, Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : uv, Posbility: 0.0000
Next Token : w, Posbility: 0.0002
Next Token : t, Posbility: 0.0015
Next Token : u, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : v, Posbility: 0.0000
Next Token :  va, Posbility: 0.0000
Next Token :  vi, Posbility: 0.0001
Next Token :  , Posbility: 0.0013
Next Token :  v, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  k, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : m, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : x, Posbility: 0.0028
Next Token : w, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token : ", Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : q, Posbility: 0.0000
Next Token : w, Posbility: 0.0000
Next Token : z, Posbility: 0.0001
Next Token : y, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  i, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token : ", Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : j, Posbility: 0.0000
Next Token : yt, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : z, Posbility: 0.0003
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token :  k, Posbility: 0.0001
Next Token : ", Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : c, Posbility: 0.0001
Next Token : b, Posbility: 0.0006
Next Token : z, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  k, Posbility: 0.0010
Next Token :  v, Posbility: 0.0016
Next Token :  a, Posbility: 0.0092
Next Token : ", Posbility: 0.0525
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : d, Posbility: 0.0002
Next Token : f, Posbility: 0.0003
Next Token : g, Posbility: 0.0003
Next Token : c, Posbility: 0.0067
Next Token : b, Posbility: 0.9922
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  k, Posbility: 0.0001
Next Token :  l, Posbility: 0.0001
Next Token : ", Posbility: 0.0076
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : e, Posbility: 0.0000
Next Token : d, Posbility: 0.0004
Next Token : b, Posbility: 0.0010
Next Token : c, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ?", Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ", Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : b, Posbility: 0.0001
Next Token : e, Posbility: 0.0002
Next Token : d, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ", Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : d, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : g, Posbility: 0.0000
Next Token : f, Posbility: 0.0001
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ?, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : b, Posbility: 0.0000
Next Token : fg, Posbility: 0.0000
Next Token : h, Posbility: 0.0000
Next Token : g, Posbility: 0.0007
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  i, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token : ", Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : j, Posbility: 0.0000
Next Token : h, Posbility: 0.0003
Next Token : g, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : hi, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : g, Posbility: 0.0000
Next Token : j, Posbility: 0.0000
Next Token : h, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  k, Posbility: 0.0001
Next Token : ", Posbility: 0.0001
Next Token :  ii, Posbility: 0.0004
Next Token :  , Posbility: 0.0017
Next Token :  i, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  i, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  k, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : jj, Posbility: 0.0000
Next Token : ij, Posbility: 0.0000
Next Token : h, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : j, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : k, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  l, Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token :  k, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : l, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token :  k, Posbility: 0.0015
Next Token :  , Posbility: 0.0019
Next Token :  l, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  l, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : n, Posbility: 0.0041
Next Token : m, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : p, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : o, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token :  l, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : oh, Posbility: 0.0000
Next Token : p, Posbility: 0.0001
Next Token : q, Posbility: 0.0001
Next Token : n, Posbility: 0.0004
Next Token : o, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  k, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : r, Posbility: 0.0000
Next Token : pq, Posbility: 0.0000
Next Token : q, Posbility: 0.0009
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : qq, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : r, Posbility: 0.0001
Next Token : q, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : rq, Posbility: 0.0000
Next Token : rs, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : r, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : z, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token : ", Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : q, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : u, Posbility: 0.0000
Next Token : w, Posbility: 0.0000
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  l, Posbility: 0.0001
Next Token :  i, Posbility: 0.0001
Next Token : -, Posbility: 0.0002
Next Token :  v, Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : w, Posbility: 0.0002
Next Token : t, Posbility: 0.0032
Next Token : u, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : v, Posbility: 0.0000
Next Token :  va, Posbility: 0.0001
Next Token :  vi, Posbility: 0.0001
Next Token :  , Posbility: 0.0022
Next Token :  v, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : z, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : c, Posbility: 0.0001
Next Token : x, Posbility: 0.0012
Next Token : w, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ", Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : q, Posbility: 0.0002
Next Token : c, Posbility: 0.0002
Next Token : z, Posbility: 0.0003
Next Token : y, Posbility: 0.0008
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  k, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token : ", Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : yo, Posbility: 0.0000
Next Token : j, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : z, Posbility: 0.0001
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token : ", Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : m, Posbility: 0.0000
Next Token : zz, Posbility: 0.0000
Next Token : c, Posbility: 0.0004
Next Token : b, Posbility: 0.0008
Next Token : z, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0007
Next Token :  a, Posbility: 0.0022
Next Token : ";, Posbility: 0.0025
Next Token : ", Posbility: 0.1060
Next Token :  , Posbility: 0.8867
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : h, Posbility: 0.0002
Next Token : d, Posbility: 0.0003
Next Token : f, Posbility: 0.0004
Next Token : c, Posbility: 0.0097
Next Token : b, Posbility: 0.9883
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0001
Next Token :  ", Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token : ", Posbility: 0.0259
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : f, Posbility: 0.0001
Next Token : e, Posbility: 0.0001
Next Token : b, Posbility: 0.0004
Next Token : d, Posbility: 0.0006
Next Token : c, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : ", Posbility: 0.0036
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : e, Posbility: 0.0003
Next Token : d, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ef, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ", Posbility: 0.0012
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : g, Posbility: 0.0000
Next Token : d, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : f, Posbility: 0.0003
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ", Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : b, Posbility: 0.0000
Next Token : fg, Posbility: 0.0000
Next Token : h, Posbility: 0.0000
Next Token : g, Posbility: 0.0003
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token :  gh, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ", Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : j, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : h, Posbility: 0.0005
Next Token : g, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  k, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  i, Posbility: 0.0001
Next Token : ", Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : hi, Posbility: 0.0000
Next Token : g, Posbility: 0.0000
Next Token : j, Posbility: 0.0000
Next Token : h, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  il, Posbility: 0.0001
Next Token :  ii, Posbility: 0.0012
Next Token : ", Posbility: 0.0019
Next Token :  , Posbility: 0.0046
Next Token :  i, Posbility: 0.9922
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  k, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : g, Posbility: 0.0000
Next Token : jj, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : h, Posbility: 0.0000
Next Token : j, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : k, Posbility: 0.0000
Next Token :  l, Posbility: 0.0002
Next Token :  , Posbility: 0.0005
Next Token : ", Posbility: 0.0009
Next Token :  k, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  le, Posbility: 0.0005
Next Token :  k, Posbility: 0.0007
Next Token : ", Posbility: 0.0051
Next Token :  , Posbility: 0.0140
Next Token :  l, Posbility: 0.9766
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  l, Posbility: 0.0001
Next Token : ", Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : o, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : n, Posbility: 0.0022
Next Token : m, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  no, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ", Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : q, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : o, Posbility: 0.0000
Next Token : m, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token :  l, Posbility: 0.0001
Next Token : ", Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : m, Posbility: 0.0000
Next Token : q, Posbility: 0.0001
Next Token : p, Posbility: 0.0002
Next Token : n, Posbility: 0.0003
Next Token : o, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : m, Posbility: 0.0000
Next Token : o, Posbility: 0.0000
Next Token : pq, Posbility: 0.0001
Next Token : q, Posbility: 0.0006
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :  qu, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ", Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : pq, Posbility: 0.0000
Next Token : qq, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : r, Posbility: 0.0001
Next Token : q, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ", Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : rq, Posbility: 0.0000
Next Token : rs, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : r, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : r, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token : ", Posbility: 0.0028
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : b, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0001
Next Token :  l, Posbility: 0.0001
Next Token :  v, Posbility: 0.0002
Next Token :  i, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : w, Posbility: 0.0000
Next Token : t, Posbility: 0.0025
Next Token : u, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  vs, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  vi, Posbility: 0.0001
Next Token :  , Posbility: 0.0012
Next Token :  v, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : x, Posbility: 0.0002
Next Token : w, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token : ", Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : w, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : y, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ",, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token : ", Posbility: 0.0010
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : j, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : z, Posbility: 0.0001
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : ", Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : zz, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : c, Posbility: 0.0001
Next Token : b, Posbility: 0.0004
Next Token : z, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  a, Posbility: 0.0019
Next Token : ";, Posbility: 0.0019
Next Token : b, Posbility: 0.0060
Next Token : ", Posbility: 0.1055
Next Token :  , Posbility: 0.8828
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : e, Posbility: 0.0001
Next Token : d, Posbility: 0.0002
Next Token : f, Posbility: 0.0002
Next Token : c, Posbility: 0.0076
Next Token : b, Posbility: 0.9922
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  ", Posbility: 0.0001
Next Token : ";, Posbility: 0.0001
Next Token : ", Posbility: 0.0259
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : e, Posbility: 0.0001
Next Token : d, Posbility: 0.0002
Next Token : b, Posbility: 0.0006
Next Token : c, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : ", Posbility: 0.0046
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : e, Posbility: 0.0001
Next Token : d, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ef, Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ", Posbility: 0.0015
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : d, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : f, Posbility: 0.0001
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ", Posbility: 0.0009
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : b, Posbility: 0.0000
Next Token : h, Posbility: 0.0000
Next Token : fg, Posbility: 0.0000
Next Token : g, Posbility: 0.0002
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ", Posbility: 0.0036
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : j, Posbility: 0.0000
Next Token : gf, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : h, Posbility: 0.0005
Next Token : g, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  k, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  i, Posbility: 0.0001
Next Token : ", Posbility: 0.0015
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : g, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : hi, Posbility: 0.0000
Next Token : j, Posbility: 0.0000
Next Token : h, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token :  ii, Posbility: 0.0002
Next Token : ", Posbility: 0.0012
Next Token :  , Posbility: 0.0013
Next Token :  i, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  k, Posbility: 0.0002
Next Token : ", Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : jj, Posbility: 0.0000
Next Token : g, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : h, Posbility: 0.0000
Next Token : j, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : k, Posbility: 0.0000
Next Token :  l, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token : ", Posbility: 0.0013
Next Token :  k, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0002
Next Token :  k, Posbility: 0.0009
Next Token :  , Posbility: 0.0108
Next Token : ", Posbility: 0.0139
Next Token :  l, Posbility: 0.9727
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  l, Posbility: 0.0001
Next Token : ", Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : o, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : n, Posbility: 0.0015
Next Token : m, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  k, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ", Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : q, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : o, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : b, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : n, Posbility: 0.0001
Next Token : o, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ", Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : o, Posbility: 0.0000
Next Token : pq, Posbility: 0.0000
Next Token : q, Posbility: 0.0001
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  qu, Posbility: 0.0000
Next Token : ", Posbility: 0.0009
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : qr, Posbility: 0.0000
Next Token : qq, Posbility: 0.0000
Next Token : r, Posbility: 0.0002
Next Token : q, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ", Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : b, Posbility: 0.0000
Next Token : rs, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token : r, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ", Posbility: 0.0008
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : b, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : t, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ";, Posbility: 0.0001
Next Token : ", Posbility: 0.0032
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : u, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  l, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  i, Posbility: 0.0001
Next Token : ", Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : w, Posbility: 0.0001
Next Token : t, Posbility: 0.0025
Next Token : u, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token :  vi, Posbility: 0.0002
Next Token :  , Posbility: 0.0017
Next Token :  v, Posbility: 0.9961
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. *)
let ends_with_a_b s =
  let s = String.trim s in
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.filter (fun x -> x = "a") s in
  let s = List.filter (fun x -> x = "b") s in
  List.length s = 1
ends_with_a_b "a b" = true
ends_with_a_b "a b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v w x y z b c d e f g h i j k l m n o p q r s t u v 
 score:False


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>