code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  rotate, Posbility: 0.0236
Next Token :  sort, Posbility: 0.0266
Next Token :  , Posbility: 0.1973
Next Token :  count, Posbility: 0.1973
Next Token :  rec, Posbility: 0.4180
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  find, Posbility: 0.0156
Next Token :  loop, Posbility: 0.0374
Next Token :  rotate, Posbility: 0.1147
Next Token :  , Posbility: 0.2432
Next Token :  count, Posbility: 0.4551
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0130
Next Token :  , Posbility: 0.0215
Next Token :  =, Posbility: 0.0962
Next Token : Rotation, Posbility: 0.0962
Next Token : _, Posbility: 0.7109
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : sort, Posbility: 0.0137
Next Token : rotate, Posbility: 0.0289
Next Token : of, Posbility: 0.0786
Next Token : rot, Posbility: 0.0786
Next Token : rotation, Posbility: 0.7461
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotation
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0064
Next Token : (, Posbility: 0.0064
Next Token :  , Posbility: 0.0175
Next Token :  =, Posbility: 0.0175
Next Token : s, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0161
Next Token : (, Posbility: 0.0266
Next Token : _, Posbility: 0.1191
Next Token :  =, Posbility: 0.1963
Next Token :  , Posbility: 0.5352
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0243
Next Token : x, Posbility: 0.0752
Next Token : n, Posbility: 0.1235
Next Token : (, Posbility: 0.2314
Next Token : arr, Posbility: 0.2969
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0193
Next Token :  len, Posbility: 0.0317
Next Token :  a, Posbility: 0.0408
Next Token :  , Posbility: 0.1426
Next Token :  =, Posbility: 0.6406
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0063
Next Token :  function, Posbility: 0.0091
Next Token :  match, Posbility: 0.0525
Next Token :  , Posbility: 0.0977
Next Token : 
, Posbility: 0.8203
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0055
Next Token :    , Posbility: 0.0131
Next Token : 	, Posbility: 0.0168
Next Token :     , Posbility: 0.2334
Next Token :   , Posbility: 0.7188
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fun, Posbility: 0.0090
Next Token : (, Posbility: 0.0102
Next Token : let, Posbility: 0.2051
Next Token : if, Posbility: 0.2988
Next Token : match, Posbility: 0.4336
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0011
Next Token :  !, Posbility: 0.0015
Next Token :  [, Posbility: 0.0040
Next Token :  String, Posbility: 0.0051
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Arr, Posbility: 0.0109
Next Token : (, Posbility: 0.0381
Next Token : List, Posbility: 0.0432
Next Token : Array, Posbility: 0.0913
Next Token : arr, Posbility: 0.7656
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0015
Next Token :  @, Posbility: 0.0015
Next Token : ., Posbility: 0.0040
Next Token :  |, Posbility: 0.0066
Next Token :  with, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0023
Next Token :  , Posbility: 0.0056
Next Token :  [, Posbility: 0.0118
Next Token :  [], Posbility: 0.0364
Next Token : 
, Posbility: 0.9375
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0007
Next Token :       , Posbility: 0.0020
Next Token :    , Posbility: 0.0023
Next Token :     , Posbility: 0.0752
Next Token :   , Posbility: 0.9180
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : |[, Posbility: 0.0002
Next Token : (, Posbility: 0.0004
Next Token : [, Posbility: 0.0156
Next Token : [], Posbility: 0.0200
Next Token : |, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [],, Posbility: 0.0018
Next Token :  nil, Posbility: 0.0029
Next Token :  , Posbility: 0.0352
Next Token :  [, Posbility: 0.0452
Next Token :  [], Posbility: 0.9062
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0049
Next Token :    , Posbility: 0.0063
Next Token :  =>, Posbility: 0.0104
Next Token :  |, Posbility: 0.0172
Next Token :  , Posbility: 0.9375
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0002
Next Token : â†’, Posbility: 0.0003
Next Token :  =>, Posbility: 0.0003
Next Token : ::, Posbility: 0.0032
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0159
Next Token :  [], Posbility: 0.0159
Next Token :  , Posbility: 0.0432
Next Token :  1, Posbility: 0.0432
Next Token :  0, Posbility: 0.8711
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
 score:False
Error type: noerr
---------------------------
Next Token : L, Posbility: 0.0024
Next Token :   , Posbility: 0.0035
Next Token :  , Posbility: 0.0121
Next Token :  |, Posbility: 0.0121
Next Token : 
, Posbility: 0.9570
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token : |, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : //, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0034
Next Token :  [], Posbility: 0.0118
Next Token :  a, Posbility: 0.0679
Next Token :  [, Posbility: 0.2363
Next Token :  , Posbility: 0.6406
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0271
Next Token : h, Posbility: 0.0349
Next Token : head, Posbility: 0.0447
Next Token : _, Posbility: 0.3301
Next Token : x, Posbility: 0.4238
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  when, Posbility: 0.0041
Next Token : :, Posbility: 0.0305
Next Token : s, Posbility: 0.1064
Next Token : ::, Posbility: 0.2256
Next Token :  , Posbility: 0.6133
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0009
Next Token : :, Posbility: 0.0025
Next Token : if, Posbility: 0.0214
Next Token : ->, Posbility: 0.0659
Next Token : ::, Posbility: 0.9062
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  [, Posbility: 0.0027
Next Token :  a, Posbility: 0.0034
Next Token :  [], Posbility: 0.0199
Next Token :  rest, Posbility: 0.1143
Next Token :  , Posbility: 0.8438
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : arr, Posbility: 0.0219
Next Token : tail, Posbility: 0.0464
Next Token : y, Posbility: 0.1113
Next Token : _, Posbility: 0.1426
Next Token : x, Posbility: 0.6406
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0014
Next Token : _, Posbility: 0.0016
Next Token :  , Posbility: 0.0027
Next Token : ', Posbility: 0.0369
Next Token : s, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0013
Next Token :   , Posbility: 0.0021
Next Token :  =>, Posbility: 0.0096
Next Token :  when, Posbility: 0.1167
Next Token :  , Posbility: 0.8633
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  when, Posbility: 0.0002
Next Token :  =>, Posbility: 0.0007
Next Token : if, Posbility: 0.0095
Next Token : ::, Posbility: 0.0178
Next Token : ->, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0084
Next Token :  1, Posbility: 0.1680
Next Token :  , Posbility: 0.1680
Next Token :  count, Posbility: 0.1680
Next Token : 
, Posbility: 0.4570
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0050
Next Token :   , Posbility: 0.0065
Next Token :      , Posbility: 0.0121
Next Token :     , Posbility: 0.4531
Next Token :       , Posbility: 0.5156
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0334
Next Token : match, Posbility: 0.0623
Next Token : count, Posbility: 0.1162
Next Token : if, Posbility: 0.1318
Next Token : let, Posbility: 0.5898
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0221
Next Token :  len, Posbility: 0.0469
Next Token :  count, Posbility: 0.1270
Next Token :  rec, Posbility: 0.1270
Next Token :  , Posbility: 0.4434
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : rot, Posbility: 0.0396
Next Token : pivot, Posbility: 0.0449
Next Token : (, Posbility: 0.0576
Next Token : n, Posbility: 0.1387
Next Token : x, Posbility: 0.2012
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0461
Next Token : ', Posbility: 0.0591
Next Token : _, Posbility: 0.2061
Next Token : s, Posbility: 0.2061
Next Token :  =, Posbility: 0.2061
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0035
Next Token :  [, Posbility: 0.0157
Next Token :  first, Posbility: 0.0427
Next Token :  count, Posbility: 0.0427
Next Token :  , Posbility: 0.8555
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0491
Next Token : arr, Posbility: 0.0491
Next Token : List, Posbility: 0.0557
Next Token : Array, Posbility: 0.0557
Next Token : x, Posbility: 0.6797
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ::, Posbility: 0.0209
Next Token :  |, Posbility: 0.0209
Next Token : s, Posbility: 0.0267
Next Token :  , Posbility: 0.0500
Next Token :  in, Posbility: 0.7812
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0010
Next Token : 

, Posbility: 0.0010
Next Token :  count, Posbility: 0.0040
Next Token :  , Posbility: 0.0157
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0013
Next Token :     , Posbility: 0.0022
Next Token :         , Posbility: 0.0045
Next Token :      , Posbility: 0.0052
Next Token :       , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0459
Next Token : match, Posbility: 0.0669
Next Token : if, Posbility: 0.0859
Next Token : count, Posbility: 0.1104
Next Token : let, Posbility: 0.6328
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0042
Next Token :  len, Posbility: 0.0070
Next Token :  count, Posbility: 0.0403
Next Token :  rec, Posbility: 0.0518
Next Token :  , Posbility: 0.8086
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : rot, Posbility: 0.0144
Next Token : n, Posbility: 0.0444
Next Token : arr, Posbility: 0.0503
Next Token : y, Posbility: 0.1543
Next Token : x, Posbility: 0.6133
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0053
Next Token : _, Posbility: 0.0184
Next Token : ', Posbility: 0.0184
Next Token :  =, Posbility: 0.0442
Next Token : s, Posbility: 0.8867
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0014
Next Token : 2, Posbility: 0.0014
Next Token : _, Posbility: 0.0121
Next Token : ', Posbility: 0.0176
Next Token :  =, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0003
Next Token : 
, Posbility: 0.0009
Next Token :  count, Posbility: 0.0013
Next Token :  [, Posbility: 0.0025
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Arr, Posbility: 0.0009
Next Token : arr, Posbility: 0.0015
Next Token : Array, Posbility: 0.0024
Next Token : List, Posbility: 0.0036
Next Token : x, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token : ::, Posbility: 0.0004
Next Token :  , Posbility: 0.0036
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0001
Next Token :  +, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token : 
, Posbility: 0.0007
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  count, Posbility: 0.0004
Next Token :  , Posbility: 0.0022
Next Token : 

, Posbility: 0.0046
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0010
Next Token :         , Posbility: 0.0012
Next Token :     , Posbility: 0.0013
Next Token :      , Posbility: 0.0046
Next Token :       , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0444
Next Token : match, Posbility: 0.0942
Next Token : if, Posbility: 0.1211
Next Token : count, Posbility: 0.1758
Next Token : let, Posbility: 0.4785
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  first, Posbility: 0.0101
Next Token :  len, Posbility: 0.0129
Next Token :  count, Posbility: 0.0513
Next Token :  rec, Posbility: 0.1230
Next Token :  , Posbility: 0.6250
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : rot, Posbility: 0.0287
Next Token : arr, Posbility: 0.0776
Next Token : n, Posbility: 0.0884
Next Token : y, Posbility: 0.1133
Next Token : x, Posbility: 0.3945
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0284
Next Token : ', Posbility: 0.0364
Next Token : _, Posbility: 0.0684
Next Token :  =, Posbility: 0.3457
Next Token : s, Posbility: 0.3926
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0295
Next Token : 2, Posbility: 0.0430
Next Token : ', Posbility: 0.1167
Next Token : _, Posbility: 0.2188
Next Token :  =, Posbility: 0.5234
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0228
Next Token :  [, Posbility: 0.0376
Next Token :  count, Posbility: 0.0376
Next Token :  sort, Posbility: 0.0483
Next Token :  , Posbility: 0.7539
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0154
Next Token : reverse, Posbility: 0.0289
Next Token : Array, Posbility: 0.2139
Next Token : List, Posbility: 0.2422
Next Token : x, Posbility: 0.3516
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0052
Next Token :  +, Posbility: 0.0067
Next Token : ::, Posbility: 0.0126
Next Token :  , Posbility: 0.0820
Next Token : s, Posbility: 0.8789
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0189
Next Token :  @, Posbility: 0.0452
Next Token :  , Posbility: 0.0513
Next Token : ., Posbility: 0.0659
Next Token :  in, Posbility: 0.7070
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0006
Next Token :  count, Posbility: 0.0035
Next Token : 

, Posbility: 0.0040
Next Token :  , Posbility: 0.0157
Next Token : 
, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0010
Next Token :     , Posbility: 0.0012
Next Token :         , Posbility: 0.0015
Next Token :      , Posbility: 0.0059
Next Token :       , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0713
Next Token : if, Posbility: 0.0913
Next Token : match, Posbility: 0.0913
Next Token : count, Posbility: 0.1504
Next Token : let, Posbility: 0.5273
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0039
Next Token :  acc, Posbility: 0.0039
Next Token :  count, Posbility: 0.0198
Next Token :  rec, Posbility: 0.0688
Next Token :  , Posbility: 0.8398
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0118
Next Token : n, Posbility: 0.0118
Next Token : y, Posbility: 0.0251
Next Token : arr, Posbility: 0.0532
Next Token : x, Posbility: 0.8320
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0015
Next Token :  , Posbility: 0.0026
Next Token : _, Posbility: 0.0026
Next Token :  =, Posbility: 0.1797
Next Token : s, Posbility: 0.8047
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0017
Next Token :  , Posbility: 0.0024
Next Token : ', Posbility: 0.0040
Next Token : _, Posbility: 0.0066
Next Token :  =, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0063
Next Token :  count, Posbility: 0.0063
Next Token :  sort, Posbility: 0.0081
Next Token :  [, Posbility: 0.0134
Next Token :  , Posbility: 0.9375
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0034
Next Token : reverse, Posbility: 0.0034
Next Token : Array, Posbility: 0.0120
Next Token : List, Posbility: 0.0135
Next Token : x, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0002
Next Token :  +, Posbility: 0.0003
Next Token :  , Posbility: 0.0025
Next Token :  in, Posbility: 0.0028
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0003
Next Token :  @, Posbility: 0.0003
Next Token :  , Posbility: 0.0006
Next Token : 
, Posbility: 0.0009
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  count, Posbility: 0.0009
Next Token : 

, Posbility: 0.0028
Next Token :  , Posbility: 0.0067
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0006
Next Token :     , Posbility: 0.0007
Next Token :         , Posbility: 0.0010
Next Token :      , Posbility: 0.0032
Next Token :       , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0576
Next Token : if, Posbility: 0.0576
Next Token : match, Posbility: 0.0742
Next Token : count, Posbility: 0.1221
Next Token : let, Posbility: 0.6211
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  new, Posbility: 0.0018
Next Token :  res, Posbility: 0.0023
Next Token :  count, Posbility: 0.0081
Next Token :  rec, Posbility: 0.0248
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0029
Next Token : (, Posbility: 0.0063
Next Token : y, Posbility: 0.0103
Next Token : arr, Posbility: 0.0280
Next Token : x, Posbility: 0.9258
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0005
Next Token : 0, Posbility: 0.0005
Next Token :  , Posbility: 0.0008
Next Token :  =, Posbility: 0.0757
Next Token : s, Posbility: 0.9180
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0006
Next Token : ', Posbility: 0.0008
Next Token :  , Posbility: 0.0012
Next Token : _, Posbility: 0.0019
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  count, Posbility: 0.0013
Next Token : 
, Posbility: 0.0019
Next Token :  sort, Posbility: 0.0019
Next Token :  [, Posbility: 0.0052
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0008
Next Token : (, Posbility: 0.0015
Next Token : Array, Posbility: 0.0024
Next Token : List, Posbility: 0.0031
Next Token : x, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token :  , Posbility: 0.0008
Next Token :  in, Posbility: 0.0010
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0001
Next Token :  +, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token : 
, Posbility: 0.0005
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  count, Posbility: 0.0005
Next Token : 

, Posbility: 0.0022
Next Token :  , Posbility: 0.0046
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0006
Next Token :   , Posbility: 0.0006
Next Token :         , Posbility: 0.0007
Next Token :      , Posbility: 0.0032
Next Token :       , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0289
Next Token : x, Posbility: 0.0420
Next Token : match, Posbility: 0.0540
Next Token : count, Posbility: 0.0786
Next Token : let, Posbility: 0.7461
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0008
Next Token :  res, Posbility: 0.0011
Next Token :  count, Posbility: 0.0031
Next Token :  rec, Posbility: 0.0122
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0014
Next Token : (, Posbility: 0.0031
Next Token : y, Posbility: 0.0051
Next Token : arr, Posbility: 0.0137
Next Token : x, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0002
Next Token : 0, Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token :  =, Posbility: 0.0474
Next Token : s, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0003
Next Token : 1, Posbility: 0.0003
Next Token :  , Posbility: 0.0006
Next Token : _, Posbility: 0.0007
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sort, Posbility: 0.0008
Next Token :  [], Posbility: 0.0009
Next Token : 
, Posbility: 0.0010
Next Token :  [, Posbility: 0.0032
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0004
Next Token : (, Posbility: 0.0007
Next Token : Array, Posbility: 0.0008
Next Token : List, Posbility: 0.0012
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token :  in, Posbility: 0.0006
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0001
Next Token :  +, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0001
Next Token :  count, Posbility: 0.0003
Next Token : 

, Posbility: 0.0022
Next Token :  , Posbility: 0.0032
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0005
Next Token :     , Posbility: 0.0005
Next Token :   , Posbility: 0.0005
Next Token :      , Posbility: 0.0025
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0187
Next Token : x, Posbility: 0.0396
Next Token : match, Posbility: 0.0396
Next Token : count, Posbility: 0.0649
Next Token : let, Posbility: 0.7930
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0005
Next Token :  res, Posbility: 0.0008
Next Token :  count, Posbility: 0.0017
Next Token :  rec, Posbility: 0.0066
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0007
Next Token : (, Posbility: 0.0015
Next Token : y, Posbility: 0.0019
Next Token : arr, Posbility: 0.0066
Next Token : x, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  =, Posbility: 0.0374
Next Token : s, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0001
Next Token : 1, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token : _, Posbility: 0.0004
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sort, Posbility: 0.0003
Next Token : 
, Posbility: 0.0005
Next Token :  [], Posbility: 0.0005
Next Token :  [, Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0002
Next Token : Array, Posbility: 0.0004
Next Token : (, Posbility: 0.0005
Next Token : List, Posbility: 0.0006
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  in, Posbility: 0.0004
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0001
Next Token :  +, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0001
Next Token :  count, Posbility: 0.0002
Next Token : 

, Posbility: 0.0017
Next Token :  , Posbility: 0.0022
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0004
Next Token :     , Posbility: 0.0004
Next Token :   , Posbility: 0.0004
Next Token :      , Posbility: 0.0019
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0121
Next Token : x, Posbility: 0.0292
Next Token : match, Posbility: 0.0292
Next Token : count, Posbility: 0.0425
Next Token : let, Posbility: 0.8516
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0004
Next Token :  res, Posbility: 0.0005
Next Token :  count, Posbility: 0.0012
Next Token :  rec, Posbility: 0.0040
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0005
Next Token : (, Posbility: 0.0012
Next Token : y, Posbility: 0.0015
Next Token : arr, Posbility: 0.0067
Next Token : x, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : 0, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0229
Next Token : s, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sort, Posbility: 0.0003
Next Token : 
, Posbility: 0.0004
Next Token :  [], Posbility: 0.0005
Next Token :  [, Posbility: 0.0015
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0001
Next Token : Array, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : List, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  in, Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0001
Next Token : 

, Posbility: 0.0015
Next Token :  , Posbility: 0.0017
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0003
Next Token :     , Posbility: 0.0003
Next Token :   , Posbility: 0.0004
Next Token :      , Posbility: 0.0017
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0097
Next Token : match, Posbility: 0.0233
Next Token : x, Posbility: 0.0299
Next Token : count, Posbility: 0.0339
Next Token : let, Posbility: 0.8750
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0003
Next Token :  res, Posbility: 0.0004
Next Token :  count, Posbility: 0.0008
Next Token :  rec, Posbility: 0.0032
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0004
Next Token : (, Posbility: 0.0009
Next Token : y, Posbility: 0.0009
Next Token : arr, Posbility: 0.0052
Next Token : x, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0229
Next Token : s, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sort, Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token :  [], Posbility: 0.0004
Next Token :  [, Posbility: 0.0010
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0001
Next Token : Array, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : List, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0001
Next Token : 

, Posbility: 0.0015
Next Token :  , Posbility: 0.0015
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0003
Next Token :     , Posbility: 0.0003
Next Token :   , Posbility: 0.0003
Next Token :      , Posbility: 0.0017
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0078
Next Token : match, Posbility: 0.0166
Next Token : x, Posbility: 0.0242
Next Token : count, Posbility: 0.0242
Next Token : let, Posbility: 0.9062
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0002
Next Token :  res, Posbility: 0.0003
Next Token :  count, Posbility: 0.0006
Next Token :  rec, Posbility: 0.0022
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0003
Next Token : (, Posbility: 0.0005
Next Token : y, Posbility: 0.0006
Next Token : arr, Posbility: 0.0032
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0229
Next Token : s, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sort, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  [], Posbility: 0.0004
Next Token :  [, Posbility: 0.0009
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0001
Next Token : Array, Posbility: 0.0002
Next Token : List, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  in, Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  +, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0001
Next Token :  , Posbility: 0.0012
Next Token : 

, Posbility: 0.0015
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0003
Next Token :     , Posbility: 0.0003
Next Token :   , Posbility: 0.0003
Next Token :      , Posbility: 0.0015
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0079
Next Token : match, Posbility: 0.0166
Next Token : x, Posbility: 0.0242
Next Token : count, Posbility: 0.0242
Next Token : let, Posbility: 0.9062
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0002
Next Token :  res, Posbility: 0.0003
Next Token :  count, Posbility: 0.0005
Next Token :  rec, Posbility: 0.0019
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0003
Next Token : (, Posbility: 0.0005
Next Token : y, Posbility: 0.0006
Next Token : arr, Posbility: 0.0032
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0179
Next Token : s, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sort, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  [], Posbility: 0.0004
Next Token :  [, Posbility: 0.0010
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0001
Next Token : Array, Posbility: 0.0001
Next Token : List, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0001
Next Token :  , Posbility: 0.0010
Next Token : 

, Posbility: 0.0013
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0003
Next Token :     , Posbility: 0.0003
Next Token :   , Posbility: 0.0003
Next Token :      , Posbility: 0.0017
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0079
Next Token : match, Posbility: 0.0131
Next Token : x, Posbility: 0.0190
Next Token : count, Posbility: 0.0216
Next Token : let, Posbility: 0.9219
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0002
Next Token :  res, Posbility: 0.0003
Next Token :  count, Posbility: 0.0005
Next Token :  rec, Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0003
Next Token : (, Posbility: 0.0004
Next Token : y, Posbility: 0.0004
Next Token : arr, Posbility: 0.0025
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0179
Next Token : s, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sort, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  [], Posbility: 0.0004
Next Token :  [, Posbility: 0.0010
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0001
Next Token : Array, Posbility: 0.0001
Next Token : List, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  in, Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0001
Next Token :  , Posbility: 0.0009
Next Token : 

, Posbility: 0.0013
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0003
Next Token :     , Posbility: 0.0003
Next Token :   , Posbility: 0.0003
Next Token :      , Posbility: 0.0017
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0071
Next Token : match, Posbility: 0.0104
Next Token : count, Posbility: 0.0151
Next Token : x, Posbility: 0.0171
Next Token : let, Posbility: 0.9375
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0002
Next Token :  res, Posbility: 0.0003
Next Token :  count, Posbility: 0.0005
Next Token :  rec, Posbility: 0.0015
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0003
Next Token : (, Posbility: 0.0004
Next Token : y, Posbility: 0.0005
Next Token : arr, Posbility: 0.0028
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0179
Next Token : s, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sort, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  [], Posbility: 0.0003
Next Token :  [, Posbility: 0.0008
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0001
Next Token : Array, Posbility: 0.0001
Next Token : List, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0001
Next Token :  , Posbility: 0.0009
Next Token : 

, Posbility: 0.0013
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0002
Next Token :     , Posbility: 0.0002
Next Token :   , Posbility: 0.0003
Next Token :      , Posbility: 0.0017
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0072
Next Token : match, Posbility: 0.0104
Next Token : count, Posbility: 0.0134
Next Token : x, Posbility: 0.0172
Next Token : let, Posbility: 0.9375
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0002
Next Token :  res, Posbility: 0.0002
Next Token :  count, Posbility: 0.0005
Next Token :  rec, Posbility: 0.0013
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0003
Next Token : (, Posbility: 0.0003
Next Token : y, Posbility: 0.0004
Next Token : arr, Posbility: 0.0025
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0179
Next Token : s, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sort, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  [], Posbility: 0.0003
Next Token :  [, Posbility: 0.0008
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0001
Next Token : Array, Posbility: 0.0001
Next Token : List, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0001
Next Token :  , Posbility: 0.0008
Next Token : 

, Posbility: 0.0013
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0002
Next Token :     , Posbility: 0.0002
Next Token :   , Posbility: 0.0002
Next Token :      , Posbility: 0.0015
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0063
Next Token : match, Posbility: 0.0092
Next Token : count, Posbility: 0.0119
Next Token : x, Posbility: 0.0173
Next Token : let, Posbility: 0.9414
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  res, Posbility: 0.0002
Next Token :  count, Posbility: 0.0004
Next Token :  rec, Posbility: 0.0012
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : y, Posbility: 0.0003
Next Token : arr, Posbility: 0.0022
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0140
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sort, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  [], Posbility: 0.0003
Next Token :  [, Posbility: 0.0009
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0001
Next Token : Array, Posbility: 0.0001
Next Token : List, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0001
Next Token :  , Posbility: 0.0008
Next Token : 

, Posbility: 0.0013
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0002
Next Token :         , Posbility: 0.0002
Next Token :   , Posbility: 0.0002
Next Token :      , Posbility: 0.0017
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0072
Next Token : match, Posbility: 0.0092
Next Token : count, Posbility: 0.0118
Next Token : x, Posbility: 0.0195
Next Token : let, Posbility: 0.9414
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0002
Next Token :  res, Posbility: 0.0002
Next Token :  count, Posbility: 0.0004
Next Token :  rec, Posbility: 0.0010
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0003
Next Token : (, Posbility: 0.0003
Next Token : y, Posbility: 0.0003
Next Token : arr, Posbility: 0.0028
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0140
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sort, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  [], Posbility: 0.0002
Next Token :  [, Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0001
Next Token : Array, Posbility: 0.0001
Next Token : List, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0001
Next Token :  , Posbility: 0.0007
Next Token : 

, Posbility: 0.0012
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0002
Next Token :         , Posbility: 0.0002
Next Token :   , Posbility: 0.0003
Next Token :      , Posbility: 0.0019
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0056
Next Token : match, Posbility: 0.0072
Next Token : count, Posbility: 0.0106
Next Token : x, Posbility: 0.0173
Next Token : let, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  res, Posbility: 0.0002
Next Token :  count, Posbility: 0.0004
Next Token :  rec, Posbility: 0.0010
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : y, Posbility: 0.0003
Next Token : arr, Posbility: 0.0022
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0140
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sort, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  [], Posbility: 0.0003
Next Token :  [, Posbility: 0.0009
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0001
Next Token : Array, Posbility: 0.0001
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0001
Next Token :  , Posbility: 0.0007
Next Token : 

, Posbility: 0.0012
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0002
Next Token :         , Posbility: 0.0002
Next Token :   , Posbility: 0.0002
Next Token :      , Posbility: 0.0017
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0064
Next Token : match, Posbility: 0.0064
Next Token : count, Posbility: 0.0106
Next Token : x, Posbility: 0.0154
Next Token : let, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  res, Posbility: 0.0002
Next Token :  count, Posbility: 0.0004
Next Token :  rec, Posbility: 0.0009
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : y, Posbility: 0.0003
Next Token : arr, Posbility: 0.0022
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0140
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sort, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  [], Posbility: 0.0003
Next Token :  [, Posbility: 0.0009
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0001
Next Token : Array, Posbility: 0.0001
Next Token : List, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0001
Next Token :  , Posbility: 0.0007
Next Token : 

, Posbility: 0.0012
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0002
Next Token :         , Posbility: 0.0002
Next Token :   , Posbility: 0.0002
Next Token :      , Posbility: 0.0015
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0072
Next Token : match, Posbility: 0.0072
Next Token : count, Posbility: 0.0105
Next Token : x, Posbility: 0.0197
Next Token : let, Posbility: 0.9453
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  res, Posbility: 0.0002
Next Token :  count, Posbility: 0.0003
Next Token :  rec, Posbility: 0.0007
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 0.0002
Next Token : y, Posbility: 0.0002
Next Token : arr, Posbility: 0.0017
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0140
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sort, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  [], Posbility: 0.0002
Next Token :  [, Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0001
Next Token : Array, Posbility: 0.0001
Next Token : List, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token : 

, Posbility: 0.0010
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0002
Next Token :         , Posbility: 0.0002
Next Token :   , Posbility: 0.0002
Next Token :      , Posbility: 0.0019
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0072
Next Token : match, Posbility: 0.0082
Next Token : count, Posbility: 0.0105
Next Token : x, Posbility: 0.0195
Next Token : let, Posbility: 0.9414
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  res, Posbility: 0.0002
Next Token :  count, Posbility: 0.0003
Next Token :  rec, Posbility: 0.0009
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 0.0002
Next Token : y, Posbility: 0.0002
Next Token : arr, Posbility: 0.0017
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0110
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sort, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  [], Posbility: 0.0003
Next Token :  [, Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0001
Next Token : Array, Posbility: 0.0001
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0001
Next Token :  , Posbility: 0.0007
Next Token : 

, Posbility: 0.0010
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0002
Next Token :         , Posbility: 0.0002
Next Token :   , Posbility: 0.0002
Next Token :      , Posbility: 0.0019
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0063
Next Token : (, Posbility: 0.0072
Next Token : count, Posbility: 0.0105
Next Token : x, Posbility: 0.0222
Next Token : let, Posbility: 0.9414
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  res, Posbility: 0.0002
Next Token :  count, Posbility: 0.0004
Next Token :  rec, Posbility: 0.0009
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0003
Next Token : n, Posbility: 0.0003
Next Token : y, Posbility: 0.0003
Next Token : arr, Posbility: 0.0022
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0110
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sort, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  [], Posbility: 0.0002
Next Token :  [, Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0001
Next Token : Array, Posbility: 0.0001
Next Token : List, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token : 

, Posbility: 0.0010
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0002
Next Token :   , Posbility: 0.0002
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0019
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0050
Next Token : (, Posbility: 0.0057
Next Token : count, Posbility: 0.0093
Next Token : x, Posbility: 0.0154
Next Token : let, Posbility: 0.9570
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  res, Posbility: 0.0002
Next Token :  count, Posbility: 0.0003
Next Token :  rec, Posbility: 0.0008
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 0.0002
Next Token : y, Posbility: 0.0002
Next Token : arr, Posbility: 0.0017
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0125
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sort, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [], Posbility: 0.0002
Next Token :  [, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0001
Next Token : Array, Posbility: 0.0001
Next Token : List, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0000
Next Token :  , Posbility: 0.0006
Next Token : 

, Posbility: 0.0009
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0015
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0056
Next Token : (, Posbility: 0.0072
Next Token : count, Posbility: 0.0106
Next Token : x, Posbility: 0.0173
Next Token : let, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  res, Posbility: 0.0002
Next Token :  count, Posbility: 0.0003
Next Token :  rec, Posbility: 0.0008
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 0.0002
Next Token : arr, Posbility: 0.0015
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0097
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sort, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [], Posbility: 0.0002
Next Token :  [, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0001
Next Token : Array, Posbility: 0.0001
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token : 

, Posbility: 0.0010
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0019
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0050
Next Token : (, Posbility: 0.0073
Next Token : count, Posbility: 0.0082
Next Token : x, Posbility: 0.0175
Next Token : let, Posbility: 0.9531
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  res, Posbility: 0.0002
Next Token :  count, Posbility: 0.0004
Next Token :  rec, Posbility: 0.0008
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 0.0002
Next Token : y, Posbility: 0.0002
Next Token : arr, Posbility: 0.0015
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0097
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sort, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [], Posbility: 0.0002
Next Token :  [, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0000
Next Token : Array, Posbility: 0.0001
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0000
Next Token :  , Posbility: 0.0006
Next Token : 

, Posbility: 0.0009
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0019
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0044
Next Token : (, Posbility: 0.0065
Next Token : count, Posbility: 0.0073
Next Token : x, Posbility: 0.0137
Next Token : let, Posbility: 0.9570
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  res, Posbility: 0.0002
Next Token :  count, Posbility: 0.0003
Next Token :  rec, Posbility: 0.0007
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 0.0003
Next Token : arr, Posbility: 0.0017
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0110
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sort, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [], Posbility: 0.0002
Next Token :  [, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0000
Next Token : Array, Posbility: 0.0001
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0000
Next Token :  , Posbility: 0.0006
Next Token : 

, Posbility: 0.0009
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0017
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0050
Next Token : (, Posbility: 0.0073
Next Token : count, Posbility: 0.0073
Next Token : x, Posbility: 0.0175
Next Token : let, Posbility: 0.9531
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  count, Posbility: 0.0003
Next Token :  rec, Posbility: 0.0007
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 0.0002
Next Token : arr, Posbility: 0.0013
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0110
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  count, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token :  [, Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0000
Next Token : Array, Posbility: 0.0001
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0000
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0008
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0019
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0035
Next Token : (, Posbility: 0.0057
Next Token : count, Posbility: 0.0074
Next Token : x, Posbility: 0.0121
Next Token : let, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  count, Posbility: 0.0003
Next Token :  rec, Posbility: 0.0006
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 0.0002
Next Token : arr, Posbility: 0.0013
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0097
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sort, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [], Posbility: 0.0002
Next Token :  [, Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0000
Next Token : Array, Posbility: 0.0001
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token : 

, Posbility: 0.0007
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0019
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0035
Next Token : count, Posbility: 0.0057
Next Token : (, Posbility: 0.0065
Next Token : x, Posbility: 0.0137
Next Token : let, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  count, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : y, Posbility: 0.0002
Next Token : n, Posbility: 0.0002
Next Token : arr, Posbility: 0.0010
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0076
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sort, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token :  [, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0000
Next Token : Array, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token : 

, Posbility: 0.0008
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0015
Next Token :       , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0031
Next Token : count, Posbility: 0.0057
Next Token : (, Posbility: 0.0065
Next Token : x, Posbility: 0.0137
Next Token : let, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  count, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : y, Posbility: 0.0002
Next Token : n, Posbility: 0.0002
Next Token : arr, Posbility: 0.0012
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0076
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sort, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token :  [, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0000
Next Token : Array, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token : 

, Posbility: 0.0007
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0019
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0039
Next Token : (, Posbility: 0.0065
Next Token : count, Posbility: 0.0065
Next Token : x, Posbility: 0.0137
Next Token : let, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  count, Posbility: 0.0003
Next Token :  rec, Posbility: 0.0006
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 0.0002
Next Token : arr, Posbility: 0.0010
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0076
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  count, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token :  [, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0000
Next Token : Array, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token : 

, Posbility: 0.0008
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0019
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0035
Next Token : count, Posbility: 0.0051
Next Token : (, Posbility: 0.0065
Next Token : x, Posbility: 0.0121
Next Token : let, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  count, Posbility: 0.0003
Next Token :  rec, Posbility: 0.0006
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : y, Posbility: 0.0002
Next Token : n, Posbility: 0.0002
Next Token : arr, Posbility: 0.0012
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0076
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  count, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token :  [, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0000
Next Token : Array, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token : 

, Posbility: 0.0007
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0019
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0024
Next Token : count, Posbility: 0.0045
Next Token : (, Posbility: 0.0065
Next Token : x, Posbility: 0.0138
Next Token : let, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  count, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 0.0002
Next Token : arr, Posbility: 0.0013
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0076
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  count, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token :  [, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0000
Next Token : Array, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0007
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0017
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0027
Next Token : count, Posbility: 0.0051
Next Token : (, Posbility: 0.0065
Next Token : x, Posbility: 0.0137
Next Token : let, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  count, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 0.0002
Next Token : arr, Posbility: 0.0009
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0059
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  count, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token :  [, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0000
Next Token : Array, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token : 

, Posbility: 0.0007
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0019
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0031
Next Token : count, Posbility: 0.0057
Next Token : (, Posbility: 0.0073
Next Token : x, Posbility: 0.0155
Next Token : let, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  count, Posbility: 0.0003
Next Token :  rec, Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 0.0002
Next Token : arr, Posbility: 0.0013
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0067
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token :  [, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0000
Next Token : Array, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0019
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0024
Next Token : count, Posbility: 0.0057
Next Token : (, Posbility: 0.0065
Next Token : x, Posbility: 0.0137
Next Token : let, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  count, Posbility: 0.0003
Next Token :  rec, Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 0.0002
Next Token : arr, Posbility: 0.0009
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0059
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  count, Posbility: 0.0000
Next Token :  [], Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0000
Next Token : Array, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0022
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0027
Next Token : count, Posbility: 0.0051
Next Token : (, Posbility: 0.0065
Next Token : x, Posbility: 0.0121
Next Token : let, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  result, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  count, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : y, Posbility: 0.0002
Next Token : n, Posbility: 0.0002
Next Token : arr, Posbility: 0.0006
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0059
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  count, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token :  [, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0000
Next Token : Array, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: noerr
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0022
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: noerr
---------------------------
Next Token : match, Posbility: 0.0019
Next Token : count, Posbility: 0.0040
Next Token : (, Posbility: 0.0065
Next Token : x, Posbility: 0.0122
Next Token : let, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  count, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 0.0002
Next Token : arr, Posbility: 0.0010
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: noerr
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0052
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: noerr
---------------------------
Next Token :  count, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: noerr
---------------------------
Next Token : Array, Posbility: 0.0000
Next Token : arr, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: noerr
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0017
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: noerr
---------------------------
Next Token : match, Posbility: 0.0024
Next Token : count, Posbility: 0.0045
Next Token : (, Posbility: 0.0058
Next Token : x, Posbility: 0.0095
Next Token : let, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  result, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  count, Posbility: 0.0003
Next Token :  rec, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 0.0002
Next Token : arr, Posbility: 0.0009
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0046
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: noerr
---------------------------
Next Token :  count, Posbility: 0.0000
Next Token :  [], Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: noerr
---------------------------
Next Token : Array, Posbility: 0.0000
Next Token : arr, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: noerr
---------------------------
Next Token :  count, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0019
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: noerr
---------------------------
Next Token : match, Posbility: 0.0019
Next Token : count, Posbility: 0.0040
Next Token : (, Posbility: 0.0058
Next Token : x, Posbility: 0.0095
Next Token : let, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  result, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  count, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 0.0002
Next Token : arr, Posbility: 0.0012
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0052
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: noerr
---------------------------
Next Token :  count, Posbility: 0.0000
Next Token :  [], Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: noerr
---------------------------
Next Token : arr, Posbility: 0.0000
Next Token : Array, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  count, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: noerr
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0022
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: noerr
---------------------------
Next Token : match, Posbility: 0.0024
Next Token : count, Posbility: 0.0031
Next Token : (, Posbility: 0.0065
Next Token : x, Posbility: 0.0108
Next Token : let, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  result, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  count, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 0.0002
Next Token : arr, Posbility: 0.0012
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0052
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: noerr
---------------------------
Next Token :  count, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: noerr
---------------------------
Next Token : arr, Posbility: 0.0000
Next Token : Array, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: noerr
---------------------------
Next Token :  count, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0005
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0019
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: noerr
---------------------------
Next Token : match, Posbility: 0.0019
Next Token : count, Posbility: 0.0045
Next Token : (, Posbility: 0.0058
Next Token : x, Posbility: 0.0095
Next Token : let, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  result, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  count, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 0.0002
Next Token : arr, Posbility: 0.0008
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0046
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: noerr
---------------------------
Next Token :  count, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: noerr
---------------------------
Next Token : Array, Posbility: 0.0000
Next Token : arr, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0005
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0019
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: noerr
---------------------------
Next Token : match, Posbility: 0.0019
Next Token : count, Posbility: 0.0035
Next Token : (, Posbility: 0.0051
Next Token : x, Posbility: 0.0095
Next Token : let, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  result, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  count, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 0.0001
Next Token : arr, Posbility: 0.0006
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: noerr
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0052
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: noerr
---------------------------
Next Token :  count, Posbility: 0.0000
Next Token :  [], Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: noerr
---------------------------
Next Token : Array, Posbility: 0.0000
Next Token : arr, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: noerr
---------------------------
Next Token :  count, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0005
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: noerr
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0022
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: noerr
---------------------------
Next Token : match, Posbility: 0.0019
Next Token : count, Posbility: 0.0040
Next Token : (, Posbility: 0.0058
Next Token : x, Posbility: 0.0084
Next Token : let, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  result, Posbility: 0.0001
Next Token :  a, Posbility: 0.0001
Next Token :  count, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0001
Next Token : n, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : arr, Posbility: 0.0008
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0041
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: noerr
---------------------------
Next Token :  count, Posbility: 0.0000
Next Token :  [], Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: noerr
---------------------------
Next Token : Array, Posbility: 0.0000
Next Token : arr, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: noerr
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0022
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: noerr
---------------------------
Next Token : match, Posbility: 0.0024
Next Token : count, Posbility: 0.0040
Next Token : (, Posbility: 0.0058
Next Token : x, Posbility: 0.0107
Next Token : let, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  res, Posbility: 0.0001
Next Token :  result, Posbility: 0.0001
Next Token :  count, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 0.0002
Next Token : arr, Posbility: 0.0006
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0041
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: noerr
---------------------------
Next Token :  count, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: noerr
---------------------------
Next Token : Array, Posbility: 0.0000
Next Token : arr, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0025
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: noerr
---------------------------
Next Token : match, Posbility: 0.0015
Next Token : count, Posbility: 0.0040
Next Token : (, Posbility: 0.0066
Next Token : x, Posbility: 0.0095
Next Token : let, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  result, Posbility: 0.0001
Next Token :  count, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 0.0002
Next Token : arr, Posbility: 0.0007
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0046
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: noerr
---------------------------
Next Token :  list, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: noerr
---------------------------
Next Token : Array, Posbility: 0.0000
Next Token : arr, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: noerr
---------------------------
Next Token :  count, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0005
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0022
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: noerr
---------------------------
Next Token : match, Posbility: 0.0019
Next Token : count, Posbility: 0.0040
Next Token : (, Posbility: 0.0058
Next Token : x, Posbility: 0.0084
Next Token : let, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  result, Posbility: 0.0000
Next Token :  count, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0001
Next Token : n, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : arr, Posbility: 0.0006
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0032
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: noerr
---------------------------
Next Token :  count, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: noerr
---------------------------
Next Token : Array, Posbility: 0.0000
Next Token : arr, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0022
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: noerr
---------------------------
Next Token : match, Posbility: 0.0021
Next Token : count, Posbility: 0.0040
Next Token : (, Posbility: 0.0058
Next Token : x, Posbility: 0.0084
Next Token : let, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  res, Posbility: 0.0001
Next Token :  result, Posbility: 0.0001
Next Token :  count, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 0.0002
Next Token : arr, Posbility: 0.0010
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0036
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: noerr
---------------------------
Next Token :  ~, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: noerr
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: noerr
---------------------------
Next Token : Array, Posbility: 0.0000
Next Token : arr, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0025
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: noerr
---------------------------
Next Token : match, Posbility: 0.0019
Next Token : count, Posbility: 0.0031
Next Token : (, Posbility: 0.0058
Next Token : x, Posbility: 0.0095
Next Token : let, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  res, Posbility: 0.0000
Next Token :  result, Posbility: 0.0000
Next Token :  count, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 0.0001
Next Token : arr, Posbility: 0.0008
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: noerr
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0046
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: noerr
---------------------------
Next Token :  list, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  [], Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: noerr
---------------------------
Next Token : arr, Posbility: 0.0000
Next Token : Array, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0025
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: noerr
---------------------------
Next Token : match, Posbility: 0.0019
Next Token : count, Posbility: 0.0035
Next Token : (, Posbility: 0.0058
Next Token : x, Posbility: 0.0074
Next Token : let, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  res, Posbility: 0.0000
Next Token :  result, Posbility: 0.0001
Next Token :  count, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 0.0001
Next Token : arr, Posbility: 0.0006
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0036
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: noerr
---------------------------
Next Token :  count, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: noerr
---------------------------
Next Token : Array, Posbility: 0.0000
Next Token : arr, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0003
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0025
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: noerr
---------------------------
Next Token : match, Posbility: 0.0017
Next Token : count, Posbility: 0.0031
Next Token : (, Posbility: 0.0051
Next Token : x, Posbility: 0.0066
Next Token : let, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  res, Posbility: 0.0000
Next Token :  result, Posbility: 0.0001
Next Token :  count, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 0.0001
Next Token : arr, Posbility: 0.0007
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0036
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False
Error type: noerr
---------------------------
Next Token :  list, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = 
 score:False
Error type: noerr
---------------------------
Next Token : Array, Posbility: 0.0000
Next Token : arr, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = x
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in

 score:False
Error type: noerr
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0022
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      
 score:False
Error type: noerr
---------------------------
Next Token : match, Posbility: 0.0021
Next Token : count, Posbility: 0.0027
Next Token : (, Posbility: 0.0045
Next Token : x, Posbility: 0.0066
Next Token : let, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  res, Posbility: 0.0000
Next Token :  result, Posbility: 0.0001
Next Token :  count, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 0.0001
Next Token : y, Posbility: 0.0001
Next Token : arr, Posbility: 0.0006
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let x
 score:False
Error type: noerr
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0028
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ *)
let rec count_rotations arr =
  match arr with
  | [] -> 0
  | x :: xs ->
      let x = x in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs = xs in
      let xs =
 score:False


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>