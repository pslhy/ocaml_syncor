code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  has, Posbility: 0.0219
Next Token :  is, Posbility: 0.1426
Next Token :  check, Posbility: 0.1611
Next Token :  rec, Posbility: 0.1611
Next Token :  , Posbility: 0.3418
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0261
Next Token : eq, Posbility: 0.0295
Next Token : flip, Posbility: 0.0334
Next Token : (, Posbility: 0.0430
Next Token : opposite, Posbility: 0.4082
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0135
Next Token : Sign, Posbility: 0.0135
Next Token :  , Posbility: 0.0222
Next Token :  =, Posbility: 0.1641
Next Token : _, Posbility: 0.7383
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : int, Posbility: 0.0024
Next Token : number, Posbility: 0.0024
Next Token : sig, Posbility: 0.0024
Next Token : of, Posbility: 0.0065
Next Token : sign, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0306
Next Token : _, Posbility: 0.0835
Next Token : s, Posbility: 0.1377
Next Token :  =, Posbility: 0.2266
Next Token :  , Posbility: 0.3730
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : m, Posbility: 0.0058
Next Token : s, Posbility: 0.0075
Next Token : n, Posbility: 0.0806
Next Token : (, Posbility: 0.1035
Next Token : x, Posbility: 0.7656
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0039
Next Token : _, Posbility: 0.0050
Next Token :  =, Posbility: 0.0119
Next Token : 1, Posbility: 0.0222
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : z, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : n, Posbility: 0.0003
Next Token : x, Posbility: 0.0009
Next Token : y, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : =, Posbility: 0.0009
Next Token : 
, Posbility: 0.0022
Next Token :   , Posbility: 0.0028
Next Token :  , Posbility: 0.0052
Next Token :  =, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0061
Next Token :   , Posbility: 0.0079
Next Token :  not, Posbility: 0.0130
Next Token :  , Posbility: 0.3809
Next Token : 
, Posbility: 0.5547
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0093
Next Token : 	, Posbility: 0.0120
Next Token :    , Posbility: 0.0225
Next Token :     , Posbility: 0.1875
Next Token :   , Posbility: 0.7422
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0718
Next Token : match, Posbility: 0.0815
Next Token : (, Posbility: 0.1523
Next Token : if, Posbility: 0.2852
Next Token : let, Posbility: 0.3223
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0245
Next Token :  v, Posbility: 0.0278
Next Token :  is, Posbility: 0.0356
Next Token :  rec, Posbility: 0.0459
Next Token :  , Posbility: 0.6328
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0449
Next Token : z, Posbility: 0.0449
Next Token : diff, Posbility: 0.0654
Next Token : (, Posbility: 0.0840
Next Token : x, Posbility: 0.4824
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0244
Next Token : x, Posbility: 0.0244
Next Token : ,, Posbility: 0.0518
Next Token :  =, Posbility: 0.2314
Next Token : _, Posbility: 0.4902
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : negative, Posbility: 0.0549
Next Token : neg, Posbility: 0.0903
Next Token : sign, Posbility: 0.0903
Next Token : positive, Posbility: 0.0903
Next Token : is, Posbility: 0.1494
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : pos, Posbility: 0.0009
Next Token : odd, Posbility: 0.0009
Next Token :  =, Posbility: 0.0024
Next Token : neg, Posbility: 0.0066
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : odd, Posbility: 0.0189
Next Token : pos, Posbility: 0.0311
Next Token : neg, Posbility: 0.0845
Next Token : positive, Posbility: 0.3789
Next Token : negative, Posbility: 0.3789
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0022
Next Token :  , Posbility: 0.0209
Next Token : _, Posbility: 0.0267
Next Token : ,, Posbility: 0.0566
Next Token :  =, Posbility: 0.8867
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  int, Posbility: 0.0060
Next Token :  ((, Posbility: 0.0098
Next Token :  not, Posbility: 0.0208
Next Token : 
, Posbility: 0.0342
Next Token :  , Posbility: 0.8828
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0081
Next Token : ref, Posbility: 0.0194
Next Token : Int, Posbility: 0.0320
Next Token : (, Posbility: 0.1631
Next Token : x, Posbility: 0.7305
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : <, Posbility: 0.0034
Next Token :  =, Posbility: 0.0081
Next Token :  <=, Posbility: 0.0081
Next Token :  >=, Posbility: 0.0361
Next Token :  , Posbility: 0.9336
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0002
Next Token : â‰¤, Posbility: 0.0003
Next Token : /, Posbility: 0.0007
Next Token : >, Posbility: 0.0097
Next Token : <, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0.0, Posbility: 0.0038
Next Token :  , Posbility: 0.0063
Next Token :  0;, Posbility: 0.0063
Next Token : >, Posbility: 0.0464
Next Token :  0, Posbility: 0.9336
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ||, Posbility: 0.0156
Next Token : 
, Posbility: 0.0481
Next Token :  , Posbility: 0.0618
Next Token :  &&, Posbility: 0.1484
Next Token :  in, Posbility: 0.6641
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0003
Next Token : 

, Posbility: 0.0022
Next Token :   , Posbility: 0.0024
Next Token :  , Posbility: 0.0123
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0005
Next Token :       , Posbility: 0.0006
Next Token : let, Posbility: 0.0008
Next Token :     , Posbility: 0.0025
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0039
Next Token : (, Posbility: 0.0106
Next Token : x, Posbility: 0.0135
Next Token : if, Posbility: 0.0175
Next Token : let, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  one, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  sign, Posbility: 0.0002
Next Token :  is, Posbility: 0.0005
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : z, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : (, Posbility: 0.0005
Next Token : x, Posbility: 0.0110
Next Token : y, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  is, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : positive, Posbility: 0.0000
Next Token : sign, Posbility: 0.0001
Next Token : has, Posbility: 0.0001
Next Token : negative, Posbility: 0.0001
Next Token : is, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : nt, Posbility: 0.0000
Next Token :  negative, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : not, Posbility: 0.0000
Next Token : zero, Posbility: 0.0001
Next Token : neg, Posbility: 0.0001
Next Token : positive, Posbility: 0.0179
Next Token : negative, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token :   , Posbility: 0.0006
Next Token :  , Posbility: 0.0006
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  ~, Posbility: 0.0001
Next Token :  !, Posbility: 0.0001
Next Token :   , Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : (, Posbility: 0.0004
Next Token : x, Posbility: 0.0008
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : <, Posbility: 0.0001
Next Token :  <=, Posbility: 0.0001
Next Token :  >=, Posbility: 0.0012
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : â‰¤, Posbility: 0.0000
Next Token : >, Posbility: 0.0013
Next Token : <, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : >, Posbility: 0.0002
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token :  &&, Posbility: 0.0003
Next Token :   , Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0009
Next Token :  , Posbility: 0.0031
Next Token : 

, Posbility: 0.0203
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0005
Next Token :       , Posbility: 0.0010
Next Token :  , Posbility: 0.0025
Next Token :     , Posbility: 0.0046
Next Token :   , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.1348
Next Token : let, Posbility: 0.1533
Next Token : (, Posbility: 0.1729
Next Token : not, Posbility: 0.1729
Next Token : if, Posbility: 0.2520
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0021
Next Token :   , Posbility: 0.0039
Next Token :  !, Posbility: 0.0154
Next Token :  not, Posbility: 0.0175
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : !(, Posbility: 0.0023
Next Token : y, Posbility: 0.0023
Next Token : (, Posbility: 0.0471
Next Token : x, Posbility: 0.9453
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0003
Next Token :  ==, Posbility: 0.0009
Next Token :  =, Posbility: 0.0012
Next Token :  , Posbility: 0.0017
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : has, Posbility: 0.0000
Next Token :  is, Posbility: 0.0000
Next Token : or, Posbility: 0.0000
Next Token : and, Posbility: 0.0000
Next Token : is, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  true, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :  negative, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : not, Posbility: 0.0000
Next Token : zero, Posbility: 0.0000
Next Token : neg, Posbility: 0.0000
Next Token : positive, Posbility: 0.0001
Next Token : negative, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0400
Next Token :  =, Posbility: 0.0513
Next Token :  then, Posbility: 0.0659
Next Token :  , Posbility: 0.2949
Next Token :  &&, Posbility: 0.4863
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative &&
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  (!, Posbility: 0.0006
Next Token :  not, Posbility: 0.0010
Next Token :   , Posbility: 0.0013
Next Token :  !, Posbility: 0.1475
Next Token :  , Posbility: 0.8477
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : !, Posbility: 0.0000
Next Token : x, Posbility: 0.0009
Next Token : !(, Posbility: 0.0009
Next Token : (, Posbility: 0.0025
Next Token : y, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0000
Next Token :  !=, Posbility: 0.0000
Next Token :  >=, Posbility: 0.0003
Next Token :  , Posbility: 0.0007
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token : has, Posbility: 0.0000
Next Token : not, Posbility: 0.0000
Next Token : negative, Posbility: 0.0000
Next Token : is, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  positive, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  negative, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : not, Posbility: 0.0000
Next Token : zero, Posbility: 0.0000
Next Token : neg, Posbility: 0.0000
Next Token : positive, Posbility: 0.0004
Next Token : negative, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_negative
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  or, Posbility: 0.0081
Next Token :   , Posbility: 0.0117
Next Token : 
, Posbility: 0.1836
Next Token :  then, Posbility: 0.3887
Next Token :  ||, Posbility: 0.3887
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_negative ||
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0253
Next Token :  (!, Posbility: 0.0287
Next Token :  !, Posbility: 0.0884
Next Token : 
, Posbility: 0.2715
Next Token :  , Posbility: 0.5742
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_negative || 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : !(, Posbility: 0.0061
Next Token : 
, Posbility: 0.0167
Next Token : y, Posbility: 0.0167
Next Token : (, Posbility: 0.0454
Next Token : x, Posbility: 0.9141
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_negative || x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0001
Next Token :  *, Posbility: 0.0002
Next Token :  ==, Posbility: 0.0003
Next Token :  , Posbility: 0.0008
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_negative || x_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : in, Posbility: 0.0000
Next Token : has, Posbility: 0.0000
Next Token : not, Posbility: 0.0000
Next Token :  is, Posbility: 0.0000
Next Token : is, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_negative || x_is
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : nt, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :  negative, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_negative || x_is_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : neutral, Posbility: 0.0000
Next Token : neg, Posbility: 0.0000
Next Token : not, Posbility: 0.0000
Next Token : positive, Posbility: 0.0002
Next Token : negative, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_negative || x_is_negative
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0014
Next Token :  !=, Posbility: 0.0016
Next Token :  , Posbility: 0.0255
Next Token :  ||, Posbility: 0.3105
Next Token :  &&, Posbility: 0.6562
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_negative || x_is_negative &&
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0003
Next Token :  not, Posbility: 0.0005
Next Token : !, Posbility: 0.0005
Next Token :  !, Posbility: 0.5000
Next Token :  , Posbility: 0.5000
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_negative || x_is_negative && 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0009
Next Token : -, Posbility: 0.0009
Next Token : !(, Posbility: 0.0009
Next Token : x, Posbility: 0.0067
Next Token : y, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_negative || x_is_negative && y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0003
Next Token :  >=, Posbility: 0.0022
Next Token :  , Posbility: 0.0085
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_negative || x_is_negative && y_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : in, Posbility: 0.0000
Next Token : negative, Posbility: 0.0000
Next Token :  is, Posbility: 0.0000
Next Token : not, Posbility: 0.0000
Next Token : is, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_negative || x_is_negative && y_is
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : nt, Posbility: 0.0000
Next Token :  not, Posbility: 0.0001
Next Token :  negative, Posbility: 0.0001
Next Token :  positive, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_negative || x_is_negative && y_is_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : zero, Posbility: 0.0000
Next Token : neutral, Posbility: 0.0000
Next Token : not, Posbility: 0.0001
Next Token : positive, Posbility: 0.0474
Next Token : negative, Posbility: 0.9531
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_negative || x_is_negative && y_is_negative
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0118
Next Token :  ||, Posbility: 0.0172
Next Token : 
, Posbility: 0.1270
Next Token :  {, Posbility: 0.1436
Next Token :  then, Posbility: 0.6445
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_negative || x_is_negative && y_is_negative then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0510
Next Token :  ", Posbility: 0.0510
Next Token :  false, Posbility: 0.0510
Next Token :  true, Posbility: 0.1387
Next Token : 
, Posbility: 0.6211
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_negative || x_is_negative && y_is_negative then

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0037
Next Token :      , Posbility: 0.0090
Next Token :   , Posbility: 0.1592
Next Token :    , Posbility: 0.3359
Next Token :     , Posbility: 0.4902
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_negative || x_is_negative && y_is_negative then
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : True, Posbility: 0.0430
Next Token : printf, Posbility: 0.0486
Next Token : Printf, Posbility: 0.0625
Next Token : return, Posbility: 0.0908
Next Token : ", Posbility: 0.4609
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_negative || x_is_negative && y_is_negative then
    "
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : both, Posbility: 0.0615
Next Token : Both, Posbility: 0.0791
Next Token : YES, Posbility: 0.0791
Next Token : The, Posbility: 0.0894
Next Token : Yes, Posbility: 0.1147
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_negative || x_is_negative && y_is_negative then
    "Yes
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0276
Next Token : !", Posbility: 0.0752
Next Token : ";, Posbility: 0.0752
Next Token : ,, Posbility: 0.2041
Next Token : ", Posbility: 0.5547
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_negative || x_is_negative && y_is_negative then
    "Yes"
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0014
Next Token :  , Posbility: 0.0073
Next Token :  else, Posbility: 0.0107
Next Token :  |, Posbility: 0.0137
Next Token : 
, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_negative || x_is_negative && y_is_negative then
    "Yes"

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0001
Next Token :    , Posbility: 0.0003
Next Token : else, Posbility: 0.0003
Next Token :     , Posbility: 0.0059
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_negative || x_is_negative && y_is_negative then
    "Yes"
  
 score:False
Error type: noerr
---------------------------
Next Token : @, Posbility: 0.0001
Next Token : |, Posbility: 0.0002
Next Token : els, Posbility: 0.0013
Next Token : elif, Posbility: 0.0159
Next Token : else, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_negative || x_is_negative && y_is_negative then
    "Yes"
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0007
Next Token : if, Posbility: 0.0032
Next Token :  ", Posbility: 0.0649
Next Token :  , Posbility: 0.1377
Next Token : 
, Posbility: 0.7930
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_negative || x_is_negative && y_is_negative then
    "Yes"
  else

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0001
Next Token :   , Posbility: 0.0003
Next Token :       , Posbility: 0.0005
Next Token :    , Posbility: 0.0022
Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_negative || x_is_negative && y_is_negative then
    "Yes"
  else
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0003
Next Token : (", Posbility: 0.0005
Next Token : x, Posbility: 0.0006
Next Token : if, Posbility: 0.0028
Next Token : ", Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_negative || x_is_negative && y_is_negative then
    "Yes"
  else
    "
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : no, Posbility: 0.0001
Next Token : False, Posbility: 0.0001
Next Token : Not, Posbility: 0.0012
Next Token : NO, Posbility: 0.0032
Next Token : No, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_negative || x_is_negative && y_is_negative then
    "Yes"
  else
    "No
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0023
Next Token : ,, Posbility: 0.0023
Next Token : pe, Posbility: 0.0023
Next Token : ";, Posbility: 0.0469
Next Token : ", Posbility: 0.9414
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_negative || x_is_negative && y_is_negative then
    "Yes"
  else
    "No"
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0011
Next Token : , Posbility: 0.0019
Next Token :  , Posbility: 0.0045
Next Token : 
, Posbility: 0.3164
Next Token : 

, Posbility: 0.6719
---------------------------
code:
 (* Write a  function to check whether the given two integers have opposite sign or not. *)
let opposite_sign x y =
  let x_is_negative = x < 0 in
  let y_is_negative = y < 0 in
  if x_is_negative && y_is_negative || x_is_negative && y_is_negative then
    "Yes"
  else
    "No"


 score:True
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END and No Syntax Error--------

processing time : :37.31806445121765

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>