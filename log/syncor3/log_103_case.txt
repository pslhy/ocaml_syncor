code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  all, Posbility: 0.0562
Next Token :  is, Posbility: 0.1523
Next Token :  rec, Posbility: 0.1523
Next Token :  check, Posbility: 0.1953
Next Token :  , Posbility: 0.1953
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0400
Next Token : ident, Posbility: 0.0400
Next Token : print, Posbility: 0.0454
Next Token : eq, Posbility: 0.0454
Next Token : (, Posbility: 0.0583
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : all, Posbility: 0.0278
Next Token : x, Posbility: 0.0315
Next Token :  , Posbility: 0.0459
Next Token : is, Posbility: 0.0459
Next Token : check, Posbility: 0.1416
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : :, Posbility: 0.0074
Next Token : ,, Posbility: 0.0293
Next Token : -, Posbility: 0.0376
Next Token :  , Posbility: 0.0796
Next Token : _, Posbility: 0.7578
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : data, Posbility: 0.0840
Next Token : type, Posbility: 0.0840
Next Token : same, Posbility: 0.1226
Next Token : tuple, Posbility: 0.1572
Next Token : all, Posbility: 0.2598
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ?, Posbility: 0.0055
Next Token : ), Posbility: 0.0090
Next Token : ,, Posbility: 0.0115
Next Token :  , Posbility: 0.1094
Next Token : _, Posbility: 0.8086
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : type, Posbility: 0.0352
Next Token : equal, Posbility: 0.0513
Next Token : data, Posbility: 0.0845
Next Token : types, Posbility: 0.0957
Next Token : same, Posbility: 0.4863
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  =, Posbility: 0.0033
Next Token : ), Posbility: 0.0145
Next Token : ,, Posbility: 0.0396
Next Token :  , Posbility: 0.1074
Next Token : _, Posbility: 0.7930
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : kind, Posbility: 0.0203
Next Token : dtype, Posbility: 0.0203
Next Token : types, Posbility: 0.0549
Next Token : data, Posbility: 0.4062
Next Token : type, Posbility: 0.4062
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ), Posbility: 0.0339
Next Token :  a, Posbility: 0.0437
Next Token :  ?, Posbility: 0.0635
Next Token : _, Posbility: 0.0718
Next Token :  , Posbility: 0.6016
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ts, Posbility: 0.0327
Next Token : :, Posbility: 0.0537
Next Token : (, Posbility: 0.1289
Next Token : x, Posbility: 0.1465
Next Token : t, Posbility: 0.3965
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 1), Posbility: 0.0156
Next Token :  , Posbility: 0.0200
Next Token : 1, Posbility: 0.0374
Next Token :  =, Posbility: 0.0422
Next Token : ), Posbility: 0.8516
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t)
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0030
Next Token :  type, Posbility: 0.0039
Next Token : 
, Posbility: 0.0094
Next Token :  , Posbility: 0.1143
Next Token :  =, Posbility: 0.8438
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0020
Next Token :  for, Posbility: 0.0026
Next Token :  match, Posbility: 0.0247
Next Token :  , Posbility: 0.1250
Next Token : 
, Posbility: 0.8164
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =

 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : let, Posbility: 0.0078
Next Token : 	, Posbility: 0.0100
Next Token :    , Posbility: 0.0187
Next Token :     , Posbility: 0.1562
Next Token :   , Posbility: 0.7930
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0193
Next Token : if, Posbility: 0.0464
Next Token : List, Posbility: 0.0525
Next Token : match, Posbility: 0.1426
Next Token : let, Posbility: 0.6406
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  is, Posbility: 0.0250
Next Token :  all, Posbility: 0.0250
Next Token :  open, Posbility: 0.0320
Next Token :  , Posbility: 0.2676
Next Token :  rec, Posbility: 0.3906
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  go, Posbility: 0.0417
Next Token :  rec, Posbility: 0.0474
Next Token :  check, Posbility: 0.1289
Next Token :  loop, Posbility: 0.1875
Next Token :  , Posbility: 0.3496
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : r, Posbility: 0.0439
Next Token : t, Posbility: 0.0640
Next Token : aux, Posbility: 0.1055
Next Token : f, Posbility: 0.1533
Next Token : helper, Posbility: 0.1738
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  a, Posbility: 0.0219
Next Token :  acc, Posbility: 0.0408
Next Token :  i, Posbility: 0.1108
Next Token :  =, Posbility: 0.1426
Next Token :  , Posbility: 0.5625
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : s, Posbility: 0.0145
Next Token : x, Posbility: 0.0271
Next Token : (), Posbility: 0.0947
Next Token : (, Posbility: 0.2012
Next Token : t, Posbility: 0.4805
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  0, Posbility: 0.0160
Next Token :  acc, Posbility: 0.0635
Next Token :  , Posbility: 0.1348
Next Token :  i, Posbility: 0.1348
Next Token :  =, Posbility: 0.5312
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  fun, Posbility: 0.0014
Next Token :  match, Posbility: 0.0104
Next Token :  function, Posbility: 0.0134
Next Token :  , Posbility: 0.0284
Next Token : 
, Posbility: 0.9414
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =

 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :      , Posbility: 0.0013
Next Token :    , Posbility: 0.0039
Next Token :       , Posbility: 0.0074
Next Token :   , Posbility: 0.0227
Next Token :     , Posbility: 0.9648
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : List, Posbility: 0.0074
Next Token : case, Posbility: 0.0095
Next Token : let, Posbility: 0.1309
Next Token : if, Posbility: 0.2441
Next Token : match, Posbility: 0.5859
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0005
Next Token :  type, Posbility: 0.0010
Next Token :  !, Posbility: 0.0040
Next Token :  String, Posbility: 0.0045
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : Seq, Posbility: 0.0053
Next Token : Tuple, Posbility: 0.0088
Next Token : (, Posbility: 0.0210
Next Token : List, Posbility: 0.0347
Next Token : t, Posbility: 0.8945
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token : 
, Posbility: 0.0004
Next Token : ., Posbility: 0.0007
Next Token :  @, Posbility: 0.0007
Next Token :  with, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 

, Posbility: 0.0012
Next Token :  [], Posbility: 0.0013
Next Token :  [, Posbility: 0.0013
Next Token :  , Posbility: 0.0032
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with

 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :         , Posbility: 0.0005
Next Token :    , Posbility: 0.0007
Next Token :   , Posbility: 0.0010
Next Token :       , Posbility: 0.0532
Next Token :     , Posbility: 0.9453
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ([], Posbility: 0.0005
Next Token : (, Posbility: 0.0035
Next Token : [, Posbility: 0.0084
Next Token : [], Posbility: 0.0108
Next Token : |, Posbility: 0.9727
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    |
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  None, Posbility: 0.0073
Next Token :  nil, Posbility: 0.0094
Next Token :  [, Posbility: 0.0420
Next Token :  , Posbility: 0.3984
Next Token :  [], Posbility: 0.5117
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | []
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0042
Next Token :    , Posbility: 0.0048
Next Token :  =>, Posbility: 0.0115
Next Token :  |, Posbility: 0.0454
Next Token :  , Posbility: 0.9102
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  =>, Posbility: 0.0002
Next Token : →, Posbility: 0.0007
Next Token : -, Posbility: 0.0008
Next Token : ::, Posbility: 0.0028
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] ->
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0295
Next Token :  false, Posbility: 0.0295
Next Token :  True, Posbility: 0.0801
Next Token :  , Posbility: 0.2178
Next Token :  true, Posbility: 0.5938
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0019
Next Token : ;, Posbility: 0.0024
Next Token :  |, Posbility: 0.0040
Next Token :  , Posbility: 0.0075
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true

 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :         , Posbility: 0.0001
Next Token :       , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : [, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : //, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    |
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  v, Posbility: 0.0043
Next Token :  a, Posbility: 0.0103
Next Token :  [], Posbility: 0.0149
Next Token :  [, Posbility: 0.2051
Next Token :  , Posbility: 0.7188
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : hd, Posbility: 0.0527
Next Token : t, Posbility: 0.0598
Next Token : (, Posbility: 0.0986
Next Token : x, Posbility: 0.1436
Next Token : _, Posbility: 0.4414
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0114
Next Token : ,, Posbility: 0.0146
Next Token :  when, Posbility: 0.0146
Next Token : ::, Posbility: 0.1387
Next Token :  , Posbility: 0.7969
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : →, Posbility: 0.0010
Next Token : :, Posbility: 0.0011
Next Token : if, Posbility: 0.0256
Next Token : ->, Posbility: 0.4551
Next Token : ::, Posbility: 0.5156
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ ::
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  [, Posbility: 0.0045
Next Token :  acc, Posbility: 0.0058
Next Token :  [], Posbility: 0.0157
Next Token :  rest, Posbility: 0.0708
Next Token :  , Posbility: 0.8633
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : x, Posbility: 0.0664
Next Token : _, Posbility: 0.0850
Next Token : tail, Posbility: 0.1592
Next Token : ts, Posbility: 0.2041
Next Token : t, Posbility: 0.3359
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0620
Next Token : 2, Posbility: 0.1484
Next Token :  , Posbility: 0.1914
Next Token : 1, Posbility: 0.2168
Next Token : ', Posbility: 0.2773
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t'
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  =, Posbility: 0.0050
Next Token :  =>, Posbility: 0.0082
Next Token :  when, Posbility: 0.0093
Next Token :  as, Posbility: 0.0173
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -, Posbility: 0.0002
Next Token :  when, Posbility: 0.0002
Next Token : if, Posbility: 0.0021
Next Token : ::, Posbility: 0.1328
Next Token : ->, Posbility: 0.8633
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  false, Posbility: 0.0220
Next Token :  !, Posbility: 0.0220
Next Token :  match, Posbility: 0.0220
Next Token :  , Posbility: 0.1621
Next Token : 
, Posbility: 0.7266
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->

 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :          , Posbility: 0.0037
Next Token :      , Posbility: 0.0114
Next Token :        , Posbility: 0.0240
Next Token :       , Posbility: 0.1562
Next Token :         , Posbility: 0.7969
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : helper, Posbility: 0.0288
Next Token : (, Posbility: 0.0417
Next Token : match, Posbility: 0.1138
Next Token : if, Posbility: 0.2734
Next Token : let, Posbility: 0.4492
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  type, Posbility: 0.0496
Next Token :  v, Posbility: 0.0640
Next Token :  first, Posbility: 0.0640
Next Token :  rec, Posbility: 0.1050
Next Token :  , Posbility: 0.4707
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : hd, Posbility: 0.0295
Next Token : (, Posbility: 0.0552
Next Token : x, Posbility: 0.1167
Next Token : head, Posbility: 0.1167
Next Token : t, Posbility: 0.2793
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 0, Posbility: 0.0884
Next Token : _, Posbility: 0.1455
Next Token :  =, Posbility: 0.1650
Next Token : 1, Posbility: 0.1865
Next Token : ', Posbility: 0.3086
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : t, Posbility: 0.0132
Next Token : s, Posbility: 0.0359
Next Token : ', Posbility: 0.1611
Next Token :  =, Posbility: 0.2656
Next Token : _, Posbility: 0.4375
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  =, Posbility: 0.0791
Next Token : 1, Posbility: 0.0791
Next Token : type, Posbility: 0.1299
Next Token : first, Posbility: 0.1299
Next Token : head, Posbility: 0.1299
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0008
Next Token :   , Posbility: 0.0014
Next Token : _, Posbility: 0.0101
Next Token : ,, Posbility: 0.0747
Next Token :  =, Posbility: 0.9102
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head =
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  [, Posbility: 0.0009
Next Token : 
, Posbility: 0.0024
Next Token :  Car, Posbility: 0.0024
Next Token :  first, Posbility: 0.0040
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : Head, Posbility: 0.0275
Next Token : Tuple, Posbility: 0.0398
Next Token : head, Posbility: 0.0747
Next Token : t, Posbility: 0.3340
Next Token : List, Posbility: 0.3789
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : Helpers, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : _, Posbility: 0.0012
Next Token : ., Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : unsafe, Posbility: 0.0070
Next Token : nth, Posbility: 0.0115
Next Token : first, Posbility: 0.0356
Next Token : head, Posbility: 0.1807
Next Token : hd, Posbility: 0.7148
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  [, Posbility: 0.0002
Next Token :  ~, Posbility: 0.0005
Next Token : _, Posbility: 0.0025
Next Token : (, Posbility: 0.0028
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : head, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : helper, Posbility: 0.0002
Next Token : (, Posbility: 0.0041
Next Token : t, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ',, Posbility: 0.0022
Next Token : 
, Posbility: 0.0025
Next Token : ';, Posbility: 0.0398
Next Token :  in, Posbility: 0.0452
Next Token : ', Posbility: 0.9062
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t'
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  |, Posbility: 0.0002
Next Token :   , Posbility: 0.0004
Next Token :  , Posbility: 0.0008
Next Token : 
, Posbility: 0.0124
Next Token :  in, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0005
Next Token : 

, Posbility: 0.0025
Next Token :  , Posbility: 0.0036
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in

 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :             , Posbility: 0.0009
Next Token :           , Posbility: 0.0011
Next Token :       , Posbility: 0.0019
Next Token :        , Posbility: 0.0159
Next Token :         , Posbility: 0.9766
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0311
Next Token : helper, Posbility: 0.1084
Next Token : match, Posbility: 0.1084
Next Token : if, Posbility: 0.1787
Next Token : let, Posbility: 0.4863
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  v, Posbility: 0.0100
Next Token :  same, Posbility: 0.0100
Next Token :  type, Posbility: 0.0308
Next Token :  rec, Posbility: 0.0447
Next Token :  , Posbility: 0.7930
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : x, Posbility: 0.0063
Next Token : dt, Posbility: 0.0092
Next Token : (, Posbility: 0.0104
Next Token : head, Posbility: 0.0410
Next Token : t, Posbility: 0.8203
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0056
Next Token : 1, Posbility: 0.0093
Next Token :  =, Posbility: 0.0153
Next Token : ', Posbility: 0.3086
Next Token : _, Posbility: 0.6523
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : last, Posbility: 0.0115
Next Token : data, Posbility: 0.0311
Next Token : type, Posbility: 0.0311
Next Token : tail, Posbility: 0.2305
Next Token : head, Posbility: 0.6250
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : :, Posbility: 0.0020
Next Token : 2, Posbility: 0.0033
Next Token : ', Posbility: 0.0659
Next Token :  =, Posbility: 0.1089
Next Token : _, Posbility: 0.8047
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : value, Posbility: 0.0097
Next Token : t, Posbility: 0.0160
Next Token : head, Posbility: 0.0435
Next Token : data, Posbility: 0.1943
Next Token : type, Posbility: 0.5273
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0009
Next Token : ', Posbility: 0.0010
Next Token : d, Posbility: 0.0040
Next Token : _, Posbility: 0.0109
Next Token :  =, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type =
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  get, Posbility: 0.0093
Next Token : 
, Posbility: 0.0254
Next Token :  typeof, Posbility: 0.0254
Next Token :  type, Posbility: 0.0420
Next Token :  , Posbility: 0.8398
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : Types, Posbility: 0.0245
Next Token : Data, Posbility: 0.0757
Next Token : t, Posbility: 0.0854
Next Token : Type, Posbility: 0.0972
Next Token : List, Posbility: 0.4355
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : Type, Posbility: 0.0001
Next Token : Helpers, Posbility: 0.0002
Next Token : Types, Posbility: 0.0002
Next Token : _, Posbility: 0.0076
Next Token : ., Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : member, Posbility: 0.0131
Next Token : mem, Posbility: 0.0403
Next Token : map, Posbility: 0.0518
Next Token : head, Posbility: 0.1406
Next Token : hd, Posbility: 0.6328
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ', Posbility: 0.0067
Next Token : (, Posbility: 0.0162
Next Token :  type, Posbility: 0.0267
Next Token : _, Posbility: 0.0388
Next Token :  , Posbility: 0.8828
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : List, Posbility: 0.0103
Next Token : Types, Posbility: 0.0170
Next Token : Type, Posbility: 0.0170
Next Token : (, Posbility: 0.2988
Next Token : t, Posbility: 0.6328
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0043
Next Token :  |, Posbility: 0.0217
Next Token : _, Posbility: 0.0762
Next Token : ', Posbility: 0.3848
Next Token :  in, Posbility: 0.4961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :         , Posbility: 0.0001
Next Token :   , Posbility: 0.0004
Next Token :  , Posbility: 0.0022
Next Token : 

, Posbility: 0.0124
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in

 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :          , Posbility: 0.0005
Next Token :           , Posbility: 0.0006
Next Token :       , Posbility: 0.0006
Next Token :        , Posbility: 0.0330
Next Token :         , Posbility: 0.9648
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : List, Posbility: 0.0391
Next Token : match, Posbility: 0.1060
Next Token : if, Posbility: 0.1357
Next Token : helper, Posbility: 0.1357
Next Token : let, Posbility: 0.4746
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  is, Posbility: 0.0156
Next Token :  type, Posbility: 0.0200
Next Token :  res, Posbility: 0.0200
Next Token :  rec, Posbility: 0.1475
Next Token :  , Posbility: 0.6641
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0095
Next Token : head, Posbility: 0.0123
Next Token : tail, Posbility: 0.0139
Next Token : helper, Posbility: 0.0903
Next Token : t, Posbility: 0.7578
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0060
Next Token : 1, Posbility: 0.0099
Next Token :  =, Posbility: 0.0270
Next Token : ', Posbility: 0.2559
Next Token : _, Posbility: 0.6953
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : data, Posbility: 0.0030
Next Token : type, Posbility: 0.0222
Next Token : rest, Posbility: 0.0222
Next Token : tail, Posbility: 0.4453
Next Token : head, Posbility: 0.4453
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : s, Posbility: 0.0016
Next Token : 2, Posbility: 0.0023
Next Token : ', Posbility: 0.0135
Next Token :  =, Posbility: 0.0287
Next Token : _, Posbility: 0.9492
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : tail, Posbility: 0.0525
Next Token : same, Posbility: 0.0596
Next Token : value, Posbility: 0.0596
Next Token : data, Posbility: 0.2354
Next Token : type, Posbility: 0.2354
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0067
Next Token : 2, Posbility: 0.0339
Next Token :  =, Posbility: 0.1514
Next Token : ', Posbility: 0.2500
Next Token : _, Posbility: 0.5312
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : name, Posbility: 0.0322
Next Token : eq, Posbility: 0.0366
Next Token : data, Posbility: 0.0415
Next Token : is, Posbility: 0.0532
Next Token : same, Posbility: 0.0776
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0048
Next Token : type, Posbility: 0.0048
Next Token :  as, Posbility: 0.0048
Next Token : _, Posbility: 0.2617
Next Token :  =, Posbility: 0.7109
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same =
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  match, Posbility: 0.0131
Next Token :  type, Posbility: 0.0168
Next Token :  check, Posbility: 0.0245
Next Token : 
, Posbility: 0.2324
Next Token :  , Posbility: 0.6328
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ref, Posbility: 0.0275
Next Token : Type, Posbility: 0.0311
Next Token : (, Posbility: 0.0659
Next Token : t, Posbility: 0.2617
Next Token : List, Posbility: 0.4297
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : Data, Posbility: 0.0000
Next Token : Types, Posbility: 0.0000
Next Token : Type, Posbility: 0.0001
Next Token : _, Posbility: 0.0017
Next Token : ., Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : is, Posbility: 0.0103
Next Token : fold, Posbility: 0.0150
Next Token : map, Posbility: 0.0248
Next Token : head, Posbility: 0.0596
Next Token : hd, Posbility: 0.8203
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  type, Posbility: 0.0027
Next Token :  ~, Posbility: 0.0031
Next Token : (, Posbility: 0.0031
Next Token : _, Posbility: 0.0084
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : Type, Posbility: 0.0003
Next Token : helper, Posbility: 0.0009
Next Token : List, Posbility: 0.0023
Next Token : (, Posbility: 0.0471
Next Token : t, Posbility: 0.9453
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  in, Posbility: 0.0342
Next Token :  ==, Posbility: 0.0386
Next Token : _, Posbility: 0.0437
Next Token :  =, Posbility: 0.3672
Next Token : ', Posbility: 0.4707
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t'
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  |, Posbility: 0.0100
Next Token :  ==, Posbility: 0.0272
Next Token : _, Posbility: 0.0309
Next Token :  =, Posbility: 0.4258
Next Token :  in, Posbility: 0.4824
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  match, Posbility: 0.0007
Next Token :  equal, Posbility: 0.0008
Next Token : 

, Posbility: 0.0027
Next Token :  , Posbility: 0.0178
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in

 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :            , Posbility: 0.0013
Next Token :           , Posbility: 0.0072
Next Token :             , Posbility: 0.0195
Next Token :        , Posbility: 0.0284
Next Token :         , Posbility: 0.9414
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : List, Posbility: 0.0562
Next Token : helper, Posbility: 0.1191
Next Token : match, Posbility: 0.1533
Next Token : if, Posbility: 0.1963
Next Token : let, Posbility: 0.3242
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  is, Posbility: 0.0206
Next Token :  res, Posbility: 0.0206
Next Token :  same, Posbility: 0.0233
Next Token :  rec, Posbility: 0.1348
Next Token :  , Posbility: 0.6836
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (), Posbility: 0.0062
Next Token : (, Posbility: 0.0090
Next Token : tail, Posbility: 0.0216
Next Token : helper, Posbility: 0.0586
Next Token : t, Posbility: 0.8086
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0025
Next Token : 1, Posbility: 0.0068
Next Token :  =, Posbility: 0.0238
Next Token : ', Posbility: 0.1758
Next Token : _, Posbility: 0.7852
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : len, Posbility: 0.0076
Next Token : type, Posbility: 0.0205
Next Token : rest, Posbility: 0.0559
Next Token : tail, Posbility: 0.4121
Next Token : head, Posbility: 0.4121
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0008
Next Token : s, Posbility: 0.0010
Next Token : ', Posbility: 0.0011
Next Token :  =, Posbility: 0.0140
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : value, Posbility: 0.0160
Next Token : tail, Posbility: 0.0559
Next Token : data, Posbility: 0.0718
Next Token : same, Posbility: 0.1523
Next Token : type, Posbility: 0.5312
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0018
Next Token : 2, Posbility: 0.0091
Next Token : ', Posbility: 0.0170
Next Token :  =, Posbility: 0.0359
Next Token : _, Posbility: 0.9297
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : not, Posbility: 0.0160
Next Token : eq, Posbility: 0.0160
Next Token : diff, Posbility: 0.0205
Next Token : equal, Posbility: 0.0264
Next Token : same, Posbility: 0.6797
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  be, Posbility: 0.0052
Next Token : ', Posbility: 0.0140
Next Token : 2, Posbility: 0.0232
Next Token :  =, Posbility: 0.1709
Next Token : _, Posbility: 0.7656
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : res, Posbility: 0.0161
Next Token : equal, Posbility: 0.0208
Next Token : data, Posbility: 0.0236
Next Token : type, Posbility: 0.0723
Next Token : same, Posbility: 0.4727
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  be, Posbility: 0.0012
Next Token :  , Posbility: 0.0029
Next Token : type, Posbility: 0.0029
Next Token : _, Posbility: 0.0522
Next Token :  =, Posbility: 0.9258
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same =
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  String, Posbility: 0.0079
Next Token :  match, Posbility: 0.0090
Next Token :  check, Posbility: 0.0148
Next Token : 
, Posbility: 0.1094
Next Token :  , Posbility: 0.8086
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : Type, Posbility: 0.0106
Next Token : helper, Posbility: 0.0120
Next Token : (, Posbility: 0.0253
Next Token : t, Posbility: 0.1289
Next Token : List, Posbility: 0.7383
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : Type, Posbility: 0.0000
Next Token : _, Posbility: 0.0005
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : member, Posbility: 0.0018
Next Token : last, Posbility: 0.0030
Next Token : tail, Posbility: 0.0063
Next Token : head, Posbility: 0.0222
Next Token : hd, Posbility: 0.9453
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token : (, Posbility: 0.0004
Next Token : _, Posbility: 0.0019
Next Token : ', Posbility: 0.0041
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : helper, Posbility: 0.0003
Next Token : List, Posbility: 0.0066
Next Token : (, Posbility: 0.0178
Next Token : t, Posbility: 0.9727
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  =, Posbility: 0.0012
Next Token :  and, Posbility: 0.0018
Next Token : _, Posbility: 0.0054
Next Token :  in, Posbility: 0.0747
Next Token : ', Posbility: 0.9062
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ', Posbility: 0.0006
Next Token :  =, Posbility: 0.0008
Next Token : _, Posbility: 0.0306
Next Token :  in, Posbility: 0.4219
Next Token : ', Posbility: 0.5430
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0003
Next Token :  and, Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token : 
, Posbility: 0.0013
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0013
Next Token : 

, Posbility: 0.0140
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in

 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :       , Posbility: 0.0010
Next Token :           , Posbility: 0.0030
Next Token :             , Posbility: 0.0056
Next Token :        , Posbility: 0.0369
Next Token :         , Posbility: 0.9492
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0635
Next Token : helper, Posbility: 0.0718
Next Token : match, Posbility: 0.1523
Next Token : if, Posbility: 0.2832
Next Token : let, Posbility: 0.2832
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  is, Posbility: 0.0250
Next Token :  type, Posbility: 0.0250
Next Token :  same, Posbility: 0.0364
Next Token :  rec, Posbility: 0.0679
Next Token :  , Posbility: 0.7305
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0051
Next Token : tail, Posbility: 0.0075
Next Token : (, Posbility: 0.0109
Next Token : helper, Posbility: 0.0295
Next Token : t, Posbility: 0.8633
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0017
Next Token : 1, Posbility: 0.0060
Next Token :  =, Posbility: 0.0098
Next Token : ', Posbility: 0.0933
Next Token : _, Posbility: 0.8867
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : type, Posbility: 0.0147
Next Token : rest, Posbility: 0.0147
Next Token : same, Posbility: 0.0147
Next Token : tail, Posbility: 0.1084
Next Token : head, Posbility: 0.8008
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0006
Next Token : ', Posbility: 0.0006
Next Token : s, Posbility: 0.0007
Next Token :  =, Posbility: 0.0067
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : head, Posbility: 0.0139
Next Token : tail, Posbility: 0.0139
Next Token : data, Posbility: 0.0378
Next Token : same, Posbility: 0.1025
Next Token : type, Posbility: 0.7578
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0007
Next Token : 2, Posbility: 0.0017
Next Token : ', Posbility: 0.0035
Next Token :  =, Posbility: 0.0139
Next Token : _, Posbility: 0.9766
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : type, Posbility: 0.0097
Next Token : different, Posbility: 0.0097
Next Token : not, Posbility: 0.0160
Next Token : diff, Posbility: 0.0264
Next Token : same, Posbility: 0.8750
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0011
Next Token : ', Posbility: 0.0011
Next Token : 2, Posbility: 0.0064
Next Token :  =, Posbility: 0.0327
Next Token : _, Posbility: 0.9531
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : not, Posbility: 0.0452
Next Token : different, Posbility: 0.0581
Next Token : type, Posbility: 0.0659
Next Token : diff, Posbility: 0.2598
Next Token : same, Posbility: 0.3340
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0034
Next Token : ', Posbility: 0.0193
Next Token : 2, Posbility: 0.0248
Next Token :  =, Posbility: 0.1113
Next Token : _, Posbility: 0.8242
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : head, Posbility: 0.0083
Next Token : diff, Posbility: 0.0094
Next Token : equal, Posbility: 0.0176
Next Token : type, Posbility: 0.0540
Next Token : same, Posbility: 0.7461
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0012
Next Token :  ..., Posbility: 0.0013
Next Token :  be, Posbility: 0.0019
Next Token : _, Posbility: 0.0066
Next Token :  =, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same =
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  match, Posbility: 0.0008
Next Token :  true, Posbility: 0.0010
Next Token :  check, Posbility: 0.0027
Next Token : 
, Posbility: 0.0201
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0006
Next Token : (, Posbility: 0.0021
Next Token : helper, Posbility: 0.0058
Next Token : t, Posbility: 0.0096
Next Token : List, Posbility: 0.9766
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : nth, Posbility: 0.0007
Next Token : last, Posbility: 0.0009
Next Token : tail, Posbility: 0.0012
Next Token : head, Posbility: 0.0085
Next Token : hd, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token : ', Posbility: 0.0010
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (__, Posbility: 0.0000
Next Token : helper, Posbility: 0.0000
Next Token : List, Posbility: 0.0012
Next Token : (, Posbility: 0.0046
Next Token : t, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ", Posbility: 0.0007
Next Token : '}}, Posbility: 0.0008
Next Token : ';, Posbility: 0.0013
Next Token : ''', Posbility: 0.1182
Next Token : ', Posbility: 0.8750
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t'
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ';, Posbility: 0.0006
Next Token :  '', Posbility: 0.0009
Next Token : ", Posbility: 0.0016
Next Token : ''', Posbility: 0.0471
Next Token : ', Posbility: 0.9492
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0002
Next Token : ''', Posbility: 0.0002
Next Token : ';, Posbility: 0.0003
Next Token :  in, Posbility: 0.0005
Next Token : ', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t'''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token : in, Posbility: 0.0008
Next Token : ', Posbility: 0.0076
Next Token :  in, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  ..., Posbility: 0.0002
Next Token :  , Posbility: 0.0015
Next Token : 

, Posbility: 0.0229
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in

 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :       , Posbility: 0.0021
Next Token :           , Posbility: 0.0039
Next Token :             , Posbility: 0.0056
Next Token :        , Posbility: 0.0366
Next Token :         , Posbility: 0.9453
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0623
Next Token : t, Posbility: 0.0708
Next Token : match, Posbility: 0.1318
Next Token : if, Posbility: 0.1689
Next Token : let, Posbility: 0.4062
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  is, Posbility: 0.0209
Next Token :  type, Posbility: 0.0304
Next Token :  same, Posbility: 0.0304
Next Token :  rec, Posbility: 0.0344
Next Token :  , Posbility: 0.7852
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0042
Next Token : head, Posbility: 0.0060
Next Token : (, Posbility: 0.0088
Next Token : helper, Posbility: 0.0210
Next Token : t, Posbility: 0.8945
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 0, Posbility: 0.0011
Next Token : 1, Posbility: 0.0033
Next Token :  =, Posbility: 0.0080
Next Token : ', Posbility: 0.0591
Next Token : _, Posbility: 0.9258
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : type, Posbility: 0.0064
Next Token : rest, Posbility: 0.0064
Next Token : same, Posbility: 0.0064
Next Token : tail, Posbility: 0.0173
Next Token : head, Posbility: 0.9453
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ', Posbility: 0.0003
Next Token : 2, Posbility: 0.0004
Next Token : s, Posbility: 0.0005
Next Token :  =, Posbility: 0.0046
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : is, Posbility: 0.0023
Next Token : head, Posbility: 0.0023
Next Token : data, Posbility: 0.0062
Next Token : same, Posbility: 0.0459
Next Token : type, Posbility: 0.9219
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0004
Next Token : 2, Posbility: 0.0007
Next Token : ', Posbility: 0.0022
Next Token :  =, Posbility: 0.0075
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : type, Posbility: 0.0024
Next Token : equal, Posbility: 0.0024
Next Token : diff, Posbility: 0.0024
Next Token : not, Posbility: 0.0065
Next Token : same, Posbility: 0.9688
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ,, Posbility: 0.0004
Next Token :  , Posbility: 0.0004
Next Token : 2, Posbility: 0.0009
Next Token :  =, Posbility: 0.0109
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : equal, Posbility: 0.0015
Next Token : not, Posbility: 0.0019
Next Token : diff, Posbility: 0.0031
Next Token : type, Posbility: 0.0040
Next Token : same, Posbility: 0.9766
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token : 2, Posbility: 0.0004
Next Token :  =, Posbility: 0.0059
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : equal, Posbility: 0.0005
Next Token : different, Posbility: 0.0005
Next Token : type, Posbility: 0.0010
Next Token : diff, Posbility: 0.0010
Next Token : same, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0016
Next Token : 2, Posbility: 0.0034
Next Token : ', Posbility: 0.0082
Next Token :  =, Posbility: 0.0366
Next Token : _, Posbility: 0.9414
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : diff, Posbility: 0.0014
Next Token : head, Posbility: 0.0024
Next Token : equal, Posbility: 0.0039
Next Token : type, Posbility: 0.0082
Next Token : same, Posbility: 0.9531
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0005
Next Token :  in, Posbility: 0.0007
Next Token :  be, Posbility: 0.0031
Next Token : _, Posbility: 0.0036
Next Token :  =, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same =
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ..., Posbility: 0.0001
Next Token :  match, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0076
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : helper, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token : (, Posbility: 0.0004
Next Token : t, Posbility: 0.0028
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : tail, Posbility: 0.0002
Next Token : nth, Posbility: 0.0002
Next Token : last, Posbility: 0.0003
Next Token : head, Posbility: 0.0036
Next Token : hd, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : ', Posbility: 0.0003
Next Token :  ', Posbility: 0.0006
Next Token :  '', Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (__, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : tt, Posbility: 0.0001
Next Token : (, Posbility: 0.0007
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ", Posbility: 0.0013
Next Token : '^, Posbility: 0.0017
Next Token : """, Posbility: 0.0123
Next Token : ', Posbility: 0.1167
Next Token : ''', Posbility: 0.8633
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0002
Next Token : ‘, Posbility: 0.0004
Next Token : ’, Posbility: 0.0038
Next Token : ''', Posbility: 0.0674
Next Token : ', Posbility: 0.9258
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token : ', Posbility: 0.0003
Next Token : 
, Posbility: 0.0007
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ..., Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0011
Next Token : 

, Posbility: 0.0259
Next Token : 
, Posbility: 0.9727
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in

 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :           , Posbility: 0.0014
Next Token :             , Posbility: 0.0024
Next Token :       , Posbility: 0.0024
Next Token :        , Posbility: 0.0327
Next Token :         , Posbility: 0.9570
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0684
Next Token : helper, Posbility: 0.0879
Next Token : match, Posbility: 0.1128
Next Token : if, Posbility: 0.2109
Next Token : let, Posbility: 0.3926
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  is, Posbility: 0.0201
Next Token :  type, Posbility: 0.0332
Next Token :  same, Posbility: 0.0332
Next Token :  rec, Posbility: 0.0427
Next Token :  , Posbility: 0.7578
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0052
Next Token : head, Posbility: 0.0075
Next Token : (, Posbility: 0.0109
Next Token : helper, Posbility: 0.0297
Next Token : t, Posbility: 0.8633
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 0, Posbility: 0.0011
Next Token : 1, Posbility: 0.0034
Next Token :  =, Posbility: 0.0082
Next Token : ', Posbility: 0.0369
Next Token : _, Posbility: 0.9492
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : rest, Posbility: 0.0023
Next Token : same, Posbility: 0.0063
Next Token : type, Posbility: 0.0172
Next Token : tail, Posbility: 0.0172
Next Token : head, Posbility: 0.9375
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ', Posbility: 0.0002
Next Token : 2, Posbility: 0.0003
Next Token : s, Posbility: 0.0005
Next Token :  =, Posbility: 0.0052
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : is, Posbility: 0.0008
Next Token : head, Posbility: 0.0023
Next Token : data, Posbility: 0.0063
Next Token : same, Posbility: 0.0461
Next Token : type, Posbility: 0.9258
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0004
Next Token : 2, Posbility: 0.0007
Next Token : ', Posbility: 0.0012
Next Token :  =, Posbility: 0.0096
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : equal, Posbility: 0.0024
Next Token : diff, Posbility: 0.0024
Next Token : type, Posbility: 0.0040
Next Token : not, Posbility: 0.0040
Next Token : same, Posbility: 0.9688
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ,, Posbility: 0.0004
Next Token :  , Posbility: 0.0005
Next Token : 2, Posbility: 0.0009
Next Token :  =, Posbility: 0.0228
Next Token : _, Posbility: 0.9727
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : not, Posbility: 0.0009
Next Token : different, Posbility: 0.0009
Next Token : diff, Posbility: 0.0013
Next Token : type, Posbility: 0.0031
Next Token : same, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 0.0041
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : diff, Posbility: 0.0001
Next Token : different, Posbility: 0.0001
Next Token : sam, Posbility: 0.0001
Next Token : type, Posbility: 0.0002
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token :  in, Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token :  =, Posbility: 0.0067
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : equal, Posbility: 0.0001
Next Token : diff, Posbility: 0.0001
Next Token : type, Posbility: 0.0002
Next Token : sam, Posbility: 0.0002
Next Token : same, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0015
Next Token : 2, Posbility: 0.0025
Next Token : ', Posbility: 0.0028
Next Token :  =, Posbility: 0.0938
Next Token : _, Posbility: 0.8906
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : true, Posbility: 0.0009
Next Token : equal, Posbility: 0.0027
Next Token : head, Posbility: 0.0031
Next Token : type, Posbility: 0.0065
Next Token : same, Posbility: 0.9609
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  in, Posbility: 0.0004
Next Token : 
, Posbility: 0.0005
Next Token :  be, Posbility: 0.0017
Next Token : _, Posbility: 0.0052
Next Token :  =, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same =
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ..., Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  true, Posbility: 0.0002
Next Token : 
, Posbility: 0.0124
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : helper, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : 
, Posbility: 0.0003
Next Token : t, Posbility: 0.0017
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : nth, Posbility: 0.0001
Next Token : tail, Posbility: 0.0001
Next Token : last, Posbility: 0.0002
Next Token : head, Posbility: 0.0036
Next Token : hd, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  ', Posbility: 0.0002
Next Token :  '', Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (__, Posbility: 0.0000
Next Token : tt, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0008
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ", Posbility: 0.0005
Next Token : '^, Posbility: 0.0005
Next Token : """, Posbility: 0.0035
Next Token : ', Posbility: 0.2432
Next Token : ''', Posbility: 0.7500
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0002
Next Token : ‘, Posbility: 0.0005
Next Token : ’, Posbility: 0.0027
Next Token : ', Posbility: 0.1641
Next Token : ''', Posbility: 0.8320
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : in, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0067
Next Token :  in, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0008
Next Token : 

, Posbility: 0.0229
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in

 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :           , Posbility: 0.0014
Next Token :             , Posbility: 0.0019
Next Token :       , Posbility: 0.0021
Next Token :        , Posbility: 0.0291
Next Token :         , Posbility: 0.9609
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0520
Next Token : match, Posbility: 0.0859
Next Token : helper, Posbility: 0.1099
Next Token : if, Posbility: 0.1416
Next Token : let, Posbility: 0.4941
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  is, Posbility: 0.0172
Next Token :  same, Posbility: 0.0195
Next Token :  rec, Posbility: 0.0221
Next Token :  type, Posbility: 0.0250
Next Token :  , Posbility: 0.8281
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0034
Next Token : head, Posbility: 0.0049
Next Token : (, Posbility: 0.0055
Next Token : helper, Posbility: 0.0133
Next Token : t, Posbility: 0.9297
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 0, Posbility: 0.0005
Next Token : 1, Posbility: 0.0015
Next Token :  =, Posbility: 0.0035
Next Token : ', Posbility: 0.0140
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : rest, Posbility: 0.0024
Next Token : type, Posbility: 0.0064
Next Token : same, Posbility: 0.0064
Next Token : tail, Posbility: 0.0175
Next Token : head, Posbility: 0.9531
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : 2, Posbility: 0.0002
Next Token : s, Posbility: 0.0004
Next Token :  =, Posbility: 0.0028
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : is, Posbility: 0.0009
Next Token : head, Posbility: 0.0014
Next Token : data, Posbility: 0.0039
Next Token : same, Posbility: 0.0177
Next Token : type, Posbility: 0.9648
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0002
Next Token : ', Posbility: 0.0002
Next Token : 2, Posbility: 0.0002
Next Token :  =, Posbility: 0.0046
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : equal, Posbility: 0.0009
Next Token : diff, Posbility: 0.0009
Next Token : not, Posbility: 0.0015
Next Token : type, Posbility: 0.0024
Next Token : same, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ,, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 2, Posbility: 0.0002
Next Token :  =, Posbility: 0.0076
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : not, Posbility: 0.0001
Next Token : diff, Posbility: 0.0001
Next Token : different, Posbility: 0.0001
Next Token : type, Posbility: 0.0004
Next Token : same, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0017
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : diff, Posbility: 0.0000
Next Token : type, Posbility: 0.0000
Next Token : different, Posbility: 0.0000
Next Token : sam, Posbility: 0.0001
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token :  =, Posbility: 0.0008
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : all, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : type, Posbility: 0.0000
Next Token : sam, Posbility: 0.0001
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0036
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : equal, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : type, Posbility: 0.0000
Next Token : sam, Posbility: 0.0001
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ', Posbility: 0.0005
Next Token : 2, Posbility: 0.0005
Next Token :  , Posbility: 0.0007
Next Token :  =, Posbility: 0.0598
Next Token : _, Posbility: 0.9336
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : true, Posbility: 0.0003
Next Token : sam, Posbility: 0.0003
Next Token : equal, Posbility: 0.0007
Next Token : type, Posbility: 0.0019
Next Token : same, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token : 
, Posbility: 0.0008
Next Token :  be, Posbility: 0.0008
Next Token : _, Posbility: 0.0159
Next Token :  =, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same =
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  match, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  true, Posbility: 0.0002
Next Token : 
, Posbility: 0.0293
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : 
, Posbility: 0.0006
Next Token : t, Posbility: 0.0015
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : nth, Posbility: 0.0000
Next Token : tail, Posbility: 0.0001
Next Token : last, Posbility: 0.0001
Next Token : head, Posbility: 0.0028
Next Token : hd, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token :  ', Posbility: 0.0002
Next Token :  '', Posbility: 0.0005
Next Token : 
, Posbility: 0.0006
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : tt, Posbility: 0.0000
Next Token : (__, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0008
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ``, Posbility: 0.0002
Next Token : '^, Posbility: 0.0003
Next Token : """, Posbility: 0.0018
Next Token : ', Posbility: 0.1816
Next Token : ''', Posbility: 0.8164
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t'''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ‘, Posbility: 0.0000
Next Token : ```, Posbility: 0.0000
Next Token : """, Posbility: 0.0001
Next Token : ', Posbility: 0.0019
Next Token : ''', Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0011
Next Token : ‘, Posbility: 0.0014
Next Token : ’, Posbility: 0.0104
Next Token : ', Posbility: 0.1621
Next Token : ''', Posbility: 0.8242
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t'''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ', Posbility: 0.0001
Next Token : \, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0110
Next Token :  in, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0203
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in

 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :           , Posbility: 0.0011
Next Token :             , Posbility: 0.0013
Next Token :       , Posbility: 0.0021
Next Token :        , Posbility: 0.0291
Next Token :         , Posbility: 0.9609
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0549
Next Token : match, Posbility: 0.0801
Next Token : helper, Posbility: 0.0908
Next Token : if, Posbility: 0.1318
Next Token : let, Posbility: 0.5234
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  is, Posbility: 0.0138
Next Token :  same, Posbility: 0.0156
Next Token :  type, Posbility: 0.0200
Next Token :  rec, Posbility: 0.0200
Next Token :  , Posbility: 0.8516
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0038
Next Token : (, Posbility: 0.0049
Next Token : head, Posbility: 0.0049
Next Token : helper, Posbility: 0.0150
Next Token : t, Posbility: 0.9297
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 0, Posbility: 0.0004
Next Token : 1, Posbility: 0.0013
Next Token :  =, Posbility: 0.0036
Next Token : ', Posbility: 0.0096
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : rest, Posbility: 0.0014
Next Token : same, Posbility: 0.0039
Next Token : type, Posbility: 0.0065
Next Token : tail, Posbility: 0.0107
Next Token : head, Posbility: 0.9648
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token : s, Posbility: 0.0003
Next Token :  =, Posbility: 0.0028
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : equal, Posbility: 0.0009
Next Token : head, Posbility: 0.0014
Next Token : data, Posbility: 0.0019
Next Token : same, Posbility: 0.0177
Next Token : type, Posbility: 0.9648
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : ', Posbility: 0.0001
Next Token : 2, Posbility: 0.0002
Next Token :  =, Posbility: 0.0041
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : diff, Posbility: 0.0007
Next Token : equal, Posbility: 0.0009
Next Token : type, Posbility: 0.0015
Next Token : not, Posbility: 0.0015
Next Token : same, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ,, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token :  =, Posbility: 0.0085
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : different, Posbility: 0.0001
Next Token : all, Posbility: 0.0001
Next Token : sam, Posbility: 0.0001
Next Token : type, Posbility: 0.0002
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0013
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : all, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : different, Posbility: 0.0000
Next Token : sam, Posbility: 0.0001
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : all, Posbility: 0.0000
Next Token : different, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0001
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : different, Posbility: 0.0000
Next Token : all, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0001
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0025
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : safe, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : type, Posbility: 0.0000
Next Token : sam, Posbility: 0.0001
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token :  =, Posbility: 0.0420
Next Token : _, Posbility: 0.9570
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : s, Posbility: 0.0001
Next Token : equal, Posbility: 0.0003
Next Token : sam, Posbility: 0.0003
Next Token : type, Posbility: 0.0012
Next Token : same, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0005
Next Token :  in, Posbility: 0.0005
Next Token : 
, Posbility: 0.0014
Next Token : _, Posbility: 0.0598
Next Token :  =, Posbility: 0.9336
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same =
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  match, Posbility: 0.0002
Next Token :  true, Posbility: 0.0005
Next Token : 
, Posbility: 0.0420
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : helper, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : 
, Posbility: 0.0009
Next Token : t, Posbility: 0.0019
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : tail, Posbility: 0.0001
Next Token : nth, Posbility: 0.0001
Next Token : last, Posbility: 0.0001
Next Token : head, Posbility: 0.0059
Next Token : hd, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ', Posbility: 0.0001
Next Token :  '', Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : 
, Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (__, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0012
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : '^, Posbility: 0.0001
Next Token : ``, Posbility: 0.0002
Next Token : """, Posbility: 0.0004
Next Token : ', Posbility: 0.0420
Next Token : ''', Posbility: 0.9570
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ```, Posbility: 0.0000
Next Token : ’, Posbility: 0.0000
Next Token : ‘, Posbility: 0.0000
Next Token : ', Posbility: 0.0005
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ’, Posbility: 0.0000
Next Token : ```, Posbility: 0.0000
Next Token : ‘, Posbility: 0.0000
Next Token : ', Posbility: 0.0003
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0017
Next Token : ‘, Posbility: 0.0031
Next Token : ’, Posbility: 0.0109
Next Token : ', Posbility: 0.2188
Next Token : ''', Posbility: 0.7656
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t''''''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ', Posbility: 0.0001
Next Token : in, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0110
Next Token :  in, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0179
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in

 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :             , Posbility: 0.0011
Next Token :           , Posbility: 0.0011
Next Token :       , Posbility: 0.0019
Next Token :        , Posbility: 0.0258
Next Token :         , Posbility: 0.9648
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0410
Next Token : helper, Posbility: 0.0869
Next Token : match, Posbility: 0.0869
Next Token : if, Posbility: 0.1260
Next Token : let, Posbility: 0.5664
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  is, Posbility: 0.0087
Next Token :  same, Posbility: 0.0127
Next Token :  type, Posbility: 0.0144
Next Token :  rec, Posbility: 0.0144
Next Token :  , Posbility: 0.8906
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0030
Next Token : (, Posbility: 0.0039
Next Token : head, Posbility: 0.0039
Next Token : helper, Posbility: 0.0105
Next Token : t, Posbility: 0.9492
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 0, Posbility: 0.0003
Next Token : 1, Posbility: 0.0009
Next Token :  =, Posbility: 0.0028
Next Token : ', Posbility: 0.0075
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : rest, Posbility: 0.0014
Next Token : type, Posbility: 0.0065
Next Token : same, Posbility: 0.0065
Next Token : tail, Posbility: 0.0107
Next Token : head, Posbility: 0.9609
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : s, Posbility: 0.0002
Next Token :  =, Posbility: 0.0019
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : is, Posbility: 0.0007
Next Token : head, Posbility: 0.0009
Next Token : data, Posbility: 0.0015
Next Token : same, Posbility: 0.0139
Next Token : type, Posbility: 0.9727
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ', Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token :  =, Posbility: 0.0032
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : diff, Posbility: 0.0004
Next Token : equal, Posbility: 0.0005
Next Token : type, Posbility: 0.0009
Next Token : not, Posbility: 0.0009
Next Token : same, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ,, Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0059
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : different, Posbility: 0.0000
Next Token : all, Posbility: 0.0001
Next Token : sam, Posbility: 0.0001
Next Token : type, Posbility: 0.0001
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0013
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : all, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : different, Posbility: 0.0000
Next Token : sam, Posbility: 0.0001
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  same, Posbility: 0.0000
Next Token : different, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0001
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : different, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0001
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : one, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0001
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0017
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : type, Posbility: 0.0000
Next Token : sam, Posbility: 0.0001
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token :  in, Posbility: 0.0002
Next Token :  =, Posbility: 0.0259
Next Token : _, Posbility: 0.9727
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : s, Posbility: 0.0001
Next Token : equal, Posbility: 0.0002
Next Token : sam, Posbility: 0.0004
Next Token : type, Posbility: 0.0007
Next Token : same, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  in, Posbility: 0.0004
Next Token :  , Posbility: 0.0005
Next Token : 
, Posbility: 0.0017
Next Token : _, Posbility: 0.2217
Next Token :  =, Posbility: 0.7734
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same =
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  match, Posbility: 0.0003
Next Token :  true, Posbility: 0.0013
Next Token : 
, Posbility: 0.0532
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : helper, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : 
, Posbility: 0.0010
Next Token : t, Posbility: 0.0022
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : tail, Posbility: 0.0001
Next Token : nth, Posbility: 0.0001
Next Token : last, Posbility: 0.0001
Next Token : head, Posbility: 0.0046
Next Token : hd, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  '', Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : 
, Posbility: 0.0022
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0013
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ‘, Posbility: 0.0002
Next Token : ’, Posbility: 0.0002
Next Token : ``, Posbility: 0.0002
Next Token : ', Posbility: 0.0203
Next Token : ''', Posbility: 0.9766
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t'''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ```, Posbility: 0.0000
Next Token : ’, Posbility: 0.0000
Next Token : ‘, Posbility: 0.0001
Next Token : ', Posbility: 0.0003
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ```, Posbility: 0.0000
Next Token : ’, Posbility: 0.0000
Next Token : ‘, Posbility: 0.0000
Next Token : ', Posbility: 0.0002
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t'''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ’, Posbility: 0.0000
Next Token : ```, Posbility: 0.0000
Next Token : ‘, Posbility: 0.0000
Next Token : ', Posbility: 0.0004
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0008
Next Token : ‘, Posbility: 0.0031
Next Token : ’, Posbility: 0.0074
Next Token : ', Posbility: 0.0201
Next Token : ''', Posbility: 0.9688
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ', Posbility: 0.0001
Next Token : in, Posbility: 0.0001
Next Token :   , Posbility: 0.0003
Next Token : 
, Posbility: 0.0052
Next Token :  in, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0179
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in

 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :             , Posbility: 0.0010
Next Token :           , Posbility: 0.0011
Next Token :       , Posbility: 0.0015
Next Token :        , Posbility: 0.0201
Next Token :         , Posbility: 0.9727
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0354
Next Token : helper, Posbility: 0.0659
Next Token : match, Posbility: 0.0747
Next Token : if, Posbility: 0.1089
Next Token : let, Posbility: 0.6289
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  is, Posbility: 0.0070
Next Token :  same, Posbility: 0.0090
Next Token :  type, Posbility: 0.0115
Next Token :  rec, Posbility: 0.0115
Next Token :  , Posbility: 0.9141
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0021
Next Token : (, Posbility: 0.0027
Next Token : head, Posbility: 0.0027
Next Token : helper, Posbility: 0.0065
Next Token : t, Posbility: 0.9648
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 0, Posbility: 0.0003
Next Token : 1, Posbility: 0.0008
Next Token :  =, Posbility: 0.0028
Next Token : ', Posbility: 0.0067
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : rest, Posbility: 0.0007
Next Token : same, Posbility: 0.0024
Next Token : type, Posbility: 0.0031
Next Token : tail, Posbility: 0.0066
Next Token : head, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : s, Posbility: 0.0002
Next Token :  =, Posbility: 0.0015
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : is, Posbility: 0.0004
Next Token : data, Posbility: 0.0006
Next Token : head, Posbility: 0.0007
Next Token : same, Posbility: 0.0085
Next Token : type, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ', Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token :  =, Posbility: 0.0028
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : different, Posbility: 0.0002
Next Token : equal, Posbility: 0.0002
Next Token : not, Posbility: 0.0004
Next Token : type, Posbility: 0.0005
Next Token : same, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ,, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0046
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : different, Posbility: 0.0000
Next Token : all, Posbility: 0.0001
Next Token : type, Posbility: 0.0001
Next Token : sam, Posbility: 0.0001
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0012
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : different, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : different, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0001
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ..., Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : different, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : sa, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 0.0010
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : type, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0001
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  =, Posbility: 0.0229
Next Token : _, Posbility: 0.9766
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : s, Posbility: 0.0001
Next Token : equal, Posbility: 0.0001
Next Token : type, Posbility: 0.0003
Next Token : sam, Posbility: 0.0003
Next Token : same, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  in, Posbility: 0.0003
Next Token :  , Posbility: 0.0004
Next Token : 
, Posbility: 0.0017
Next Token : _, Posbility: 0.2217
Next Token :  =, Posbility: 0.7734
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same =
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  match, Posbility: 0.0003
Next Token :  true, Posbility: 0.0021
Next Token : 
, Posbility: 0.0420
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : \, Posbility: 0.0003
Next Token : (, Posbility: 0.0004
Next Token : 
, Posbility: 0.0009
Next Token : t, Posbility: 0.0022
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : nth, Posbility: 0.0001
Next Token : tail, Posbility: 0.0001
Next Token : last, Posbility: 0.0001
Next Token : head, Posbility: 0.0059
Next Token : hd, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : 
, Posbility: 0.0015
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0012
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ``, Posbility: 0.0002
Next Token : ‘, Posbility: 0.0002
Next Token : ’, Posbility: 0.0003
Next Token : ', Posbility: 0.0124
Next Token : ''', Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ```, Posbility: 0.0000
Next Token : ’, Posbility: 0.0001
Next Token : ‘, Posbility: 0.0001
Next Token : ', Posbility: 0.0003
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ```, Posbility: 0.0000
Next Token : ’, Posbility: 0.0001
Next Token : ‘, Posbility: 0.0001
Next Token : ', Posbility: 0.0001
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ```, Posbility: 0.0000
Next Token : ’, Posbility: 0.0001
Next Token : ‘, Posbility: 0.0001
Next Token : ', Posbility: 0.0002
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ```, Posbility: 0.0000
Next Token : ’, Posbility: 0.0001
Next Token : ‘, Posbility: 0.0001
Next Token : ', Posbility: 0.0002
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0005
Next Token : ‘, Posbility: 0.0035
Next Token : ’, Posbility: 0.0084
Next Token : ', Posbility: 0.0139
Next Token : ''', Posbility: 0.9727
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token : ''', Posbility: 0.0004
Next Token : ', Posbility: 0.0009
Next Token : 
, Posbility: 0.0076
Next Token :  in, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token : 

, Posbility: 0.0179
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in

 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :             , Posbility: 0.0009
Next Token :           , Posbility: 0.0010
Next Token :       , Posbility: 0.0017
Next Token :        , Posbility: 0.0178
Next Token :         , Posbility: 0.9766
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0295
Next Token : match, Posbility: 0.0625
Next Token : helper, Posbility: 0.0708
Next Token : if, Posbility: 0.0908
Next Token : let, Posbility: 0.6719
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  is, Posbility: 0.0044
Next Token :  same, Posbility: 0.0063
Next Token :  type, Posbility: 0.0081
Next Token :  rec, Posbility: 0.0092
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0024
Next Token : (, Posbility: 0.0027
Next Token : head, Posbility: 0.0031
Next Token : helper, Posbility: 0.0065
Next Token : t, Posbility: 0.9648
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 0, Posbility: 0.0002
Next Token : 1, Posbility: 0.0007
Next Token :  =, Posbility: 0.0022
Next Token : ', Posbility: 0.0052
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : rest, Posbility: 0.0015
Next Token : type, Posbility: 0.0024
Next Token : same, Posbility: 0.0024
Next Token : tail, Posbility: 0.0108
Next Token : head, Posbility: 0.9727
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : s, Posbility: 0.0002
Next Token :  =, Posbility: 0.0013
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : tail, Posbility: 0.0003
Next Token : data, Posbility: 0.0003
Next Token : head, Posbility: 0.0005
Next Token : same, Posbility: 0.0059
Next Token : type, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token :  =, Posbility: 0.0025
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : equal, Posbility: 0.0002
Next Token : all, Posbility: 0.0002
Next Token : type, Posbility: 0.0003
Next Token : not, Posbility: 0.0003
Next Token : same, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0052
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : different, Posbility: 0.0000
Next Token : all, Posbility: 0.0000
Next Token : type, Posbility: 0.0001
Next Token : sam, Posbility: 0.0001
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0010
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  same, Posbility: 0.0000
Next Token : different, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0001
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : different, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ..., Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : sea, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : sea, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : sa, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0010
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : type, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0002
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  =, Posbility: 0.0293
Next Token : _, Posbility: 0.9688
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : equal, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token : type, Posbility: 0.0002
Next Token : sam, Posbility: 0.0004
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token :  in, Posbility: 0.0003
Next Token : 
, Posbility: 0.0011
Next Token : _, Posbility: 0.0532
Next Token :  =, Posbility: 0.9453
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same =
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  match, Posbility: 0.0003
Next Token :  true, Posbility: 0.0027
Next Token : 
, Posbility: 0.0371
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : \, Posbility: 0.0003
Next Token : (, Posbility: 0.0004
Next Token : 
, Posbility: 0.0006
Next Token : t, Posbility: 0.0017
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : \, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : nd, Posbility: 0.0001
Next Token : tail, Posbility: 0.0001
Next Token : last, Posbility: 0.0001
Next Token : head, Posbility: 0.0059
Next Token : hd, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : 
, Posbility: 0.0008
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0015
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ``, Posbility: 0.0002
Next Token : ‘, Posbility: 0.0003
Next Token : ’, Posbility: 0.0004
Next Token : ', Posbility: 0.0110
Next Token : ''', Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t'''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0000
Next Token : ’, Posbility: 0.0001
Next Token : ‘, Posbility: 0.0002
Next Token : ', Posbility: 0.0003
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ```, Posbility: 0.0000
Next Token : ’, Posbility: 0.0001
Next Token : ', Posbility: 0.0001
Next Token : ‘, Posbility: 0.0001
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ```, Posbility: 0.0000
Next Token : ’, Posbility: 0.0001
Next Token : ‘, Posbility: 0.0001
Next Token : ', Posbility: 0.0002
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0000
Next Token : ’, Posbility: 0.0001
Next Token : ', Posbility: 0.0001
Next Token : ‘, Posbility: 0.0002
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ```, Posbility: 0.0000
Next Token : ’, Posbility: 0.0001
Next Token : ', Posbility: 0.0002
Next Token : ‘, Posbility: 0.0002
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0011
Next Token : ‘, Posbility: 0.0050
Next Token : ’, Posbility: 0.0121
Next Token : ', Posbility: 0.0176
Next Token : ''', Posbility: 0.9609
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0003
Next Token : ''', Posbility: 0.0004
Next Token : ', Posbility: 0.0012
Next Token : 
, Posbility: 0.0085
Next Token :  in, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0179
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in

 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :           , Posbility: 0.0007
Next Token :             , Posbility: 0.0008
Next Token :       , Posbility: 0.0010
Next Token :        , Posbility: 0.0179
Next Token :         , Posbility: 0.9766
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0280
Next Token : match, Posbility: 0.0461
Next Token : if, Posbility: 0.0669
Next Token : helper, Posbility: 0.0669
Next Token : let, Posbility: 0.7188
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  is, Posbility: 0.0039
Next Token :  same, Posbility: 0.0056
Next Token :  type, Posbility: 0.0064
Next Token :  rec, Posbility: 0.0082
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0019
Next Token : head, Posbility: 0.0019
Next Token : (), Posbility: 0.0021
Next Token : helper, Posbility: 0.0040
Next Token : t, Posbility: 0.9766
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 0, Posbility: 0.0001
Next Token : 1, Posbility: 0.0003
Next Token :  =, Posbility: 0.0013
Next Token : ', Posbility: 0.0022
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : rest, Posbility: 0.0015
Next Token : same, Posbility: 0.0019
Next Token : type, Posbility: 0.0024
Next Token : tail, Posbility: 0.0109
Next Token : head, Posbility: 0.9766
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token :  =, Posbility: 0.0009
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : data, Posbility: 0.0003
Next Token : tail, Posbility: 0.0003
Next Token : head, Posbility: 0.0003
Next Token : same, Posbility: 0.0046
Next Token : type, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token :  =, Posbility: 0.0019
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : equal, Posbility: 0.0001
Next Token : type, Posbility: 0.0002
Next Token : all, Posbility: 0.0002
Next Token : not, Posbility: 0.0002
Next Token : same, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token :  =, Posbility: 0.0052
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : different, Posbility: 0.0000
Next Token : all, Posbility: 0.0000
Next Token : type, Posbility: 0.0000
Next Token : sam, Posbility: 0.0001
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0010
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : different, Posbility: 0.0000
Next Token : sam, Posbility: 0.0001
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : different, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ..., Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : different, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : sea, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : sea, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  same, Posbility: 0.0000
Next Token : sa, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 0.0015
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : sa, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0001
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :  in, Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token :  =, Posbility: 0.0474
Next Token : _, Posbility: 0.9531
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token : type, Posbility: 0.0002
Next Token : sam, Posbility: 0.0006
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token :  in, Posbility: 0.0007
Next Token : 
, Posbility: 0.0009
Next Token : _, Posbility: 0.0292
Next Token :  =, Posbility: 0.9688
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same =
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  match, Posbility: 0.0002
Next Token :   , Posbility: 0.0003
Next Token :  true, Posbility: 0.0013
Next Token : 
, Posbility: 0.0259
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0003
Next Token : \, Posbility: 0.0004
Next Token : 
, Posbility: 0.0004
Next Token : t, Posbility: 0.0010
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : nd, Posbility: 0.0000
Next Token : tail, Posbility: 0.0000
Next Token : head, Posbility: 0.0041
Next Token : hd, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : 
, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0013
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ``, Posbility: 0.0001
Next Token : ‘, Posbility: 0.0005
Next Token : ’, Posbility: 0.0006
Next Token : ', Posbility: 0.0097
Next Token : ''', Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0000
Next Token : ’, Posbility: 0.0002
Next Token : ', Posbility: 0.0003
Next Token : ‘, Posbility: 0.0003
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ```, Posbility: 0.0000
Next Token : ', Posbility: 0.0001
Next Token : ‘, Posbility: 0.0002
Next Token : ’, Posbility: 0.0002
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ```, Posbility: 0.0000
Next Token : ’, Posbility: 0.0002
Next Token : ', Posbility: 0.0002
Next Token : ‘, Posbility: 0.0002
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0000
Next Token : ', Posbility: 0.0001
Next Token : ’, Posbility: 0.0002
Next Token : ‘, Posbility: 0.0002
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0000
Next Token : ', Posbility: 0.0001
Next Token : ’, Posbility: 0.0002
Next Token : ‘, Posbility: 0.0003
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ```, Posbility: 0.0000
Next Token : ’, Posbility: 0.0002
Next Token : ', Posbility: 0.0003
Next Token : ‘, Posbility: 0.0004
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0018
Next Token : ‘, Posbility: 0.0117
Next Token : ', Posbility: 0.0248
Next Token : ’, Posbility: 0.0281
Next Token : ''', Posbility: 0.9297
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0006
Next Token : ''', Posbility: 0.0009
Next Token : ', Posbility: 0.0024
Next Token : 
, Posbility: 0.0109
Next Token :  in, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ..., Posbility: 0.0000
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0159
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in

 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :             , Posbility: 0.0005
Next Token :           , Posbility: 0.0005
Next Token :       , Posbility: 0.0007
Next Token :        , Posbility: 0.0159
Next Token :         , Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0254
Next Token : match, Posbility: 0.0417
Next Token : if, Posbility: 0.0608
Next Token : helper, Posbility: 0.0608
Next Token : let, Posbility: 0.7422
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  is, Posbility: 0.0024
Next Token :  same, Posbility: 0.0035
Next Token :  type, Posbility: 0.0039
Next Token :  rec, Posbility: 0.0074
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0019
Next Token : head, Posbility: 0.0019
Next Token : (), Posbility: 0.0021
Next Token : helper, Posbility: 0.0035
Next Token : t, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 0, Posbility: 0.0001
Next Token : 1, Posbility: 0.0004
Next Token :  =, Posbility: 0.0009
Next Token : ', Posbility: 0.0041
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : rest, Posbility: 0.0005
Next Token : type, Posbility: 0.0013
Next Token : same, Posbility: 0.0017
Next Token : tail, Posbility: 0.0040
Next Token : head, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token :  =, Posbility: 0.0009
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : data, Posbility: 0.0002
Next Token : tail, Posbility: 0.0002
Next Token : head, Posbility: 0.0003
Next Token : same, Posbility: 0.0041
Next Token : type, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token :  =, Posbility: 0.0022
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : equal, Posbility: 0.0001
Next Token : type, Posbility: 0.0001
Next Token : all, Posbility: 0.0001
Next Token : not, Posbility: 0.0002
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0036
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : different, Posbility: 0.0000
Next Token : type, Posbility: 0.0000
Next Token : all, Posbility: 0.0000
Next Token : sam, Posbility: 0.0001
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0009
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : some, Posbility: 0.0000
Next Token : different, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0001
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ..., Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ..., Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ..., Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : sea, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : sea, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : sea, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  same, Posbility: 0.0000
Next Token : sa, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0001
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 0.0017
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : sa, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0003
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 0.0002
Next Token :  =, Posbility: 0.0374
Next Token : _, Posbility: 0.9609
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token : type, Posbility: 0.0002
Next Token : sam, Posbility: 0.0007
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0006
Next Token :  in, Posbility: 0.0008
Next Token : _, Posbility: 0.0371
Next Token :  =, Posbility: 0.9609
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same =
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  match, Posbility: 0.0002
Next Token :   , Posbility: 0.0002
Next Token :  true, Posbility: 0.0009
Next Token : 
, Posbility: 0.0179
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token : \, Posbility: 0.0004
Next Token : t, Posbility: 0.0006
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : nd, Posbility: 0.0000
Next Token : h, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : head, Posbility: 0.0052
Next Token : hd, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0012
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ``, Posbility: 0.0002
Next Token : ‘, Posbility: 0.0008
Next Token : ’, Posbility: 0.0010
Next Token : ', Posbility: 0.0124
Next Token : ''', Posbility: 0.9844
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0000
Next Token : ', Posbility: 0.0003
Next Token : ’, Posbility: 0.0003
Next Token : ‘, Posbility: 0.0006
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ```, Posbility: 0.0000
Next Token : ', Posbility: 0.0001
Next Token : ’, Posbility: 0.0003
Next Token : ‘, Posbility: 0.0004
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ```, Posbility: 0.0000
Next Token : ', Posbility: 0.0001
Next Token : ’, Posbility: 0.0002
Next Token : ‘, Posbility: 0.0003
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0000
Next Token : ', Posbility: 0.0001
Next Token : ’, Posbility: 0.0003
Next Token : ‘, Posbility: 0.0004
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0000
Next Token : ', Posbility: 0.0001
Next Token : ’, Posbility: 0.0003
Next Token : ‘, Posbility: 0.0006
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0000
Next Token : ', Posbility: 0.0001
Next Token : ’, Posbility: 0.0002
Next Token : ‘, Posbility: 0.0003
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ```, Posbility: 0.0000
Next Token : ', Posbility: 0.0003
Next Token : ’, Posbility: 0.0004
Next Token : ‘, Posbility: 0.0007
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0028
Next Token : ‘, Posbility: 0.0266
Next Token : ', Posbility: 0.0342
Next Token : ’, Posbility: 0.0498
Next Token : ''', Posbility: 0.8789
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0017
Next Token : ''', Posbility: 0.0027
Next Token : ', Posbility: 0.0065
Next Token : 
, Posbility: 0.0156
Next Token :  in, Posbility: 0.9688
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ..., Posbility: 0.0000
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0179
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in

 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :           , Posbility: 0.0004
Next Token :             , Posbility: 0.0004
Next Token :       , Posbility: 0.0006
Next Token :        , Posbility: 0.0179
Next Token :         , Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0208
Next Token : helper, Posbility: 0.0439
Next Token : match, Posbility: 0.0439
Next Token : if, Posbility: 0.0498
Next Token : let, Posbility: 0.7773
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  is, Posbility: 0.0015
Next Token :  type, Posbility: 0.0024
Next Token :  same, Posbility: 0.0027
Next Token :  rec, Posbility: 0.0051
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0015
Next Token : (, Posbility: 0.0017
Next Token : (), Posbility: 0.0019
Next Token : helper, Posbility: 0.0035
Next Token : t, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 0, Posbility: 0.0001
Next Token : 1, Posbility: 0.0002
Next Token :  =, Posbility: 0.0009
Next Token : ', Posbility: 0.0025
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : rest, Posbility: 0.0012
Next Token : type, Posbility: 0.0015
Next Token : same, Posbility: 0.0017
Next Token : tail, Posbility: 0.0085
Next Token : head, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token :  =, Posbility: 0.0009
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : tail, Posbility: 0.0002
Next Token : data, Posbility: 0.0002
Next Token : head, Posbility: 0.0002
Next Token : same, Posbility: 0.0032
Next Token : type, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token :  =, Posbility: 0.0015
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : equal, Posbility: 0.0001
Next Token : not, Posbility: 0.0001
Next Token : type, Posbility: 0.0001
Next Token : all, Posbility: 0.0002
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0022
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : safe, Posbility: 0.0000
Next Token : type, Posbility: 0.0000
Next Token : all, Posbility: 0.0000
Next Token : sam, Posbility: 0.0001
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0005
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : different, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0001
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ..., Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ..., Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : some, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : different, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : sea, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : sea, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : sea, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  =, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  same, Posbility: 0.0000
Next Token : sa, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0001
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 0.0017
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : sa, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0002
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 0.0004
Next Token :  =, Posbility: 0.0952
Next Token : _, Posbility: 0.9023
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : type, Posbility: 0.0000
Next Token : sam, Posbility: 0.0006
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0005
Next Token :  in, Posbility: 0.0010
Next Token : _, Posbility: 0.0674
Next Token :  =, Posbility: 0.9297
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same =
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  match, Posbility: 0.0002
Next Token :   , Posbility: 0.0002
Next Token :  true, Posbility: 0.0004
Next Token : 
, Posbility: 0.0140
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token : t, Posbility: 0.0003
Next Token : \, Posbility: 0.0004
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : nd, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : h, Posbility: 0.0000
Next Token : head, Posbility: 0.0041
Next Token : hd, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0010
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ``, Posbility: 0.0001
Next Token : ‘, Posbility: 0.0007
Next Token : ’, Posbility: 0.0008
Next Token : ', Posbility: 0.0076
Next Token : ''', Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0001
Next Token : ', Posbility: 0.0004
Next Token : ’, Posbility: 0.0004
Next Token : ‘, Posbility: 0.0010
Next Token : ''', Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : '\, Posbility: 0.0000
Next Token : ', Posbility: 0.0001
Next Token : ’, Posbility: 0.0004
Next Token : ‘, Posbility: 0.0005
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : '\, Posbility: 0.0000
Next Token : ', Posbility: 0.0001
Next Token : ’, Posbility: 0.0003
Next Token : ‘, Posbility: 0.0004
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0000
Next Token : ', Posbility: 0.0001
Next Token : ’, Posbility: 0.0003
Next Token : ‘, Posbility: 0.0006
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0000
Next Token : ', Posbility: 0.0001
Next Token : ’, Posbility: 0.0004
Next Token : ‘, Posbility: 0.0008
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0001
Next Token : ', Posbility: 0.0002
Next Token : ’, Posbility: 0.0004
Next Token : ‘, Posbility: 0.0009
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0000
Next Token : ', Posbility: 0.0002
Next Token : ’, Posbility: 0.0005
Next Token : ‘, Posbility: 0.0010
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0001
Next Token : ', Posbility: 0.0007
Next Token : ’, Posbility: 0.0025
Next Token : ‘, Posbility: 0.0036
Next Token : ''', Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0048
Next Token : ', Posbility: 0.0400
Next Token : ‘, Posbility: 0.0454
Next Token : ’, Posbility: 0.0962
Next Token : ''', Posbility: 0.8047
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''''''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ’, Posbility: 0.0098
Next Token : ''', Posbility: 0.0236
Next Token : ', Posbility: 0.0303
Next Token : 
, Posbility: 0.0342
Next Token :  in, Posbility: 0.8828
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ..., Posbility: 0.0001
Next Token :  ..., Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0159
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in

 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :             , Posbility: 0.0004
Next Token :          , Posbility: 0.0004
Next Token :       , Posbility: 0.0005
Next Token :        , Posbility: 0.0159
Next Token :         , Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0168
Next Token : match, Posbility: 0.0356
Next Token : if, Posbility: 0.0405
Next Token : helper, Posbility: 0.0405
Next Token : let, Posbility: 0.8125
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  check, Posbility: 0.0017
Next Token :  same, Posbility: 0.0027
Next Token :  type, Posbility: 0.0031
Next Token :  rec, Posbility: 0.0058
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0013
Next Token : head, Posbility: 0.0013
Next Token : (), Posbility: 0.0017
Next Token : helper, Posbility: 0.0028
Next Token : t, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 0, Posbility: 0.0001
Next Token : 1, Posbility: 0.0002
Next Token :  =, Posbility: 0.0007
Next Token : ', Posbility: 0.0015
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : rest, Posbility: 0.0010
Next Token : type, Posbility: 0.0015
Next Token : same, Posbility: 0.0022
Next Token : tail, Posbility: 0.0059
Next Token : head, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token :  =, Posbility: 0.0008
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : types, Posbility: 0.0001
Next Token : tail, Posbility: 0.0001
Next Token : head, Posbility: 0.0001
Next Token : same, Posbility: 0.0022
Next Token : type, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token :  =, Posbility: 0.0015
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : equal, Posbility: 0.0000
Next Token : type, Posbility: 0.0001
Next Token : not, Posbility: 0.0001
Next Token : all, Posbility: 0.0001
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token :  =, Posbility: 0.0015
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : safe, Posbility: 0.0000
Next Token : type, Posbility: 0.0000
Next Token : all, Posbility: 0.0000
Next Token : sam, Posbility: 0.0001
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0005
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : different, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ..., Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ..., Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : some, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : different, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : different, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : sea, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : sea, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : sa, Posbility: 0.0000
Next Token :  same, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0000
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  same, Posbility: 0.0000
Next Token : sa, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0001
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  =, Posbility: 0.0025
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  same, Posbility: 0.0000
Next Token : sa, Posbility: 0.0000
Next Token : safe, Posbility: 0.0000
Next Token : sam, Posbility: 0.0002
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  in, Posbility: 0.0005
Next Token :  =, Posbility: 0.0601
Next Token : _, Posbility: 0.9375
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : type, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token : sam, Posbility: 0.0006
Next Token : same, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same_same
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0003
Next Token : 
, Posbility: 0.0003
Next Token :  in, Posbility: 0.0010
Next Token : _, Posbility: 0.0598
Next Token :  =, Posbility: 0.9375
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same_same =
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  true, Posbility: 0.0001
Next Token :  match, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0085
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same_same = 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : t, Posbility: 0.0002
Next Token : \, Posbility: 0.0003
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same_same = List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same_same = List.
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : hq, Posbility: 0.0000
Next Token : h, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : head, Posbility: 0.0046
Next Token : hd, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (), Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0009
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ``, Posbility: 0.0001
Next Token : ’, Posbility: 0.0010
Next Token : ‘, Posbility: 0.0010
Next Token : ', Posbility: 0.0059
Next Token : ''', Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  '', Posbility: 0.0001
Next Token : ', Posbility: 0.0004
Next Token : ’, Posbility: 0.0007
Next Token : ‘, Posbility: 0.0015
Next Token : ''', Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if all the elements in tuple have same data type or not. *)
let (check_all_same_type t) =
  let rec helper t =
    match t with
    | [] -> true
    | _ :: t' ->
        let t'_head = List.hd t' in
        let t_head_type = List.hd t in
        let t_head_type_same = List.hd t' in
        let t_head_type_same_same = List.hd t'' in
        let t_head_type_same_same_same = List.hd t''' in
        let t_head_type_same_same_same_same = List.hd t'''' in
        let t_head_type_same_same_same_same_same = List.hd t'''''' in
        let t_head_type_same_same_same_same_same_same = List.hd t''''''''' in
        let t_head_type_same_same_same_same_same_same_same = List.hd t'''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same = List.hd t''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t'''''''''''''''''''''''''''''' in
        let t_head_type_same_same_same_same_same_same_same_same_same_same_same_same_same_same = List.hd t''''''
 score:False


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>