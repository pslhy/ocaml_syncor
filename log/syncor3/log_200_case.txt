code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  get, Posbility: 0.0179
Next Token :  find, Posbility: 0.0806
Next Token :  minimum, Posbility: 0.0806
Next Token :  , Posbility: 0.2480
Next Token :  rec, Posbility: 0.4629
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  search, Posbility: 0.0228
Next Token :  loop, Posbility: 0.0293
Next Token :  minimum, Posbility: 0.0620
Next Token :  find, Posbility: 0.2451
Next Token :  , Posbility: 0.4570
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : helper, Posbility: 0.0098
Next Token : aux, Posbility: 0.0098
Next Token : f, Posbility: 0.0126
Next Token : fold, Posbility: 0.0143
Next Token : min, Posbility: 0.7812
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0129
Next Token : -, Posbility: 0.0272
Next Token :  =, Posbility: 0.0654
Next Token :  , Posbility: 0.1387
Next Token : _, Posbility: 0.6211
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : val, Posbility: 0.0742
Next Token : value, Posbility: 0.0952
Next Token : helper, Posbility: 0.0952
Next Token : aux, Posbility: 0.1221
Next Token : of, Posbility: 0.1221
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0047
Next Token :  l, Posbility: 0.0077
Next Token :  =, Posbility: 0.0209
Next Token :  , Posbility: 0.0566
Next Token : _, Posbility: 0.8867
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : type, Posbility: 0.0142
Next Token : all, Posbility: 0.0208
Next Token : h, Posbility: 0.0302
Next Token : heter, Posbility: 0.1729
Next Token : list, Posbility: 0.4707
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0270
Next Token :  l, Posbility: 0.0571
Next Token : _, Posbility: 0.0942
Next Token :  =, Posbility: 0.1553
Next Token :  , Posbility: 0.5430
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0278
Next Token : :, Posbility: 0.0356
Next Token : (, Posbility: 0.1816
Next Token : x, Posbility: 0.1816
Next Token : lst, Posbility: 0.2324
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0121
Next Token :  ~, Posbility: 0.0137
Next Token :  acc, Posbility: 0.0256
Next Token :  , Posbility: 0.1299
Next Token :  =, Posbility: 0.7461
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fun, Posbility: 0.0034
Next Token :  function, Posbility: 0.0152
Next Token :  , Posbility: 0.0684
Next Token :  match, Posbility: 0.0684
Next Token : 
, Posbility: 0.8320
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0045
Next Token :    , Posbility: 0.0095
Next Token : 	, Posbility: 0.0095
Next Token :     , Posbility: 0.1025
Next Token :   , Posbility: 0.8594
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0053
Next Token : List, Posbility: 0.0271
Next Token : if, Posbility: 0.0737
Next Token : let, Posbility: 0.1562
Next Token : match, Posbility: 0.6992
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  M, Posbility: 0.0007
Next Token :  ?, Posbility: 0.0010
Next Token :  !, Posbility: 0.0017
Next Token :  String, Posbility: 0.0058
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : H, Posbility: 0.0014
Next Token : L, Posbility: 0.0027
Next Token : (, Posbility: 0.0030
Next Token : List, Posbility: 0.0366
Next Token : lst, Posbility: 0.9453
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0005
Next Token :  , Posbility: 0.0005
Next Token :  @, Posbility: 0.0005
Next Token : ., Posbility: 0.0015
Next Token :  with, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0045
Next Token :  {, Posbility: 0.0045
Next Token :  [, Posbility: 0.0051
Next Token :  [], Posbility: 0.0121
Next Token : 
, Posbility: 0.9648
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0007
Next Token :       , Posbility: 0.0016
Next Token :    , Posbility: 0.0020
Next Token :     , Posbility: 0.0752
Next Token :   , Posbility: 0.9180
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : case, Posbility: 0.0003
Next Token : (, Posbility: 0.0004
Next Token : [, Posbility: 0.0137
Next Token : [], Posbility: 0.0226
Next Token : |, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0045
Next Token :  nil, Posbility: 0.0156
Next Token :  [, Posbility: 0.0425
Next Token :  , Posbility: 0.0703
Next Token :  [], Posbility: 0.8555
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0034
Next Token :    , Posbility: 0.0050
Next Token :  =>, Posbility: 0.0094
Next Token :  |, Posbility: 0.0094
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0001
Next Token : -, Posbility: 0.0003
Next Token : â†’, Posbility: 0.0003
Next Token : ::, Posbility: 0.0017
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0444
Next Token :  None, Posbility: 0.0942
Next Token :  error, Posbility: 0.1553
Next Token :  fail, Posbility: 0.1553
Next Token :  , Posbility: 0.4219
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : panic, Posbility: 0.0273
Next Token : (), Posbility: 0.0398
Next Token : Error, Posbility: 0.0579
Next Token : assert, Posbility: 0.0654
Next Token : raise, Posbility: 0.5508
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise
 score:False
Error type: noerr
---------------------------
Next Token : not, Posbility: 0.0097
Next Token : _, Posbility: 0.0339
Next Token :  ", Posbility: 0.0559
Next Token :  , Posbility: 0.3203
Next Token :  Not, Posbility: 0.5312
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not
 score:False
Error type: noerr
---------------------------
Next Token : found, Posbility: 0.0005
Next Token : A, Posbility: 0.0007
Next Token : Defined, Posbility: 0.0008
Next Token : In, Posbility: 0.0013
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_
 score:False
Error type: noerr
---------------------------
Next Token : in, Posbility: 0.0057
Next Token : empty, Posbility: 0.0057
Next Token : reached, Posbility: 0.0136
Next Token : a, Posbility: 0.0154
Next Token : found, Posbility: 0.8438
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0386
Next Token :  |, Posbility: 0.0386
Next Token :  ", Posbility: 0.0559
Next Token :  , Posbility: 0.1045
Next Token : 
, Posbility: 0.6836
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found

 score:False
Error type: noerr
---------------------------
Next Token :           , Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :       , Posbility: 0.0005
Next Token :     , Posbility: 0.0005
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  
 score:False
Error type: noerr
---------------------------
Next Token : |[, Posbility: 0.0001
Next Token : //, Posbility: 0.0001
Next Token : [, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [{, Posbility: 0.0095
Next Token :  {, Posbility: 0.0107
Next Token :  [], Posbility: 0.0156
Next Token :  [, Posbility: 0.2441
Next Token :  , Posbility: 0.6641
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0574
Next Token : (, Posbility: 0.0649
Next Token : _, Posbility: 0.1377
Next Token : x, Posbility: 0.2578
Next Token : hd, Posbility: 0.2910
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0067
Next Token :  |, Posbility: 0.0067
Next Token : ,, Posbility: 0.0383
Next Token : ::, Posbility: 0.4648
Next Token :  , Posbility: 0.4648
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0003
Next Token : if, Posbility: 0.0003
Next Token : :, Posbility: 0.0074
Next Token : ->, Posbility: 0.0157
Next Token : ::, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  [, Posbility: 0.0007
Next Token :  l, Posbility: 0.0011
Next Token :  rest, Posbility: 0.0095
Next Token :  [], Posbility: 0.0108
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : tail, Posbility: 0.0093
Next Token : hd, Posbility: 0.0474
Next Token : t, Posbility: 0.0537
Next Token : _, Posbility: 0.1138
Next Token : tl, Posbility: 0.7422
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  @, Posbility: 0.0024
Next Token :   , Posbility: 0.0034
Next Token :  =>, Posbility: 0.0073
Next Token :  when, Posbility: 0.0199
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  when, Posbility: 0.0001
Next Token :  =>, Posbility: 0.0005
Next Token : if, Posbility: 0.0031
Next Token : ::, Posbility: 0.0179
Next Token : ->, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0021
Next Token :  {, Posbility: 0.0074
Next Token :  match, Posbility: 0.0427
Next Token :  , Posbility: 0.4062
Next Token : 
, Posbility: 0.5234
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0126
Next Token :   , Posbility: 0.0183
Next Token :      , Posbility: 0.0236
Next Token :       , Posbility: 0.2539
Next Token :     , Posbility: 0.6875
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0167
Next Token : min, Posbility: 0.0276
Next Token : match, Posbility: 0.2041
Next Token : if, Posbility: 0.2617
Next Token : let, Posbility: 0.4316
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  value, Posbility: 0.0177
Next Token :  res, Posbility: 0.0227
Next Token :  v, Posbility: 0.0796
Next Token :  rec, Posbility: 0.1484
Next Token :  , Posbility: 0.5859
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0674
Next Token : m, Posbility: 0.0869
Next Token : x, Posbility: 0.0981
Next Token : min, Posbility: 0.1836
Next Token : hd, Posbility: 0.2080
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0096
Next Token : ,, Posbility: 0.0708
Next Token :  =, Posbility: 0.1924
Next Token : ', Posbility: 0.3184
Next Token : _, Posbility: 0.3184
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : type, Posbility: 0.0425
Next Token : v, Posbility: 0.0796
Next Token : value, Posbility: 0.1021
Next Token : val, Posbility: 0.1680
Next Token : min, Posbility: 0.1904
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0013
Next Token :  , Posbility: 0.0074
Next Token : _, Posbility: 0.0544
Next Token : ,, Posbility: 0.0698
Next Token :  =, Posbility: 0.8555
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  find, Posbility: 0.0010
Next Token :  get, Posbility: 0.0013
Next Token :  match, Posbility: 0.0051
Next Token : 
, Posbility: 0.0066
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0027
Next Token : hd, Posbility: 0.0034
Next Token : (, Posbility: 0.0050
Next Token : try, Posbility: 0.0057
Next Token : min, Posbility: 0.9570
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  of, Posbility: 0.0001
Next Token :  ~, Posbility: 0.0001
Next Token :  , Posbility: 0.0140
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : from, Posbility: 0.0002
Next Token : rec, Posbility: 0.0002
Next Token : value, Posbility: 0.0003
Next Token : helper, Posbility: 0.0003
Next Token : of, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  list, Posbility: 0.0000
Next Token :  , Posbility: 0.0019
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : elt, Posbility: 0.0003
Next Token : type, Posbility: 0.0004
Next Token : element, Posbility: 0.0005
Next Token : value, Posbility: 0.0019
Next Token : list, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0009
Next Token : (, Posbility: 0.0015
Next Token :  ~, Posbility: 0.0017
Next Token : _, Posbility: 0.0022
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0015
Next Token : lst, Posbility: 0.0024
Next Token : (, Posbility: 0.0066
Next Token : tl, Posbility: 0.0109
Next Token : hd, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0009
Next Token :  , Posbility: 0.0015
Next Token : 
, Posbility: 0.0025
Next Token : ;, Posbility: 0.0025
Next Token :  in, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0002
Next Token :   , Posbility: 0.0005
Next Token : 

, Posbility: 0.0013
Next Token :  , Posbility: 0.0046
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0002
Next Token :   , Posbility: 0.0002
Next Token :       , Posbility: 0.0009
Next Token :    , Posbility: 0.0159
Next Token :     , Posbility: 0.9844
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : hd, Posbility: 0.0569
Next Token : min, Posbility: 0.0825
Next Token : let, Posbility: 0.1982
Next Token : match, Posbility: 0.2539
Next Token : if, Posbility: 0.3262
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0060
Next Token :  !, Posbility: 0.0077
Next Token :  Not, Posbility: 0.0087
Next Token :  not, Posbility: 0.0503
Next Token :  , Posbility: 0.8945
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0066
Next Token : min, Posbility: 0.0096
Next Token : (, Posbility: 0.0262
Next Token : Compare, Posbility: 0.0297
Next Token : hd, Posbility: 0.8672
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0012
Next Token :  <=, Posbility: 0.0015
Next Token : ., Posbility: 0.0052
Next Token :  , Posbility: 0.0066
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : value, Posbility: 0.0000
Next Token : val, Posbility: 0.0001
Next Token : is, Posbility: 0.0001
Next Token : max, Posbility: 0.0003
Next Token : min, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0153
Next Token :  <=, Posbility: 0.0535
Next Token :  >=, Posbility: 0.0535
Next Token :  =, Posbility: 0.1865
Next Token :  , Posbility: 0.6523
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ::, Posbility: 0.0003
Next Token : lt, Posbility: 0.0003
Next Token : â‰¤, Posbility: 0.0011
Next Token : >, Posbility: 0.1475
Next Token : <, Posbility: 0.8477
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0016
Next Token :  0.0, Posbility: 0.0026
Next Token :  0, Posbility: 0.1104
Next Token : >, Posbility: 0.2334
Next Token :  , Posbility: 0.6328
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : lst, Posbility: 0.0293
Next Token : (, Posbility: 0.0376
Next Token : tl, Posbility: 0.0483
Next Token : hd, Posbility: 0.2461
Next Token : min, Posbility: 0.5898
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0146
Next Token : (, Posbility: 0.0146
Next Token :  of, Posbility: 0.0165
Next Token :  then, Posbility: 0.0349
Next Token : _, Posbility: 0.9023
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : from, Posbility: 0.0003
Next Token : so, Posbility: 0.0005
Next Token : val, Posbility: 0.0012
Next Token : value, Posbility: 0.0017
Next Token : of, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  list, Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : all, Posbility: 0.0001
Next Token : value, Posbility: 0.0001
Next Token : lst, Posbility: 0.0001
Next Token : rest, Posbility: 0.0002
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  then, Posbility: 0.0005
Next Token : _, Posbility: 0.0005
Next Token :  ~, Posbility: 0.0005
Next Token : (, Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : tail, Posbility: 0.0002
Next Token : td, Posbility: 0.0003
Next Token : hd, Posbility: 0.0017
Next Token : (, Posbility: 0.0052
Next Token : tl, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0021
Next Token :  else, Posbility: 0.0021
Next Token :  , Posbility: 0.0035
Next Token : 
, Posbility: 0.0177
Next Token :  then, Posbility: 0.9688
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list tl then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0004
Next Token :  {, Posbility: 0.0020
Next Token :  Some, Posbility: 0.0060
Next Token : 
, Posbility: 0.2910
Next Token :  , Posbility: 0.6953
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list tl then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0047
Next Token : 
, Posbility: 0.0078
Next Token : return, Posbility: 0.0129
Next Token : min, Posbility: 0.2578
Next Token : hd, Posbility: 0.7031
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list tl then hd
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0045
Next Token : 
, Posbility: 0.0123
Next Token :  , Posbility: 0.0178
Next Token :  else, Posbility: 0.1025
Next Token : _, Posbility: 0.8594
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list tl then hd_
 score:False
Error type: noerr
---------------------------
Next Token : list, Posbility: 0.0000
Next Token : of, Posbility: 0.0000
Next Token : value, Posbility: 0.0000
Next Token : max, Posbility: 0.0002
Next Token : min, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list tl then hd_min
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0026
Next Token :  |, Posbility: 0.0062
Next Token :  , Posbility: 0.0215
Next Token : 
, Posbility: 0.0515
Next Token :  else, Posbility: 0.9141
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list tl then hd_min else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  !, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0025
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list tl then hd_min else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0000
Next Token : hd, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : (, Posbility: 0.0041
Next Token : min, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list tl then hd_min else min
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list tl then hd_min else min_
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : for, Posbility: 0.0000
Next Token : in, Posbility: 0.0000
Next Token : from, Posbility: 0.0000
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list tl then hd_min else min_of
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  list, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list tl then hd_min else min_of_
 score:False
Error type: noerr
---------------------------
Next Token : all, Posbility: 0.0000
Next Token : l, Posbility: 0.0000
Next Token : lst, Posbility: 0.0000
Next Token : lista, Posbility: 0.0000
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list tl then hd_min else min_of_list
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token : (, Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list tl then hd_min else min_of_list 
 score:False
Error type: noerr
---------------------------
Next Token : st, Posbility: 0.0000
Next Token : tail, Posbility: 0.0000
Next Token : hd, Posbility: 0.0001
Next Token : (, Posbility: 0.0032
Next Token : tl, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list tl then hd_min else min_of_list tl
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0037
Next Token : ), Posbility: 0.0271
Next Token :  in, Posbility: 0.0835
Next Token : 

, Posbility: 0.1768
Next Token : 
, Posbility: 0.6992
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list tl then hd_min else min_of_list tl

 score:False
Error type: noerr
---------------------------
Next Token : in, Posbility: 0.0093
Next Token :     , Posbility: 0.0251
Next Token : end, Posbility: 0.0303
Next Token : let, Posbility: 0.0684
Next Token :   , Posbility: 0.6914
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list tl then hd_min else min_of_list tl
  
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0075
Next Token : end, Posbility: 0.0125
Next Token : in, Posbility: 0.0141
Next Token : ;, Posbility: 0.1719
Next Token : |, Posbility: 0.7695
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list tl then hd_min else min_of_list tl
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0051
Next Token :  [, Posbility: 0.0157
Next Token :  ?, Posbility: 0.0157
Next Token :  [], Posbility: 0.0549
Next Token :  , Posbility: 0.8594
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list tl then hd_min else min_of_list tl
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0059
Next Token : tl, Posbility: 0.0085
Next Token : x, Posbility: 0.0383
Next Token : _, Posbility: 0.2207
Next Token : hd, Posbility: 0.6797
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list tl then hd_min else min_of_list tl
  | hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0056
Next Token : ::, Posbility: 0.0072
Next Token : ,, Posbility: 0.0082
Next Token : _, Posbility: 0.0153
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list tl then hd_min else min_of_list tl
  | hd 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0012
Next Token : :, Posbility: 0.0013
Next Token : <, Posbility: 0.0042
Next Token : ->, Posbility: 0.0942
Next Token : ::, Posbility: 0.8945
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list tl then hd_min else min_of_list tl
  | hd ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  @, Posbility: 0.0007
Next Token :  ?, Posbility: 0.0007
Next Token :  [, Posbility: 0.0043
Next Token :  [], Posbility: 0.0593
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list tl then hd_min else min_of_list tl
  | hd :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : tail, Posbility: 0.0063
Next Token : (), Posbility: 0.0072
Next Token : hd, Posbility: 0.0195
Next Token : _, Posbility: 0.2100
Next Token : tl, Posbility: 0.7344
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list tl then hd_min else min_of_list tl
  | hd :: tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0010
Next Token :  =, Posbility: 0.0050
Next Token :  =>, Posbility: 0.0073
Next Token :  when, Posbility: 0.0225
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list tl then hd_min else min_of_list tl
  | hd :: tl 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0001
Next Token :  =>, Posbility: 0.0003
Next Token : ::, Posbility: 0.0035
Next Token : if, Posbility: 0.0330
Next Token : ->, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list tl then hd_min else min_of_list tl
  | hd :: tl ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0015
Next Token :  fail, Posbility: 0.0061
Next Token :  match, Posbility: 0.0101
Next Token : 
, Posbility: 0.2598
Next Token :  , Posbility: 0.7070
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list tl then hd_min else min_of_list tl
  | hd :: tl -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0204
Next Token : if, Posbility: 0.0713
Next Token : raise, Posbility: 0.0913
Next Token : min, Posbility: 0.3184
Next Token : hd, Posbility: 0.4102
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list tl then hd_min else min_of_list tl
  | hd :: tl -> hd
 score:False
Error type: noerr
---------------------------
Next Token : ), Posbility: 0.0171
Next Token : _, Posbility: 0.0193
Next Token :  , Posbility: 0.0410
Next Token : 
, Posbility: 0.2354
Next Token : 

, Posbility: 0.6406
---------------------------
code:
 (* Write a function to find the minimum value in a given heterogeneous list. *)
let rec min_of_list lst =
  match lst with
  | [] -> raise Not_found
  | hd :: tl ->
    let hd_min = min_of_list hd in
    if hd_min < min_of_list tl then hd_min else min_of_list tl
  | hd :: tl -> hd


 score:True
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END and No Syntax Error--------

processing time : :43.009705543518066

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>