code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0145
Next Token :  find, Posbility: 0.0308
Next Token :  sum, Posbility: 0.0574
Next Token :  , Posbility: 0.2910
Next Token :  rec, Posbility: 0.4805
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  count, Posbility: 0.0164
Next Token :  loop, Posbility: 0.0571
Next Token :  find, Posbility: 0.0835
Next Token :  sum, Posbility: 0.1553
Next Token :  , Posbility: 0.4785
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : add, Posbility: 0.0258
Next Token : helper, Posbility: 0.0292
Next Token : pairs, Posbility: 0.0544
Next Token : f, Posbility: 0.0698
Next Token : x, Posbility: 0.5859
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0034
Next Token :  =, Posbility: 0.0039
Next Token : n, Posbility: 0.0050
Next Token : ors, Posbility: 0.0175
Next Token : or, Posbility: 0.9531
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0151
Next Token : sum, Posbility: 0.0364
Next Token :  =, Posbility: 0.0466
Next Token :  , Posbility: 0.1118
Next Token : _, Posbility: 0.6445
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : all, Posbility: 0.0562
Next Token : list, Posbility: 0.0723
Next Token : of, Posbility: 0.1523
Next Token : pairs, Posbility: 0.1523
Next Token : sum, Posbility: 0.3223
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0386
Next Token :  l, Posbility: 0.0496
Next Token :  =, Posbility: 0.1348
Next Token : _, Posbility: 0.2217
Next Token :  , Posbility: 0.3652
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ls, Posbility: 0.0403
Next Token : n, Posbility: 0.0664
Next Token : (, Posbility: 0.0854
Next Token : lst, Posbility: 0.1240
Next Token : x, Posbility: 0.3828
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0036
Next Token :  l, Posbility: 0.0047
Next Token :  , Posbility: 0.0344
Next Token :  =, Posbility: 0.1367
Next Token : s, Posbility: 0.7852
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0023
Next Token :  i, Posbility: 0.0042
Next Token :  acc, Posbility: 0.0070
Next Token :  , Posbility: 0.0515
Next Token :  =, Posbility: 0.9141
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fun, Posbility: 0.0047
Next Token :  function, Posbility: 0.0088
Next Token :  match, Posbility: 0.0737
Next Token :  , Posbility: 0.1074
Next Token : 
, Posbility: 0.7930
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0038
Next Token :    , Posbility: 0.0105
Next Token : 	, Posbility: 0.0105
Next Token :     , Posbility: 0.1279
Next Token :   , Posbility: 0.8320
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0055
Next Token : List, Posbility: 0.0219
Next Token : let, Posbility: 0.1250
Next Token : if, Posbility: 0.1826
Next Token : match, Posbility: 0.6367
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0009
Next Token : 
, Posbility: 0.0009
Next Token :  !, Posbility: 0.0010
Next Token :  String, Posbility: 0.0059
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Array, Posbility: 0.0016
Next Token : Seq, Posbility: 0.0050
Next Token : (, Posbility: 0.0093
Next Token : List, Posbility: 0.1289
Next Token : x, Posbility: 0.8438
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ors, Posbility: 0.0001
Next Token : with, Posbility: 0.0001
Next Token :  with, Posbility: 0.0004
Next Token : or, Posbility: 0.0006
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0003
Next Token : 
, Posbility: 0.0005
Next Token :  @, Posbility: 0.0005
Next Token :  , Posbility: 0.0009
Next Token :  with, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0016
Next Token :  , Posbility: 0.0044
Next Token :  [, Posbility: 0.0049
Next Token :  [], Posbility: 0.0415
Next Token : 
, Posbility: 0.9414
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0007
Next Token :       , Posbility: 0.0014
Next Token :    , Posbility: 0.0023
Next Token :     , Posbility: 0.0674
Next Token :   , Posbility: 0.9258
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([], Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : [, Posbility: 0.0120
Next Token : [], Posbility: 0.0369
Next Token : |, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0009
Next Token :  nil, Posbility: 0.0051
Next Token :  , Posbility: 0.0137
Next Token :  [, Posbility: 0.0137
Next Token :  [], Posbility: 0.9648
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0045
Next Token :    , Posbility: 0.0050
Next Token :  |, Posbility: 0.0065
Next Token :  =>, Posbility: 0.0083
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0002
Next Token : -, Posbility: 0.0002
Next Token : →, Posbility: 0.0003
Next Token : ::, Posbility: 0.0012
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0060
Next Token : 
, Posbility: 0.0165
Next Token :  [], Posbility: 0.0165
Next Token :  , Posbility: 0.0447
Next Token :  0, Posbility: 0.8984
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0043
Next Token : L, Posbility: 0.0055
Next Token :  , Posbility: 0.0116
Next Token :  |, Posbility: 0.0459
Next Token : 
, Posbility: 0.9219
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token : |, Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :     , Posbility: 0.0002
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  
 score:False
Error type: noerr
---------------------------
Next Token : |[, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : //, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0052
Next Token :  a, Posbility: 0.0098
Next Token :  [], Posbility: 0.0098
Next Token :  [, Posbility: 0.1729
Next Token :  , Posbility: 0.7734
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0228
Next Token : h, Posbility: 0.0427
Next Token : hd, Posbility: 0.0483
Next Token : _, Posbility: 0.0703
Next Token : x, Posbility: 0.7578
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0035
Next Token : :, Posbility: 0.0058
Next Token : s, Posbility: 0.0229
Next Token : ::, Posbility: 0.3594
Next Token :  , Posbility: 0.5938
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0002
Next Token : ^, Posbility: 0.0003
Next Token : :, Posbility: 0.0007
Next Token : ->, Posbility: 0.0010
Next Token : ::, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  more, Posbility: 0.0007
Next Token :  acc, Posbility: 0.0014
Next Token :  [], Posbility: 0.0047
Next Token :  rest, Posbility: 0.0840
Next Token :  , Posbility: 0.9023
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : t, Posbility: 0.0077
Next Token : tail, Posbility: 0.0112
Next Token : y, Posbility: 0.0305
Next Token : _, Posbility: 0.0391
Next Token : x, Posbility: 0.8906
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0005
Next Token : 1, Posbility: 0.0007
Next Token : _, Posbility: 0.0009
Next Token : ', Posbility: 0.0067
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0299
Next Token : _, Posbility: 0.0383
Next Token : 1, Posbility: 0.0718
Next Token : ', Posbility: 0.1338
Next Token :  , Posbility: 0.6797
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0002
Next Token : x, Posbility: 0.0003
Next Token : if, Posbility: 0.0005
Next Token : ::, Posbility: 0.0028
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0052
Next Token :  (1, Posbility: 0.0067
Next Token :  1, Posbility: 0.0142
Next Token : 
, Posbility: 0.1738
Next Token :  , Posbility: 0.7773
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0051
Next Token : List, Posbility: 0.0066
Next Token : let, Posbility: 0.0334
Next Token : (, Posbility: 0.0708
Next Token : x, Posbility: 0.8633
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0068
Next Token :  *, Posbility: 0.0112
Next Token : or, Posbility: 0.0126
Next Token :  +, Posbility: 0.0500
Next Token :  , Posbility: 0.8867
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x 
 score:False
Error type: noerr
---------------------------
Next Token :  ⁇ , Posbility: 0.0004
Next Token : X, Posbility: 0.0017
Next Token : ::, Posbility: 0.0022
Next Token : x, Posbility: 0.0096
Next Token : ^, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : +, Posbility: 0.0020
Next Token : ^, Posbility: 0.0026
Next Token : =, Posbility: 0.0043
Next Token : :, Posbility: 0.0522
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0002
Next Token : List, Posbility: 0.0003
Next Token : f, Posbility: 0.0005
Next Token : (, Posbility: 0.0757
Next Token : x, Posbility: 0.9219
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ x
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token : s, Posbility: 0.0076
Next Token : or, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  sum, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_
 score:False
Error type: noerr
---------------------------
Next Token : pair, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : summary, Posbility: 0.0000
Next Token : sum, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0004
Next Token :  ~, Posbility: 0.0004
Next Token :  [, Posbility: 0.0007
Next Token : (, Posbility: 0.0179
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum 
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0229
Next Token : x, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum x
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : or, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0025
Next Token : ), Posbility: 0.0067
Next Token :  , Posbility: 0.0110
Next Token : 

, Posbility: 0.3652
Next Token : 
, Posbility: 0.6016
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs

 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0123
Next Token : (, Posbility: 0.0228
Next Token : in, Posbility: 0.0664
Next Token :   , Posbility: 0.0962
Next Token : let, Posbility: 0.3809
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  find, Posbility: 0.0192
Next Token :  sum, Posbility: 0.0356
Next Token :  main, Posbility: 0.1416
Next Token :  , Posbility: 0.2334
Next Token :  rec, Posbility: 0.4355
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  count, Posbility: 0.0383
Next Token :  loop, Posbility: 0.0432
Next Token :  find, Posbility: 0.0557
Next Token :  sum, Posbility: 0.0811
Next Token :  , Posbility: 0.5273
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : add, Posbility: 0.0164
Next Token : f, Posbility: 0.0211
Next Token : fold, Posbility: 0.0239
Next Token : pairs, Posbility: 0.0447
Next Token : x, Posbility: 0.6992
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : sum, Posbility: 0.0024
Next Token : _, Posbility: 0.0027
Next Token : s, Posbility: 0.0094
Next Token : ors, Posbility: 0.0137
Next Token : or, Posbility: 0.9570
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sum, Posbility: 0.0013
Next Token : (, Posbility: 0.0019
Next Token : sum, Posbility: 0.0024
Next Token :  , Posbility: 0.0139
Next Token : _, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : all, Posbility: 0.0244
Next Token : list, Posbility: 0.0312
Next Token : pair, Posbility: 0.0354
Next Token : pairs, Posbility: 0.0354
Next Token : sum, Posbility: 0.7109
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0186
Next Token : s, Posbility: 0.0393
Next Token : ', Posbility: 0.0505
Next Token : 2, Posbility: 0.0649
Next Token : _, Posbility: 0.7891
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : opt, Posbility: 0.0400
Next Token : pairs, Posbility: 0.0454
Next Token : iter, Posbility: 0.0850
Next Token : rec, Posbility: 0.1089
Next Token : list, Posbility: 0.1235
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0102
Next Token :  l, Posbility: 0.0403
Next Token : _, Posbility: 0.0457
Next Token :  =, Posbility: 0.1240
Next Token :  , Posbility: 0.7109
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0071
Next Token : lst, Posbility: 0.0220
Next Token : ls, Posbility: 0.0283
Next Token : (, Posbility: 0.0598
Next Token : x, Posbility: 0.8281
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token : sl, Posbility: 0.0009
Next Token : list, Posbility: 0.0024
Next Token :  =, Posbility: 0.0109
Next Token : s, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0031
Next Token : _, Posbility: 0.0050
Next Token : s, Posbility: 0.0083
Next Token :  , Posbility: 0.0107
Next Token :  =, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0024
Next Token :   , Posbility: 0.0035
Next Token :  match, Posbility: 0.0035
Next Token :  , Posbility: 0.4570
Next Token : 
, Posbility: 0.5195
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0009
Next Token : let, Posbility: 0.0013
Next Token :    , Posbility: 0.0021
Next Token :     , Posbility: 0.0123
Next Token :   , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0713
Next Token : if, Posbility: 0.0806
Next Token : x, Posbility: 0.1328
Next Token : let, Posbility: 0.1504
Next Token : match, Posbility: 0.5234
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token :  [, Posbility: 0.0002
Next Token :  String, Posbility: 0.0003
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0003
Next Token : Seq, Posbility: 0.0005
Next Token : (, Posbility: 0.0027
Next Token : List, Posbility: 0.0178
Next Token : x, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token :  or, Posbility: 0.0001
Next Token : ors, Posbility: 0.0004
Next Token : or, Posbility: 0.0097
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token : ., Posbility: 0.0003
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 0.0009
Next Token :  [], Posbility: 0.0009
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :    , Posbility: 0.0002
Next Token :     , Posbility: 0.0003
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : {, Posbility: 0.0000
Next Token : case, Posbility: 0.0001
Next Token : [, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0003
Next Token :  nil, Posbility: 0.0009
Next Token :  [, Posbility: 0.0066
Next Token :  , Posbility: 0.0178
Next Token :  [], Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0005
Next Token :  =>, Posbility: 0.0008
Next Token :  as, Posbility: 0.0012
Next Token :  |, Posbility: 0.0019
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0017
Next Token : 
, Posbility: 0.0126
Next Token :  , Posbility: 0.0342
Next Token :  [], Posbility: 0.2520
Next Token :  0, Posbility: 0.6875
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | [] -> 0
 score:False
Error type: noerr
---------------------------
Next Token :  as, Posbility: 0.0003
Next Token :   , Posbility: 0.0004
Next Token :  |, Posbility: 0.0010
Next Token :  , Posbility: 0.0032
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | [] -> 0

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | [] -> 0
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | [] -> 0
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0018
Next Token :  0, Posbility: 0.0038
Next Token :  [], Posbility: 0.0172
Next Token :  [, Posbility: 0.0283
Next Token :  , Posbility: 0.9375
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | [] -> 0
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0101
Next Token : head, Posbility: 0.0101
Next Token : (, Posbility: 0.0212
Next Token : _, Posbility: 0.0273
Next Token : x, Posbility: 0.9062
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | [] -> 0
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0012
Next Token : 1, Posbility: 0.0013
Next Token : s, Posbility: 0.0238
Next Token : ::, Posbility: 0.0732
Next Token :  , Posbility: 0.8945
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | [] -> 0
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ->, Posbility: 0.0003
Next Token : x, Posbility: 0.0004
Next Token : ^, Posbility: 0.0017
Next Token : :, Posbility: 0.0032
Next Token : ::, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | [] -> 0
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  0, Posbility: 0.0004
Next Token :  [, Posbility: 0.0007
Next Token :  rest, Posbility: 0.0025
Next Token :  [], Posbility: 0.0028
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | [] -> 0
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : (, Posbility: 0.0008
Next Token : tail, Posbility: 0.0009
Next Token : y, Posbility: 0.0040
Next Token : _, Posbility: 0.0059
Next Token : x, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | [] -> 0
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0002
Next Token : or, Posbility: 0.0004
Next Token : ::, Posbility: 0.0004
Next Token :  , Posbility: 0.0019
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | [] -> 0
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0007
Next Token : 
, Posbility: 0.0008
Next Token : ', Posbility: 0.0022
Next Token :  when, Posbility: 0.0085
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | [] -> 0
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token : ^, Posbility: 0.0001
Next Token : ::, Posbility: 0.0002
Next Token : if, Posbility: 0.0004
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | [] -> 0
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0014
Next Token :  {, Posbility: 0.0014
Next Token :  1, Posbility: 0.0063
Next Token : 
, Posbility: 0.0466
Next Token :  , Posbility: 0.9336
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0021
Next Token : 
, Posbility: 0.0024
Next Token : let, Posbility: 0.0136
Next Token : (, Posbility: 0.0225
Next Token : x, Posbility: 0.9531
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x
 score:False
Error type: noerr
---------------------------
Next Token :  |, Posbility: 0.0047
Next Token :  +, Posbility: 0.0100
Next Token :  *, Posbility: 0.0113
Next Token : or, Posbility: 0.2578
Next Token :  , Posbility: 0.6992
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x 
 score:False
Error type: noerr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : ::, Posbility: 0.0007
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token : :, Posbility: 0.0002
Next Token :  ((, Posbility: 0.0003
Next Token : =, Posbility: 0.0010
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0001
Next Token : List, Posbility: 0.0002
Next Token : f, Posbility: 0.0003
Next Token : (, Posbility: 0.0140
Next Token : x, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ x
 score:False
Error type: noerr
---------------------------
Next Token : ors, Posbility: 0.0000
Next Token :  or, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : s, Posbility: 0.0001
Next Token : or, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  sum, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : add, Posbility: 0.0000
Next Token : summary, Posbility: 0.0000
Next Token : list, Posbility: 0.0001
Next Token : sum, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum
 score:False
Error type: noerr
---------------------------
Next Token :  ((, Posbility: 0.0005
Next Token : (, Posbility: 0.0008
Next Token :  list, Posbility: 0.0013
Next Token :  , Posbility: 0.1187
Next Token : _, Posbility: 0.8750
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum_
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : rec, Posbility: 0.0000
Next Token : pair, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum_list
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0003
Next Token :  ~, Posbility: 0.0004
Next Token :  [, Posbility: 0.0004
Next Token : (, Posbility: 0.0025
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum_list 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0001
Next Token : List, Posbility: 0.0001
Next Token : tail, Posbility: 0.0002
Next Token : (, Posbility: 0.0952
Next Token : x, Posbility: 0.9023
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum_list x
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : or, Posbility: 0.0008
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum_list xs
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0045
Next Token :  +, Posbility: 0.0231
Next Token :  , Posbility: 0.0295
Next Token : 
, Posbility: 0.3184
Next Token : 

, Posbility: 0.5938
---------------------------
code:
 (* Write a  function to find the sum of xor of all pairs of numbers in the given list. *)
let rec xor_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum xs
let rec xor_sum_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x ^ xor_sum_list xs


 score:True
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END and No Syntax Error--------

processing time : :44.32347011566162

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>