code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  check, Posbility: 0.1201
Next Token :  , Posbility: 0.1543
Next Token :  even, Posbility: 0.1982
Next Token :  rec, Posbility: 0.1982
Next Token :  is, Posbility: 0.2539
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : O, Posbility: 0.0047
Next Token : Product, Posbility: 0.0060
Next Token : even, Posbility: 0.0060
Next Token : Even, Posbility: 0.0728
Next Token : _, Posbility: 0.8867
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0100
Next Token : multiple, Posbility: 0.0100
Next Token : odd, Posbility: 0.0508
Next Token : product, Posbility: 0.0654
Next Token : even, Posbility: 0.7930
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0102
Next Token : (, Posbility: 0.0131
Next Token :  =, Posbility: 0.2051
Next Token :  , Posbility: 0.3379
Next Token : _, Posbility: 0.3379
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : numbers, Posbility: 0.0203
Next Token : sum, Posbility: 0.0488
Next Token : prod, Posbility: 0.0913
Next Token : list, Posbility: 0.2812
Next Token : product, Posbility: 0.4082
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0194
Next Token :  list, Posbility: 0.0282
Next Token : _, Posbility: 0.0767
Next Token :  =, Posbility: 0.2676
Next Token :  , Posbility: 0.5000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ls, Posbility: 0.0532
Next Token : lst, Posbility: 0.0684
Next Token : nums, Posbility: 0.0684
Next Token : n, Posbility: 0.0996
Next Token : x, Posbility: 0.4453
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0014
Next Token :  list, Posbility: 0.0014
Next Token :  , Posbility: 0.0288
Next Token :  =, Posbility: 0.2129
Next Token : s, Posbility: 0.7422
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0005
Next Token : 
, Posbility: 0.0009
Next Token :   , Posbility: 0.0010
Next Token :  , Posbility: 0.0201
Next Token :  =, Posbility: 0.9727
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0029
Next Token :  !, Posbility: 0.0029
Next Token :  match, Posbility: 0.0242
Next Token :  , Posbility: 0.1387
Next Token : 
, Posbility: 0.8008
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0088
Next Token : 	, Posbility: 0.0099
Next Token :    , Posbility: 0.0186
Next Token :     , Posbility: 0.1562
Next Token :   , Posbility: 0.7930
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0156
Next Token : List, Posbility: 0.0618
Next Token : if, Posbility: 0.0698
Next Token : match, Posbility: 0.1904
Next Token : let, Posbility: 0.5859
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sum, Posbility: 0.0304
Next Token :  even, Posbility: 0.0391
Next Token :  acc, Posbility: 0.0391
Next Token :  , Posbility: 0.2891
Next Token :  rec, Posbility: 0.4199
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  even, Posbility: 0.0466
Next Token :  check, Posbility: 0.0530
Next Token :  is, Posbility: 0.1118
Next Token :  loop, Posbility: 0.1846
Next Token :  , Posbility: 0.3438
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : aux, Posbility: 0.0684
Next Token : f, Posbility: 0.0996
Next Token : product, Posbility: 0.1133
Next Token : prod, Posbility: 0.1641
Next Token : helper, Posbility: 0.1865
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0302
Next Token :  acc, Posbility: 0.1348
Next Token :  =, Posbility: 0.1533
Next Token :  i, Posbility: 0.1533
Next Token :  , Posbility: 0.4160
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : product, Posbility: 0.0437
Next Token : (), Posbility: 0.0496
Next Token : (, Posbility: 0.0559
Next Token : n, Posbility: 0.0559
Next Token : x, Posbility: 0.6016
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : i, Posbility: 0.0149
Next Token :  acc, Posbility: 0.0315
Next Token :  , Posbility: 0.0520
Next Token :  =, Posbility: 0.0520
Next Token : s, Posbility: 0.8125
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0105
Next Token :  i, Posbility: 0.0603
Next Token :  , Posbility: 0.2695
Next Token :  =, Posbility: 0.2695
Next Token :  acc, Posbility: 0.2695
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  acc, Posbility: 0.0125
Next Token :  i, Posbility: 0.0233
Next Token : u, Posbility: 0.0493
Next Token :  , Posbility: 0.0811
Next Token :  =, Posbility: 0.7695
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0003
Next Token :   , Posbility: 0.0008
Next Token :  match, Posbility: 0.0017
Next Token :  , Posbility: 0.0140
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0016
Next Token :      , Posbility: 0.0019
Next Token :       , Posbility: 0.0107
Next Token :   , Posbility: 0.0156
Next Token :     , Posbility: 0.9688
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : case, Posbility: 0.0036
Next Token : (, Posbility: 0.0046
Next Token : let, Posbility: 0.0383
Next Token : match, Posbility: 0.4121
Next Token : if, Posbility: 0.5273
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0187
Next Token :  acc, Posbility: 0.0308
Next Token :  String, Posbility: 0.0308
Next Token :  not, Posbility: 0.0835
Next Token :  , Posbility: 0.7930
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Array, Posbility: 0.0069
Next Token : Seq, Posbility: 0.0101
Next Token : (, Posbility: 0.0352
Next Token : x, Posbility: 0.2949
Next Token : List, Posbility: 0.6250
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Library, Posbility: 0.0000
Next Token : Helpers, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0004
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : mem, Posbility: 0.0437
Next Token : empty, Posbility: 0.0635
Next Token : isEmpty, Posbility: 0.0723
Next Token : is, Posbility: 0.2520
Next Token : length, Posbility: 0.4707
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0004
Next Token : _, Posbility: 0.0008
Next Token :  =, Posbility: 0.0051
Next Token : (, Posbility: 0.0178
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ^, Posbility: 0.0000
Next Token : >, Posbility: 0.0003
Next Token : <, Posbility: 0.0015
Next Token : (, Posbility: 0.0052
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0096
Next Token :  ==, Posbility: 0.0708
Next Token :  , Posbility: 0.1924
Next Token :  <=, Posbility: 0.1924
Next Token :  =, Posbility: 0.5234
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  acc, Posbility: 0.0002
Next Token : 0, Posbility: 0.0009
Next Token :  1, Posbility: 0.0025
Next Token :  0, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  &&, Posbility: 0.0007
Next Token :  , Posbility: 0.0015
Next Token :  ||, Posbility: 0.0040
Next Token : 
, Posbility: 0.0228
Next Token :  then, Posbility: 0.9688
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Some, Posbility: 0.0063
Next Token :  true, Posbility: 0.0170
Next Token :  , Posbility: 0.1260
Next Token : 
, Posbility: 0.2656
Next Token :  acc, Posbility: 0.5625
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0059
Next Token : ;, Posbility: 0.0125
Next Token :  , Posbility: 0.0233
Next Token :  else, Posbility: 0.2520
Next Token : 
, Posbility: 0.6836
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0021
Next Token :      , Posbility: 0.0021
Next Token :       , Posbility: 0.0066
Next Token :    , Posbility: 0.3164
Next Token :     , Posbility: 0.6719
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : |, Posbility: 0.0001
Next Token : if, Posbility: 0.0001
Next Token : let, Posbility: 0.0002
Next Token : elif, Posbility: 0.0006
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0067
Next Token :  {, Posbility: 0.0161
Next Token :  acc, Posbility: 0.0266
Next Token : 
, Posbility: 0.4727
Next Token :  , Posbility: 0.4727
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0212
Next Token : (, Posbility: 0.0212
Next Token : List, Posbility: 0.0352
Next Token : helper, Posbility: 0.1572
Next Token : if, Posbility: 0.7031
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  String, Posbility: 0.0208
Next Token :  is, Posbility: 0.0342
Next Token :  not, Posbility: 0.0564
Next Token :  acc, Posbility: 0.0640
Next Token :  , Posbility: 0.7773
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0141
Next Token : Int, Posbility: 0.0141
Next Token : (, Posbility: 0.0918
Next Token : x, Posbility: 0.2207
Next Token : List, Posbility: 0.5977
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : hd, Posbility: 0.0374
Next Token : member, Posbility: 0.1021
Next Token : head, Posbility: 0.1904
Next Token : mem, Posbility: 0.1904
Next Token : length, Posbility: 0.4023
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  =, Posbility: 0.0022
Next Token : (, Posbility: 0.0124
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : helper, Posbility: 0.0000
Next Token : >, Posbility: 0.0001
Next Token : <, Posbility: 0.0004
Next Token : (, Posbility: 0.0022
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0058
Next Token :  <=, Posbility: 0.0095
Next Token :  ==, Posbility: 0.0095
Next Token :  , Posbility: 0.1157
Next Token :  =, Posbility: 0.8555
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 1, Posbility: 0.0009
Next Token :  , Posbility: 0.0025
Next Token :  0, Posbility: 0.0025
Next Token :  1, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0007
Next Token :  and, Posbility: 0.0021
Next Token :  &&, Posbility: 0.0075
Next Token : 
, Posbility: 0.0085
Next Token :  then, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0031
Next Token :  true, Posbility: 0.0044
Next Token :  acc, Posbility: 0.1670
Next Token :  , Posbility: 0.3535
Next Token : 
, Posbility: 0.4531
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0025
Next Token :        , Posbility: 0.0028
Next Token :      , Posbility: 0.0077
Next Token :         , Posbility: 0.0938
Next Token :       , Posbility: 0.8906
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0288
Next Token : match, Posbility: 0.0474
Next Token : acc, Posbility: 0.0781
Next Token : let, Posbility: 0.2129
Next Token : if, Posbility: 0.5781
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0255
Next Token :  Integer, Posbility: 0.0371
Next Token :  acc, Posbility: 0.0610
Next Token :  int, Posbility: 0.0693
Next Token :  , Posbility: 0.7461
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Number, Posbility: 0.0183
Next Token : Int, Posbility: 0.0933
Next Token : (, Posbility: 0.1738
Next Token : x, Posbility: 0.2539
Next Token : List, Posbility: 0.3691
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : nth, Posbility: 0.0618
Next Token : hd, Posbility: 0.1152
Next Token : mem, Posbility: 0.1475
Next Token : member, Posbility: 0.1475
Next Token : head, Posbility: 0.2754
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0006
Next Token :  =, Posbility: 0.0007
Next Token :  !, Posbility: 0.0010
Next Token : (, Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : <, Posbility: 0.0000
Next Token : (, Posbility: 0.0022
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : st, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0083
Next Token :  mod, Posbility: 0.0137
Next Token :  *, Posbility: 0.0226
Next Token :  , Posbility: 0.4531
Next Token :  =, Posbility: 0.4531
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0.0, Posbility: 0.0019
Next Token :  1, Posbility: 0.0052
Next Token :  , Posbility: 0.1040
Next Token :  acc, Posbility: 0.1040
Next Token :  0, Posbility: 0.7695
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  &&, Posbility: 0.0012
Next Token :  , Posbility: 0.0013
Next Token : 
, Posbility: 0.0017
Next Token :  ||, Posbility: 0.0109
Next Token :  then, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0383
Next Token :  false, Posbility: 0.1719
Next Token :  , Posbility: 0.2207
Next Token :  acc, Posbility: 0.2207
Next Token : 
, Posbility: 0.2832
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :          , Posbility: 0.0023
Next Token :           , Posbility: 0.0030
Next Token : 	, Posbility: 0.0044
Next Token :        , Posbility: 0.0415
Next Token :         , Posbility: 0.9453
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : raise, Posbility: 0.0304
Next Token : if, Posbility: 0.0391
Next Token : acc, Posbility: 0.0938
Next Token : return, Posbility: 0.1367
Next Token : helper, Posbility: 0.5391
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0056
Next Token :  (1, Posbility: 0.0082
Next Token :  [], Posbility: 0.0082
Next Token :  [, Posbility: 0.0106
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([], Posbility: 0.0005
Next Token : tail, Posbility: 0.0006
Next Token : List, Posbility: 0.1211
Next Token : x, Posbility: 0.3301
Next Token : (, Posbility: 0.5430
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : tail, Posbility: 0.0005
Next Token : Rest, Posbility: 0.0005
Next Token :  , Posbility: 0.0019
Next Token : x, Posbility: 0.0096
Next Token : List, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : next, Posbility: 0.0092
Next Token : rev, Posbility: 0.0134
Next Token : drop, Posbility: 0.0771
Next Token : init, Posbility: 0.1118
Next Token : tail, Posbility: 0.7305
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  ~, Posbility: 0.0001
Next Token : (, Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0041
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : sl, Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  +, Posbility: 0.0002
Next Token : );, Posbility: 0.0005
Next Token :  @, Posbility: 0.0009
Next Token :  , Posbility: 0.0025
Next Token : ), Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0071
Next Token :  1, Posbility: 0.0194
Next Token :  0, Posbility: 0.1436
Next Token :  acc, Posbility: 0.3887
Next Token :  , Posbility: 0.3887
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0069
Next Token : (-1), Posbility: 0.0079
Next Token : (0), Posbility: 0.0114
Next Token : 2, Posbility: 0.0188
Next Token : (, Posbility: 0.9102
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 0, Posbility: 0.0586
Next Token : true, Posbility: 0.0752
Next Token : false, Posbility: 0.1592
Next Token : List, Posbility: 0.2041
Next Token : acc, Posbility: 0.2617
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : +1), Posbility: 0.0107
Next Token :  |, Posbility: 0.0177
Next Token :  , Posbility: 0.1309
Next Token :  *, Posbility: 0.2158
Next Token :  +, Posbility: 0.5859
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc +
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0160
Next Token :  acc, Posbility: 0.0437
Next Token :  , Posbility: 0.1953
Next Token :  1), Posbility: 0.3223
Next Token :  0), Posbility: 0.3223
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0024
Next Token :  *, Posbility: 0.0031
Next Token :  else, Posbility: 0.0065
Next Token :  , Posbility: 0.0122
Next Token : 
, Posbility: 0.9688
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :        , Posbility: 0.0005
Next Token :     , Posbility: 0.0063
Next Token :      , Posbility: 0.0172
Next Token :         , Posbility: 0.0364
Next Token :       , Posbility: 0.9375
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : //, Posbility: 0.0000
Next Token : els, Posbility: 0.0004
Next Token : elif, Posbility: 0.0032
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0005
Next Token :   , Posbility: 0.0010
Next Token :  acc, Posbility: 0.0413
Next Token :  , Posbility: 0.3047
Next Token : 
, Posbility: 0.6484
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0005
Next Token :          , Posbility: 0.0005
Next Token :       , Posbility: 0.0005
Next Token :        , Posbility: 0.0046
Next Token :         , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0039
Next Token : let, Posbility: 0.0039
Next Token : acc, Posbility: 0.0105
Next Token : if, Posbility: 0.0286
Next Token : helper, Posbility: 0.9453
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  (1, Posbility: 0.0003
Next Token :  ~, Posbility: 0.0003
Next Token : 
, Posbility: 0.0028
Next Token :  ((, Posbility: 0.0028
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : List, Posbility: 0.0024
Next Token : x, Posbility: 0.0179
Next Token : (, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : helper, Posbility: 0.0002
Next Token : x, Posbility: 0.0085
Next Token : List, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : drop, Posbility: 0.0009
Next Token : rest, Posbility: 0.0019
Next Token : init, Posbility: 0.0025
Next Token : head, Posbility: 0.0040
Next Token : tail, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ~, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0006
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : sl, Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : ),, Posbility: 0.0000
Next Token :  +, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0008
Next Token : 
, Posbility: 0.0062
Next Token :  ((, Posbility: 0.0170
Next Token :  acc, Posbility: 0.0461
Next Token :  , Posbility: 0.9258
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0003
Next Token : (0), Posbility: 0.0003
Next Token : 
, Posbility: 0.0004
Next Token : helper, Posbility: 0.0004
Next Token : (, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 2, Posbility: 0.0060
Next Token : if, Posbility: 0.0128
Next Token : List, Posbility: 0.0164
Next Token : helper, Posbility: 0.0444
Next Token : acc, Posbility: 0.8945
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  |, Posbility: 0.0005
Next Token : ), Posbility: 0.0014
Next Token :  , Posbility: 0.0278
Next Token :  *, Posbility: 0.0459
Next Token :  +, Posbility: 0.9219
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc +
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  int, Posbility: 0.0007
Next Token :  acc, Posbility: 0.0039
Next Token :  1, Posbility: 0.0065
Next Token :  1), Posbility: 0.0177
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0025
Next Token : Int, Posbility: 0.0032
Next Token : x, Posbility: 0.0053
Next Token : (, Posbility: 0.0835
Next Token : List, Posbility: 0.8945
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : Head, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : car, Posbility: 0.0001
Next Token : nth, Posbility: 0.0001
Next Token : first, Posbility: 0.0005
Next Token : hd, Posbility: 0.0025
Next Token : head, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  (*, Posbility: 0.0001
Next Token :  *, Posbility: 0.0006
Next Token : (, Posbility: 0.0008
Next Token : ), Posbility: 0.0008
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0015
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : )), Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : )), Posbility: 0.0005
Next Token :  , Posbility: 0.0015
Next Token : );, Posbility: 0.0019
Next Token :  *, Posbility: 0.0041
Next Token : ), Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0015
Next Token :  in, Posbility: 0.0024
Next Token :  , Posbility: 0.0040
Next Token : 

, Posbility: 0.0046
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0010
Next Token :       , Posbility: 0.0344
Next Token :   , Posbility: 0.0569
Next Token :    , Posbility: 0.1206
Next Token :     , Posbility: 0.7852
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : els, Posbility: 0.0000
Next Token : end, Posbility: 0.0001
Next Token : elif, Posbility: 0.0001
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  then, Posbility: 0.0005
Next Token :   , Posbility: 0.0023
Next Token :  acc, Posbility: 0.0132
Next Token :  , Posbility: 0.1611
Next Token : 
, Posbility: 0.8164
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :        , Posbility: 0.0005
Next Token :     , Posbility: 0.0006
Next Token :      , Posbility: 0.0045
Next Token :         , Posbility: 0.0085
Next Token :       , Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0059
Next Token : match, Posbility: 0.0076
Next Token : let, Posbility: 0.1187
Next Token : if, Posbility: 0.1523
Next Token : helper, Posbility: 0.6836
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0005
Next Token :  ~, Posbility: 0.0011
Next Token :  ((, Posbility: 0.0084
Next Token : 
, Posbility: 0.0256
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([, Posbility: 0.0001
Next Token : 
, Posbility: 0.0005
Next Token : x, Posbility: 0.0066
Next Token : List, Posbility: 0.0109
Next Token : (, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : helper, Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token : x, Posbility: 0.0052
Next Token : List, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : rest, Posbility: 0.0048
Next Token : head, Posbility: 0.0055
Next Token : drop, Posbility: 0.0090
Next Token : init, Posbility: 0.0457
Next Token : tail, Posbility: 0.9180
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ~, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : helper, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0036
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : sl, Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : ),, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  (*, Posbility: 0.0060
Next Token :  acc, Posbility: 0.0077
Next Token :  ((, Posbility: 0.0344
Next Token : 
, Posbility: 0.0569
Next Token :  , Posbility: 0.8867
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0003
Next Token : if, Posbility: 0.0007
Next Token : 
, Posbility: 0.0025
Next Token : helper, Posbility: 0.0028
Next Token : (, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 
, Posbility: 0.0123
Next Token : if, Posbility: 0.0178
Next Token : List, Posbility: 0.0483
Next Token : helper, Posbility: 0.1318
Next Token : acc, Posbility: 0.7578
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token : ), Posbility: 0.0003
Next Token :  , Posbility: 0.0082
Next Token :  *, Posbility: 0.0369
Next Token :  +, Posbility: 0.9531
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc +
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  acc, Posbility: 0.0039
Next Token : 
, Posbility: 0.0056
Next Token :  ((, Posbility: 0.0106
Next Token :  (*, Posbility: 0.0135
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0054
Next Token : x, Posbility: 0.0069
Next Token : helper, Posbility: 0.0273
Next Token : (, Posbility: 0.2295
Next Token : List, Posbility: 0.7070
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : Util, Posbility: 0.0000
Next Token : Helpers, Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : last, Posbility: 0.0024
Next Token : fold, Posbility: 0.0031
Next Token : hd, Posbility: 0.0051
Next Token : first, Posbility: 0.0066
Next Token : head, Posbility: 0.9727
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token :  (*, Posbility: 0.0006
Next Token : (, Posbility: 0.0008
Next Token :  *, Posbility: 0.0008
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ^, Posbility: 0.0000
Next Token : head, Posbility: 0.0000
Next Token : List, Posbility: 0.0002
Next Token : (, Posbility: 0.0110
Next Token : x, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  *), Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  *), Posbility: 0.0015
Next Token :  , Posbility: 0.0124
Next Token :  +, Posbility: 0.0204
Next Token : ), Posbility: 0.0913
Next Token :  *, Posbility: 0.8672
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs *
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0003
Next Token :  first, Posbility: 0.0004
Next Token :  rec, Posbility: 0.0006
Next Token : 
, Posbility: 0.0013
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0022
Next Token : head, Posbility: 0.0022
Next Token : (, Posbility: 0.0269
Next Token : helper, Posbility: 0.0732
Next Token : List, Posbility: 0.8906
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : Head, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : first, Posbility: 0.0039
Next Token : hd, Posbility: 0.0039
Next Token : tail, Posbility: 0.0065
Next Token : last, Posbility: 0.0177
Next Token : head, Posbility: 0.9648
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ), Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0002
Next Token : (, Posbility: 0.0025
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : lst, Posbility: 0.0000
Next Token : List, Posbility: 0.0009
Next Token : (, Posbility: 0.0601
Next Token : x, Posbility: 0.9375
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ', Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ), Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0005
Next Token : '), Posbility: 0.0010
Next Token :  , Posbility: 0.0035
Next Token : );, Posbility: 0.0157
Next Token : ), Posbility: 0.9766
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0003
Next Token :  , Posbility: 0.0041
Next Token :  in, Posbility: 0.0496
Next Token : 

, Posbility: 0.0635
Next Token : 
, Posbility: 0.8789
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0013
Next Token :       , Posbility: 0.0019
Next Token :     , Posbility: 0.0171
Next Token :  , Posbility: 0.0410
Next Token :   , Posbility: 0.9336
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0005
Next Token :  in, Posbility: 0.0015
Next Token : end, Posbility: 0.0058
Next Token : helper, Posbility: 0.0066
Next Token : in, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  (*, Posbility: 0.0000
Next Token :   , Posbility: 0.0013
Next Token : 

, Posbility: 0.0104
Next Token :  , Posbility: 0.0469
Next Token : 
, Posbility: 0.9414
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0002
Next Token :       , Posbility: 0.0004
Next Token :    , Posbility: 0.0019
Next Token :     , Posbility: 0.0179
Next Token :   , Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0061
Next Token : (, Posbility: 0.0100
Next Token : let, Posbility: 0.0272
Next Token : if, Posbility: 0.0349
Next Token : helper, Posbility: 0.9023
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0017
Next Token :  [, Posbility: 0.0017
Next Token :  ~, Posbility: 0.0022
Next Token :  [], Posbility: 0.0096
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper 
 score:False
Error type: noerr
---------------------------
Next Token : [0, Posbility: 0.0000
Next Token : ([], Posbility: 0.0000
Next Token : List, Posbility: 0.0009
Next Token : (, Posbility: 0.0067
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper x
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0024
Next Token :  1, Posbility: 0.0024
Next Token :  , Posbility: 0.0065
Next Token :  0;, Posbility: 0.0177
Next Token :  0, Posbility: 0.9688
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0056
Next Token :  |, Posbility: 0.0072
Next Token : L, Posbility: 0.0093
Next Token : 

, Posbility: 0.3066
Next Token : 
, Posbility: 0.6484
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0289
Next Token : =, Posbility: 0.0289
Next Token : ;, Posbility: 0.0786
Next Token : 

, Posbility: 0.1377
Next Token : let, Posbility: 0.1465
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  check, Posbility: 0.0474
Next Token :  rec, Posbility: 0.0688
Next Token :  , Posbility: 0.1289
Next Token :  is, Posbility: 0.2734
Next Token :  main, Posbility: 0.3086
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0037
Next Token :  argv, Posbility: 0.0054
Next Token : (), Posbility: 0.1396
Next Token :  =, Posbility: 0.2031
Next Token :  , Posbility: 0.6250
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0014
Next Token : (, Posbility: 0.0043
Next Token : _, Posbility: 0.0062
Next Token : x, Posbility: 0.0588
Next Token : (), Posbility: 0.9219
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main ()
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : =, Posbility: 0.0002
Next Token :   , Posbility: 0.0005
Next Token :  , Posbility: 0.0013
Next Token : 
, Posbility: 0.0032
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0009
Next Token :  is, Posbility: 0.0064
Next Token : 

, Posbility: 0.0105
Next Token :  , Posbility: 0.0322
Next Token : 
, Posbility: 0.9453
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : printf, Posbility: 0.0017
Next Token :    , Posbility: 0.0019
Next Token : let, Posbility: 0.0058
Next Token :     , Posbility: 0.0139
Next Token :   , Posbility: 0.9727
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : assert, Posbility: 0.0240
Next Token : printf, Posbility: 0.0240
Next Token : print, Posbility: 0.0349
Next Token : Printf, Posbility: 0.0396
Next Token : let, Posbility: 0.7930
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0291
Next Token :  l, Posbility: 0.0422
Next Token :  rec, Posbility: 0.0615
Next Token :  even, Posbility: 0.1152
Next Token :  , Posbility: 0.5859
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : product, Posbility: 0.0166
Next Token : odd, Posbility: 0.0166
Next Token : n, Posbility: 0.0188
Next Token : prod, Posbility: 0.0188
Next Token : x, Posbility: 0.7969
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0005
Next Token : 0, Posbility: 0.0011
Next Token : 1, Posbility: 0.0065
Next Token :  =, Posbility: 0.0289
Next Token : s, Posbility: 0.9570
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0010
Next Token : 0, Posbility: 0.0031
Next Token : _, Posbility: 0.0045
Next Token : 1, Posbility: 0.0156
Next Token :  =, Posbility: 0.9688
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [0,, Posbility: 0.0579
Next Token :  , Posbility: 0.1572
Next Token : 
, Posbility: 0.1572
Next Token :  [1,, Posbility: 0.1572
Next Token :  [, Posbility: 0.4277
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0762
Next Token :  1;, Posbility: 0.0977
Next Token :  0;, Posbility: 0.0977
Next Token : |, Posbility: 0.1260
Next Token :  , Posbility: 0.1826
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 6, Posbility: 0.0659
Next Token : 5, Posbility: 0.0747
Next Token : 1,, Posbility: 0.0962
Next Token : 3, Posbility: 0.1396
Next Token : 2, Posbility: 0.2617
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ^, Posbility: 0.0137
Next Token :  3;, Posbility: 0.0199
Next Token :  *, Posbility: 0.0255
Next Token :  |, Posbility: 0.2422
Next Token :  , Posbility: 0.5820
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0021
Next Token : 5, Posbility: 0.0024
Next Token : ], Posbility: 0.0095
Next Token : 3, Posbility: 0.0137
Next Token : ;, Posbility: 0.9648
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0615
Next Token :  0, Posbility: 0.0698
Next Token :  1, Posbility: 0.0791
Next Token :  4, Posbility: 0.1475
Next Token :  , Posbility: 0.5156
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 6, Posbility: 0.0315
Next Token : 7, Posbility: 0.0405
Next Token : 2, Posbility: 0.0520
Next Token : 5, Posbility: 0.0859
Next Token : 3, Posbility: 0.7188
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  |, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  *, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token : 5, Posbility: 0.0001
Next Token : ];, Posbility: 0.0002
Next Token : ], Posbility: 0.0420
Next Token : ;, Posbility: 0.9570
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  4;, Posbility: 0.0118
Next Token :  0, Posbility: 0.0320
Next Token :  1, Posbility: 0.0320
Next Token :  , Posbility: 0.2373
Next Token :  4, Posbility: 0.6445
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  *, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  |, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ]., Posbility: 0.0001
Next Token : ][, Posbility: 0.0001
Next Token : ];, Posbility: 0.0011
Next Token : ], Posbility: 0.3770
Next Token : ;, Posbility: 0.6211
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  10, Posbility: 0.0037
Next Token :  4, Posbility: 0.0061
Next Token :  1, Posbility: 0.0101
Next Token :  0, Posbility: 0.0454
Next Token :  , Posbility: 0.9141
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 8, Posbility: 0.0060
Next Token : 2, Posbility: 0.0087
Next Token : 7, Posbility: 0.0238
Next Token : 6, Posbility: 0.0503
Next Token : 5, Posbility: 0.8906
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :   , Posbility: 0.0004
Next Token : ], Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ]., Posbility: 0.0001
Next Token : ][, Posbility: 0.0001
Next Token : ];, Posbility: 0.0010
Next Token : ;, Posbility: 0.4980
Next Token : ], Posbility: 0.4980
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0008
Next Token :  , Posbility: 0.0031
Next Token : 
, Posbility: 0.0122
Next Token :  =, Posbility: 0.0138
Next Token :  in, Posbility: 0.9688
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0004
Next Token :  is, Posbility: 0.0019
Next Token :  , Posbility: 0.0031
Next Token : 

, Posbility: 0.0067
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0002
Next Token :    , Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token :     , Posbility: 0.0013
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : print, Posbility: 0.0645
Next Token : printf, Posbility: 0.0830
Next Token : Printf, Posbility: 0.0938
Next Token : if, Posbility: 0.1064
Next Token : let, Posbility: 0.4766
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0417
Next Token :  result, Posbility: 0.0537
Next Token :  acc, Posbility: 0.1875
Next Token :  even, Posbility: 0.2402
Next Token :  , Posbility: 0.3086
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : prod, Posbility: 0.0625
Next Token : p, Posbility: 0.0708
Next Token : product, Posbility: 0.0806
Next Token : x, Posbility: 0.1030
Next Token : y, Posbility: 0.4082
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0007
Next Token :  , Posbility: 0.0008
Next Token : 1, Posbility: 0.0014
Next Token :  =, Posbility: 0.1816
Next Token : s, Posbility: 0.8125
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0005
Next Token :  , Posbility: 0.0010
Next Token : _, Posbility: 0.0017
Next Token : 1, Posbility: 0.0025
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0114
Next Token : 
, Posbility: 0.0310
Next Token :  is, Posbility: 0.0845
Next Token :  , Posbility: 0.2295
Next Token :  [, Posbility: 0.6250
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  10, Posbility: 0.0361
Next Token :  4, Posbility: 0.0596
Next Token :  0, Posbility: 0.1621
Next Token :  1, Posbility: 0.1621
Next Token :  , Posbility: 0.4395
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 7, Posbility: 0.0811
Next Token : 5, Posbility: 0.0918
Next Token : 6, Posbility: 0.1709
Next Token : 3, Posbility: 0.1943
Next Token : 2, Posbility: 0.3203
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ^, Posbility: 0.0007
Next Token :  (*, Posbility: 0.0012
Next Token :  +, Posbility: 0.0017
Next Token :  *, Posbility: 0.0075
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0003
Next Token : 2, Posbility: 0.0003
Next Token : ^, Posbility: 0.0031
Next Token : ], Posbility: 0.0067
Next Token : ;, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  -1, Posbility: 0.0067
Next Token :  1, Posbility: 0.0388
Next Token :  0, Posbility: 0.0825
Next Token :  4, Posbility: 0.2236
Next Token :  , Posbility: 0.6094
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 7, Posbility: 0.0447
Next Token : 6, Posbility: 0.0571
Next Token : 5, Posbility: 0.0835
Next Token : 2, Posbility: 0.1069
Next Token : 3, Posbility: 0.6172
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  (*, Posbility: 0.0001
Next Token : *, Posbility: 0.0002
Next Token :  +, Posbility: 0.0003
Next Token :  *, Posbility: 0.0022
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -, Posbility: 0.0001
Next Token : /, Posbility: 0.0001
Next Token : ^, Posbility: 0.0001
Next Token : ], Posbility: 0.0674
Next Token : ;, Posbility: 0.9336
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  -4, Posbility: 0.0092
Next Token :  1, Posbility: 0.0152
Next Token :  0, Posbility: 0.0530
Next Token :  , Posbility: 0.2373
Next Token :  4, Posbility: 0.6445
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  +, Posbility: 0.0002
Next Token :  (*, Posbility: 0.0003
Next Token :  |, Posbility: 0.0003
Next Token :  *, Posbility: 0.0028
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0001
Next Token : ^, Posbility: 0.0001
Next Token : ];, Posbility: 0.0001
Next Token : ], Posbility: 0.1826
Next Token : ;, Posbility: 0.8164
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  10, Posbility: 0.0046
Next Token :  1, Posbility: 0.0076
Next Token :  4, Posbility: 0.0208
Next Token :  0, Posbility: 0.0564
Next Token :  , Posbility: 0.8828
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 8, Posbility: 0.0097
Next Token : -5, Posbility: 0.0125
Next Token : 7, Posbility: 0.0491
Next Token : 6, Posbility: 0.4121
Next Token : 5, Posbility: 0.4668
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0005
Next Token : ], Posbility: 0.0005
Next Token :  +, Posbility: 0.0015
Next Token :  *, Posbility: 0.0019
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0005
Next Token : ];, Posbility: 0.0007
Next Token : ^, Posbility: 0.0014
Next Token : ], Posbility: 0.3457
Next Token : ;, Posbility: 0.6484
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  4, Posbility: 0.0117
Next Token :  1, Posbility: 0.0192
Next Token :  10, Posbility: 0.0247
Next Token :  0, Posbility: 0.0859
Next Token :  , Posbility: 0.8164
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0098
Next Token : 8, Posbility: 0.0111
Next Token : 5, Posbility: 0.0161
Next Token : 7, Posbility: 0.0564
Next Token : 6, Posbility: 0.8828
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token : ;, Posbility: 0.0010
Next Token : ], Posbility: 0.0046
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : :, Posbility: 0.0001
Next Token : /, Posbility: 0.0001
Next Token : ];, Posbility: 0.0004
Next Token : ;, Posbility: 0.1064
Next Token : ], Posbility: 0.8906
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  =, Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 0.0006
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0013
Next Token : 

, Posbility: 0.0229
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0006
Next Token :  , Posbility: 0.0008
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : print, Posbility: 0.0649
Next Token : printf, Posbility: 0.0737
Next Token : Printf, Posbility: 0.0942
Next Token : if, Posbility: 0.1069
Next Token : let, Posbility: 0.4805
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  result, Posbility: 0.0142
Next Token :  res, Posbility: 0.0161
Next Token :  is, Posbility: 0.0182
Next Token :  even, Posbility: 0.0815
Next Token :  , Posbility: 0.7734
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : r, Posbility: 0.0066
Next Token : product, Posbility: 0.0066
Next Token : y, Posbility: 0.0181
Next Token : x, Posbility: 0.0262
Next Token : z, Posbility: 0.8672
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let z
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ipped, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : 1, Posbility: 0.0004
Next Token :  =, Posbility: 0.0159
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token : _, Posbility: 0.0006
Next Token :   , Posbility: 0.0009
Next Token : 1, Posbility: 0.0019
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0023
Next Token : 
, Posbility: 0.0062
Next Token :  , Posbility: 0.0168
Next Token :  [], Posbility: 0.0459
Next Token :  [, Posbility: 0.9219
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0;, Posbility: 0.0081
Next Token :  4, Posbility: 0.0134
Next Token :  1, Posbility: 0.0771
Next Token :  0, Posbility: 0.1270
Next Token :  , Posbility: 0.7305
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 6, Posbility: 0.0142
Next Token : 7, Posbility: 0.0142
Next Token : 5, Posbility: 0.0160
Next Token : 3, Posbility: 0.0493
Next Token : 2, Posbility: 0.8750
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  (*, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : ;, Posbility: 0.0001
Next Token :  *, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ];, Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token : ^, Posbility: 0.0001
Next Token : ], Posbility: 0.0032
Next Token : ;, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  3;, Posbility: 0.0018
Next Token :  1, Posbility: 0.0050
Next Token :  0, Posbility: 0.0135
Next Token :  4, Posbility: 0.0286
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 7, Posbility: 0.0039
Next Token : 6, Posbility: 0.0051
Next Token : 5, Posbility: 0.0095
Next Token : 2, Posbility: 0.0107
Next Token : 3, Posbility: 0.9648
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  *, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ];, Posbility: 0.0001
Next Token : ], Posbility: 0.0140
Next Token : ;, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  1, Posbility: 0.0020
Next Token :  4;, Posbility: 0.0043
Next Token :  0, Posbility: 0.0063
Next Token :  , Posbility: 0.0464
Next Token :  4, Posbility: 0.9336
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token :  !, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  *, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ];, Posbility: 0.0001
Next Token : ], Posbility: 0.0330
Next Token : ;, Posbility: 0.9648
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  1, Posbility: 0.0012
Next Token :  4, Posbility: 0.0017
Next Token :  5;, Posbility: 0.0028
Next Token :  0, Posbility: 0.0059
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0011
Next Token : 3, Posbility: 0.0019
Next Token : 7, Posbility: 0.0065
Next Token : 6, Posbility: 0.0226
Next Token : 5, Posbility: 0.9609
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  !, Posbility: 0.0000
Next Token :  *, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : ;, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 6, Posbility: 0.0000
Next Token : :, Posbility: 0.0001
Next Token : ];, Posbility: 0.0002
Next Token : ], Posbility: 0.0179
Next Token : ;, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  1, Posbility: 0.0017
Next Token :  4, Posbility: 0.0019
Next Token :  0;, Posbility: 0.0021
Next Token :  0, Posbility: 0.0084
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 8, Posbility: 0.0021
Next Token : 9, Posbility: 0.0021
Next Token : 5, Posbility: 0.0072
Next Token : 7, Posbility: 0.0366
Next Token : 6, Posbility: 0.9453
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : ;, Posbility: 0.0097
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 9, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : 7, Posbility: 0.0001
Next Token : ], Posbility: 0.0022
Next Token : ;, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  12, Posbility: 0.0010
Next Token :  1, Posbility: 0.0013
Next Token :  10, Posbility: 0.0019
Next Token :  0, Posbility: 0.0085
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 5, Posbility: 0.0005
Next Token : 9, Posbility: 0.0017
Next Token : 8, Posbility: 0.0031
Next Token : 6, Posbility: 0.0059
Next Token : 7, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token : ;, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : ], Posbility: 0.0059
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ][, Posbility: 0.0000
Next Token : ]., Posbility: 0.0000
Next Token : ];, Posbility: 0.0001
Next Token : ;, Posbility: 0.0140
Next Token : ], Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 0.0006
Next Token : 
, Posbility: 0.0015
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0179
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :    , Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token :     , Posbility: 0.0009
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : assert, Posbility: 0.0703
Next Token : print, Posbility: 0.0903
Next Token : printf, Posbility: 0.0903
Next Token : Printf, Posbility: 0.1494
Next Token : let, Posbility: 0.4062
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0160
Next Token :  res, Posbility: 0.0160
Next Token :  is, Posbility: 0.0182
Next Token :  even, Posbility: 0.0437
Next Token :  , Posbility: 0.7734
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ans, Posbility: 0.0275
Next Token : x, Posbility: 0.0659
Next Token : q, Posbility: 0.0845
Next Token : t, Posbility: 0.0957
Next Token : w, Posbility: 0.3789
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : z, Posbility: 0.0129
Next Token : s, Posbility: 0.0147
Next Token : _, Posbility: 0.0581
Next Token : 1, Posbility: 0.0747
Next Token :  =, Posbility: 0.8008
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0060
Next Token :  0, Posbility: 0.0060
Next Token :  , Posbility: 0.0439
Next Token :  [], Posbility: 0.0439
Next Token :  [, Posbility: 0.8828
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0;, Posbility: 0.0092
Next Token :  2;, Posbility: 0.0104
Next Token :  1, Posbility: 0.0410
Next Token :  0, Posbility: 0.0767
Next Token :  , Posbility: 0.8242
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 7, Posbility: 0.0049
Next Token : 5, Posbility: 0.0071
Next Token : 3, Posbility: 0.0170
Next Token : ;, Posbility: 0.0193
Next Token : 2, Posbility: 0.9297
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  |, Posbility: 0.0001
Next Token : ;, Posbility: 0.0001
Next Token :  *, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ];, Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token : ^, Posbility: 0.0001
Next Token : ], Posbility: 0.0028
Next Token : ;, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  1, Posbility: 0.0008
Next Token :  3;, Posbility: 0.0015
Next Token :  0, Posbility: 0.0028
Next Token :  4, Posbility: 0.0036
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 6, Posbility: 0.0015
Next Token : 7, Posbility: 0.0017
Next Token : 5, Posbility: 0.0022
Next Token : 2, Posbility: 0.0036
Next Token : 3, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ];, Posbility: 0.0001
Next Token : ], Posbility: 0.0067
Next Token : ;, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  1, Posbility: 0.0005
Next Token :  0, Posbility: 0.0017
Next Token :  4;, Posbility: 0.0035
Next Token :  , Posbility: 0.0140
Next Token :  4, Posbility: 0.9766
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  !, Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ];, Posbility: 0.0001
Next Token : ], Posbility: 0.0179
Next Token : ;, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  1, Posbility: 0.0003
Next Token :  4, Posbility: 0.0003
Next Token :  0, Posbility: 0.0019
Next Token :  5;, Posbility: 0.0019
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0003
Next Token : 3, Posbility: 0.0004
Next Token : 7, Posbility: 0.0019
Next Token : 6, Posbility: 0.0046
Next Token : 5, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token :  ..., Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : :, Posbility: 0.0001
Next Token : ];, Posbility: 0.0002
Next Token : ], Posbility: 0.0110
Next Token : ;, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 6, Posbility: 0.0001
Next Token :  4, Posbility: 0.0002
Next Token :  1, Posbility: 0.0002
Next Token :  0, Posbility: 0.0015
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 8, Posbility: 0.0005
Next Token : 9, Posbility: 0.0005
Next Token : 5, Posbility: 0.0022
Next Token : 7, Posbility: 0.0075
Next Token : 6, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ;, Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : 7, Posbility: 0.0001
Next Token : ];, Posbility: 0.0002
Next Token : ], Posbility: 0.0110
Next Token : ;, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 7, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  0;, Posbility: 0.0002
Next Token :  0, Posbility: 0.0006
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 5, Posbility: 0.0005
Next Token : 9, Posbility: 0.0005
Next Token : 8, Posbility: 0.0010
Next Token : 6, Posbility: 0.0022
Next Token : 7, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : ;, Posbility: 0.0059
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : 9, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0013
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  1, Posbility: 0.0007
Next Token :  12, Posbility: 0.0009
Next Token :  10, Posbility: 0.0031
Next Token :  0, Posbility: 0.0040
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0004
Next Token : 6, Posbility: 0.0005
Next Token : 9, Posbility: 0.0046
Next Token : 7, Posbility: 0.0075
Next Token : 8, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ];, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : ], Posbility: 0.0046
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ]., Posbility: 0.0000
Next Token : ][, Posbility: 0.0000
Next Token : ];, Posbility: 0.0001
Next Token : ;, Posbility: 0.0097
Next Token : ], Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  =, Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 0.0022
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0474
Next Token : 
, Posbility: 0.9531
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :    , Posbility: 0.0002
Next Token :  , Posbility: 0.0006
Next Token :     , Posbility: 0.0008
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0396
Next Token : printf, Posbility: 0.0737
Next Token : print, Posbility: 0.0835
Next Token : Printf, Posbility: 0.1377
Next Token : let, Posbility: 0.4805
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0161
Next Token :  is, Posbility: 0.0161
Next Token :  even, Posbility: 0.0233
Next Token :  v, Posbility: 0.0496
Next Token :  , Posbility: 0.7734
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : t, Posbility: 0.0525
Next Token : y, Posbility: 0.0674
Next Token : u, Posbility: 0.1108
Next Token : q, Posbility: 0.1611
Next Token : x, Posbility: 0.1826
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0078
Next Token : _, Posbility: 0.0128
Next Token : x, Posbility: 0.0128
Next Token : s, Posbility: 0.2910
Next Token :  =, Posbility: 0.6133
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0141
Next Token :  is, Posbility: 0.0383
Next Token :  [], Posbility: 0.0383
Next Token :  , Posbility: 0.1040
Next Token :  [, Posbility: 0.7695
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1;, Posbility: 0.0161
Next Token :  0;, Posbility: 0.0182
Next Token :  1, Posbility: 0.0928
Next Token :  0, Posbility: 0.1191
Next Token :  , Posbility: 0.6836
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 7, Posbility: 0.0068
Next Token : 5, Posbility: 0.0126
Next Token : ;, Posbility: 0.0209
Next Token : 3, Posbility: 0.0391
Next Token : 2, Posbility: 0.8867
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  (*, Posbility: 0.0001
Next Token :  |, Posbility: 0.0001
Next Token : ;, Posbility: 0.0002
Next Token :  *, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 3, Posbility: 0.0002
Next Token : ];, Posbility: 0.0004
Next Token : 2, Posbility: 0.0005
Next Token : ], Posbility: 0.0229
Next Token : ;, Posbility: 0.9766
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  1, Posbility: 0.0027
Next Token :  3;, Posbility: 0.0027
Next Token :  0, Posbility: 0.0137
Next Token :  4, Posbility: 0.0199
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 6, Posbility: 0.0035
Next Token : 7, Posbility: 0.0051
Next Token : 5, Posbility: 0.0058
Next Token : 2, Posbility: 0.0095
Next Token : 3, Posbility: 0.9688
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token :  |, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ];, Posbility: 0.0009
Next Token : ], Posbility: 0.0952
Next Token : ;, Posbility: 0.9023
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  1, Posbility: 0.0007
Next Token :  4;, Posbility: 0.0031
Next Token :  0, Posbility: 0.0039
Next Token :  , Posbility: 0.0227
Next Token :  4, Posbility: 0.9648
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token :  |, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : ][, Posbility: 0.0000
Next Token : ];, Posbility: 0.0006
Next Token : ], Posbility: 0.1191
Next Token : ;, Posbility: 0.8789
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  1, Posbility: 0.0004
Next Token :  4, Posbility: 0.0004
Next Token :  5;, Posbility: 0.0012
Next Token :  0, Posbility: 0.0075
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 8, Posbility: 0.0007
Next Token : 9, Posbility: 0.0010
Next Token : 6, Posbility: 0.0075
Next Token : 7, Posbility: 0.0075
Next Token : 5, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  *, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  |, Posbility: 0.0001
Next Token : ], Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ][, Posbility: 0.0001
Next Token : :, Posbility: 0.0001
Next Token : ];, Posbility: 0.0016
Next Token : ], Posbility: 0.2676
Next Token : ;, Posbility: 0.7305
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  4, Posbility: 0.0002
Next Token :  10, Posbility: 0.0003
Next Token :  1, Posbility: 0.0003
Next Token :  0, Posbility: 0.0052
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 8, Posbility: 0.0015
Next Token : 5, Posbility: 0.0019
Next Token : 9, Posbility: 0.0019
Next Token : 7, Posbility: 0.0228
Next Token : 6, Posbility: 0.9688
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  *, Posbility: 0.0001
Next Token :  |, Posbility: 0.0001
Next Token : ], Posbility: 0.0001
Next Token : ;, Posbility: 0.0013
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : \, Posbility: 0.0001
Next Token : ][, Posbility: 0.0001
Next Token : ];, Posbility: 0.0013
Next Token : ], Posbility: 0.2217
Next Token : ;, Posbility: 0.7734
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  1, Posbility: 0.0002
Next Token :  10, Posbility: 0.0002
Next Token :  0;, Posbility: 0.0002
Next Token :  0, Posbility: 0.0032
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 5, Posbility: 0.0003
Next Token : 9, Posbility: 0.0008
Next Token : 6, Posbility: 0.0010
Next Token : 8, Posbility: 0.0015
Next Token : 7, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : ], Posbility: 0.0001
Next Token : ;, Posbility: 0.0032
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : \, Posbility: 0.0001
Next Token : :, Posbility: 0.0001
Next Token : ];, Posbility: 0.0013
Next Token : ], Posbility: 0.1191
Next Token : ;, Posbility: 0.8789
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  0;, Posbility: 0.0008
Next Token :  10, Posbility: 0.0011
Next Token :  0, Posbility: 0.0015
Next Token :  8;, Posbility: 0.0947
Next Token :  , Posbility: 0.8984
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0003
Next Token : 6, Posbility: 0.0006
Next Token : 9, Posbility: 0.0075
Next Token : 7, Posbility: 0.0085
Next Token : 8, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  !, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : ;, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ];, Posbility: 0.0001
Next Token : ], Posbility: 0.0076
Next Token : ;, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  1, Posbility: 0.0007
Next Token :  11, Posbility: 0.0009
Next Token :  0, Posbility: 0.0040
Next Token :  10, Posbility: 0.0109
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 6, Posbility: 0.0002
Next Token : 2, Posbility: 0.0004
Next Token : 7, Posbility: 0.0012
Next Token : 8, Posbility: 0.0013
Next Token : 9, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token : ;, Posbility: 0.0002
Next Token :   , Posbility: 0.0003
Next Token : ], Posbility: 0.0036
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ]., Posbility: 0.0000
Next Token : ][, Posbility: 0.0000
Next Token : ];, Posbility: 0.0004
Next Token : ;, Posbility: 0.0203
Next Token : ], Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  and, Posbility: 0.0003
Next Token : 
, Posbility: 0.0017
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0006
Next Token : 

, Posbility: 0.0330
Next Token : 
, Posbility: 0.9648
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token :     , Posbility: 0.0013
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0262
Next Token : printf, Posbility: 0.0432
Next Token : print, Posbility: 0.0491
Next Token : Printf, Posbility: 0.0713
Next Token : let, Posbility: 0.6758
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0043
Next Token :  v, Posbility: 0.0049
Next Token :  even, Posbility: 0.0056
Next Token :  check, Posbility: 0.0063
Next Token :  , Posbility: 0.9336
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : t, Posbility: 0.0019
Next Token : f, Posbility: 0.0019
Next Token : z, Posbility: 0.0035
Next Token : x, Posbility: 0.0057
Next Token : y, Posbility: 0.9609
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : z, Posbility: 0.0006
Next Token :  , Posbility: 0.0007
Next Token : 1, Posbility: 0.0008
Next Token : s, Posbility: 0.0036
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0009
Next Token : 
, Posbility: 0.0064
Next Token :  , Posbility: 0.0175
Next Token :  [], Posbility: 0.0175
Next Token :  [, Posbility: 0.9531
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4, Posbility: 0.0033
Next Token :  10, Posbility: 0.0033
Next Token :  0, Posbility: 0.0352
Next Token :  1, Posbility: 0.0352
Next Token :  , Posbility: 0.9062
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 9, Posbility: 0.0027
Next Token : ;, Posbility: 0.0031
Next Token : 5, Posbility: 0.0035
Next Token : 3, Posbility: 0.0107
Next Token : 2, Posbility: 0.9688
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  (*, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token : ;, Posbility: 0.0001
Next Token :  *, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : ], Posbility: 0.0005
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  3;, Posbility: 0.0003
Next Token :  1, Posbility: 0.0005
Next Token :  0, Posbility: 0.0013
Next Token :  4, Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 6, Posbility: 0.0004
Next Token : 5, Posbility: 0.0005
Next Token : 7, Posbility: 0.0006
Next Token : 2, Posbility: 0.0013
Next Token : 3, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  !, Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0010
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  1, Posbility: 0.0002
Next Token :  0, Posbility: 0.0004
Next Token :  4;, Posbility: 0.0006
Next Token :  , Posbility: 0.0041
Next Token :  4, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  !, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0015
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  4, Posbility: 0.0001
Next Token :  1, Posbility: 0.0002
Next Token :  5;, Posbility: 0.0003
Next Token :  0, Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 8, Posbility: 0.0002
Next Token : 9, Posbility: 0.0003
Next Token : 7, Posbility: 0.0010
Next Token : 6, Posbility: 0.0015
Next Token : 5, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : a, Posbility: 0.0000
Next Token :  !, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0046
Next Token : ;, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  4, Posbility: 0.0000
Next Token :  10, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  0, Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 8, Posbility: 0.0003
Next Token : 5, Posbility: 0.0004
Next Token : 9, Posbility: 0.0004
Next Token : 7, Posbility: 0.0036
Next Token : 6, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : a, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token : ;, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0032
Next Token : ;, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  12, Posbility: 0.0000
Next Token :  10, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  0, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 5, Posbility: 0.0000
Next Token : 6, Posbility: 0.0001
Next Token : 9, Posbility: 0.0002
Next Token : 8, Posbility: 0.0004
Next Token : 7, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ;, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0041
Next Token : ;, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  10, Posbility: 0.0002
Next Token :  0, Posbility: 0.0003
Next Token :  8;, Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token : 6, Posbility: 0.0001
Next Token : 7, Posbility: 0.0019
Next Token : 9, Posbility: 0.0032
Next Token : 8, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token :  !, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : 9, Posbility: 0.0001
Next Token : ];, Posbility: 0.0001
Next Token : ], Posbility: 0.0076
Next Token : ;, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  0;, Posbility: 0.0005
Next Token :  0, Posbility: 0.0006
Next Token :  10;, Posbility: 0.0009
Next Token :  10, Posbility: 0.0025
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0001
Next Token : 6, Posbility: 0.0001
Next Token : 8, Posbility: 0.0004
Next Token : 7, Posbility: 0.0006
Next Token : 9, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ;, Posbility: 0.0015
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 9, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : :, Posbility: 0.0001
Next Token : ], Posbility: 0.0004
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 10, Posbility: 0.0015
Next Token :  11, Posbility: 0.0015
Next Token :  , Posbility: 0.0066
Next Token :  0, Posbility: 0.0066
Next Token :  10, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ];, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :   , Posbility: 0.0005
Next Token : ], Posbility: 0.0140
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ]., Posbility: 0.0000
Next Token : ;, Posbility: 0.0006
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :  and, Posbility: 0.0001
Next Token :  =, Posbility: 0.0002
Next Token : 
, Posbility: 0.0019
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0330
Next Token : 
, Posbility: 0.9648
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0001
Next Token : 

, Posbility: 0.0002
Next Token :  , Posbility: 0.0009
Next Token :     , Posbility: 0.0013
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : assert, Posbility: 0.0248
Next Token : printf, Posbility: 0.0317
Next Token : print, Posbility: 0.0361
Next Token : Printf, Posbility: 0.0762
Next Token : let, Posbility: 0.7227
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0044
Next Token :  check, Posbility: 0.0044
Next Token :  v, Posbility: 0.0064
Next Token :  even, Posbility: 0.0064
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : w, Posbility: 0.0024
Next Token : q, Posbility: 0.0031
Next Token : y, Posbility: 0.0045
Next Token : x, Posbility: 0.0065
Next Token : z, Posbility: 0.9609
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0004
Next Token : s, Posbility: 0.0009
Next Token : 2, Posbility: 0.0009
Next Token : 1, Posbility: 0.0015
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0003
Next Token :  [], Posbility: 0.0040
Next Token : 
, Posbility: 0.0066
Next Token :  , Posbility: 0.0066
Next Token :  [, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2;, Posbility: 0.0010
Next Token : 
, Posbility: 0.0019
Next Token :  0, Posbility: 0.0084
Next Token :  1, Posbility: 0.0122
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 9, Posbility: 0.0004
Next Token : ;, Posbility: 0.0006
Next Token : 5, Posbility: 0.0008
Next Token : 3, Posbility: 0.0028
Next Token : 2, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  3;, Posbility: 0.0001
Next Token :  4, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 6, Posbility: 0.0000
Next Token : 5, Posbility: 0.0001
Next Token : 7, Posbility: 0.0001
Next Token : 2, Posbility: 0.0002
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  4;, Posbility: 0.0002
Next Token :  , Posbility: 0.0006
Next Token :  4, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  !, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  10, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  5;, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 9, Posbility: 0.0000
Next Token : 7, Posbility: 0.0001
Next Token : 6, Posbility: 0.0002
Next Token : 5, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ?, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0001
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  10, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  0, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 8, Posbility: 0.0000
Next Token : 5, Posbility: 0.0000
Next Token : 9, Posbility: 0.0000
Next Token : 7, Posbility: 0.0003
Next Token : 6, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ?, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0001
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  10, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 6, Posbility: 0.0000
Next Token : 9, Posbility: 0.0000
Next Token : 8, Posbility: 0.0000
Next Token : 7, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ?, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0001
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 8, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  10, Posbility: 0.0000
Next Token :  8;, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 6, Posbility: 0.0000
Next Token : 7, Posbility: 0.0002
Next Token : 9, Posbility: 0.0003
Next Token : 8, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token :  !, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 9, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0001
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  10;, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  10, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : 6, Posbility: 0.0000
Next Token : 8, Posbility: 0.0001
Next Token : 7, Posbility: 0.0001
Next Token : 9, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ;, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0001
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 10, Posbility: 0.0010
Next Token :  11, Posbility: 0.0017
Next Token :  , Posbility: 0.0028
Next Token :  10;, Posbility: 0.1182
Next Token :  10, Posbility: 0.8750
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :  ..., Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ];, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ], Posbility: 0.0005
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 11, Posbility: 0.0005
Next Token :  10, Posbility: 0.0007
Next Token :  , Posbility: 0.0007
Next Token :  12, Posbility: 0.0007
Next Token :  11, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token : ], Posbility: 0.0059
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ]., Posbility: 0.0000
Next Token : ;, Posbility: 0.0004
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  and, Posbility: 0.0003
Next Token : 
, Posbility: 0.0025
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0125
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token :     , Posbility: 0.0006
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : assert, Posbility: 0.0090
Next Token : print, Posbility: 0.0102
Next Token : (, Posbility: 0.0131
Next Token : Printf, Posbility: 0.0131
Next Token : let, Posbility: 0.9180
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  one, Posbility: 0.0009
Next Token :  check, Posbility: 0.0013
Next Token :  a, Posbility: 0.0084
Next Token :  v, Posbility: 0.0084
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0027
Next Token : x, Posbility: 0.0045
Next Token : t, Posbility: 0.0057
Next Token : q, Posbility: 0.0057
Next Token : w, Posbility: 0.9648
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 0.0005
Next Token : 2, Posbility: 0.0013
Next Token : 1, Posbility: 0.0017
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0001
Next Token :  [], Posbility: 0.0005
Next Token :  , Posbility: 0.0022
Next Token : 
, Posbility: 0.0032
Next Token :  [, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2;, Posbility: 0.0003
Next Token :  0, Posbility: 0.0015
Next Token : 
, Posbility: 0.0022
Next Token :  1, Posbility: 0.0032
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token : ;, Posbility: 0.0001
Next Token : 5, Posbility: 0.0002
Next Token : 3, Posbility: 0.0008
Next Token : 2, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  4, Posbility: 0.0000
Next Token :  3;, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 6, Posbility: 0.0000
Next Token : 7, Posbility: 0.0000
Next Token : 5, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token : 4, Posbility: 0.0000
Next Token :  4;, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  4, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ?, Posbility: 0.0000
Next Token :  !, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  5;, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 9, Posbility: 0.0000
Next Token : 7, Posbility: 0.0000
Next Token : 6, Posbility: 0.0000
Next Token : 5, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  !, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 8, Posbility: 0.0000
Next Token : 9, Posbility: 0.0000
Next Token : 5, Posbility: 0.0000
Next Token : 7, Posbility: 0.0001
Next Token : 6, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ?, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  10, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 6, Posbility: 0.0000
Next Token : 9, Posbility: 0.0000
Next Token : 8, Posbility: 0.0000
Next Token : 7, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ?, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 8, Posbility: 0.0000
Next Token :  10, Posbility: 0.0000
Next Token :  8;, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : 6, Posbility: 0.0000
Next Token : 7, Posbility: 0.0000
Next Token : 9, Posbility: 0.0001
Next Token : 8, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  !, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  10, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 6, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : 7, Posbility: 0.0000
Next Token : 8, Posbility: 0.0000
Next Token : 9, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  11, Posbility: 0.0001
Next Token : 10, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  10;, Posbility: 0.0012
Next Token :  10, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  12, Posbility: 0.0002
Next Token : 11, Posbility: 0.0002
Next Token :  , Posbility: 0.0012
Next Token :  10, Posbility: 0.0015
Next Token :  11, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : ;, Posbility: 0.0009
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ], Posbility: 0.0001
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  10, Posbility: 0.0003
Next Token :  13, Posbility: 0.0003
Next Token :  , Posbility: 0.0004
Next Token :  11, Posbility: 0.0012
Next Token :  12, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token : ], Posbility: 0.0022
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ];, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ]., Posbility: 0.0000
Next Token : ;, Posbility: 0.0003
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0001
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 0.0036
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0007
Next Token : 

, Posbility: 0.0757
Next Token : 
, Posbility: 0.9219
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0002
Next Token : 

, Posbility: 0.0005
Next Token :     , Posbility: 0.0013
Next Token :  , Posbility: 0.0015
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : printf, Posbility: 0.0413
Next Token : (, Posbility: 0.0466
Next Token : print, Posbility: 0.0601
Next Token : Printf, Posbility: 0.1846
Next Token : let, Posbility: 0.4434
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0203
Next Token :  a, Posbility: 0.0229
Next Token :  v, Posbility: 0.0261
Next Token :  even, Posbility: 0.0430
Next Token :  , Posbility: 0.7617
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0090
Next Token : q, Posbility: 0.0116
Next Token : t, Posbility: 0.0149
Next Token : y, Posbility: 0.0278
Next Token : x, Posbility: 0.8125
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0085
Next Token : 1, Posbility: 0.0109
Next Token : x, Posbility: 0.0295
Next Token : s, Posbility: 0.3184
Next Token :  =, Posbility: 0.5938
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0003
Next Token : 
, Posbility: 0.0065
Next Token :  [], Posbility: 0.0065
Next Token :  , Posbility: 0.0177
Next Token :  [, Posbility: 0.9648
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0;, Posbility: 0.0032
Next Token : 
, Posbility: 0.0047
Next Token :  0, Posbility: 0.0393
Next Token :  1, Posbility: 0.0393
Next Token :  , Posbility: 0.8906
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0011
Next Token : ;, Posbility: 0.0015
Next Token : 5, Posbility: 0.0015
Next Token : 3, Posbility: 0.0085
Next Token : 2, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : L, Posbility: 0.0001
Next Token : l, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  *, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : ], Posbility: 0.0003
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  1, Posbility: 0.0005
Next Token :  3;, Posbility: 0.0005
Next Token :  0, Posbility: 0.0006
Next Token :  4, Posbility: 0.0013
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 6, Posbility: 0.0001
Next Token : 7, Posbility: 0.0003
Next Token : 5, Posbility: 0.0003
Next Token : 2, Posbility: 0.0012
Next Token : 3, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0004
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  0, Posbility: 0.0002
Next Token :  4;, Posbility: 0.0007
Next Token :  , Posbility: 0.0015
Next Token :  4, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0005
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  0, Posbility: 0.0002
Next Token :  5;, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : -5, Posbility: 0.0000
Next Token : 7, Posbility: 0.0001
Next Token : 6, Posbility: 0.0002
Next Token : 5, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  !, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0008
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  10, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  0, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -6, Posbility: 0.0000
Next Token : 9, Posbility: 0.0000
Next Token : 5, Posbility: 0.0001
Next Token : 7, Posbility: 0.0003
Next Token : 6, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ;, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0005
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  10, Posbility: 0.0000
Next Token :  12, Posbility: 0.0000
Next Token :  0, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -7, Posbility: 0.0000
Next Token : 6, Posbility: 0.0000
Next Token : 9, Posbility: 0.0000
Next Token : 8, Posbility: 0.0000
Next Token : 7, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ;, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0002
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  12, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  10, Posbility: 0.0000
Next Token :  8;, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 7, Posbility: 0.0001
Next Token : 9, Posbility: 0.0003
Next Token : 8, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  !, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0001
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  11, Posbility: 0.0000
Next Token :  12, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  10, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : 7, Posbility: 0.0000
Next Token : 8, Posbility: 0.0000
Next Token : 9, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0001
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 10, Posbility: 0.0001
Next Token :  11, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token :  10;, Posbility: 0.0006
Next Token :  10, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token :  ..., Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0001
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  1, Posbility: 0.0002
Next Token :  12, Posbility: 0.0005
Next Token :  , Posbility: 0.0007
Next Token :  10, Posbility: 0.0025
Next Token :  11, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : ;, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 12, Posbility: 0.0002
Next Token :  10, Posbility: 0.0003
Next Token :  , Posbility: 0.0007
Next Token :  11, Posbility: 0.0009
Next Token :  12, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : ;, Posbility: 0.0028
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0003
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0004
Next Token :  0, Posbility: 0.0004
Next Token : 13, Posbility: 0.0004
Next Token :  12, Posbility: 0.0005
Next Token :  13, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token : ], Posbility: 0.0015
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ][, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ]., Posbility: 0.0000
Next Token : ;, Posbility: 0.0005
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token :  and, Posbility: 0.0003
Next Token : 
, Posbility: 0.0059
Next Token :  in, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0059
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0006
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0044
Next Token : Printf, Posbility: 0.0044
Next Token : print, Posbility: 0.0064
Next Token : (, Posbility: 0.0082
Next Token : let, Posbility: 0.9531
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0004
Next Token :  v, Posbility: 0.0004
Next Token :  check, Posbility: 0.0004
Next Token :  even, Posbility: 0.0004
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0002
Next Token : w, Posbility: 0.0005
Next Token : x, Posbility: 0.0009
Next Token : z, Posbility: 0.0028
Next Token : y, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : s, Posbility: 0.0003
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token :  [], Posbility: 0.0004
Next Token :  , Posbility: 0.0008
Next Token : 
, Posbility: 0.0032
Next Token :  [, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4, Posbility: 0.0002
Next Token :  0, Posbility: 0.0015
Next Token : 
, Posbility: 0.0019
Next Token :  1, Posbility: 0.0032
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 6, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : 5, Posbility: 0.0002
Next Token : 3, Posbility: 0.0010
Next Token : 2, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  3;, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  4, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 6, Posbility: 0.0000
Next Token : 7, Posbility: 0.0000
Next Token : 5, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  !, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  4;, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  4, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  !, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  5;, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 7, Posbility: 0.0000
Next Token : 6, Posbility: 0.0000
Next Token : 5, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  !, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 8, Posbility: 0.0000
Next Token : 9, Posbility: 0.0000
Next Token : 5, Posbility: 0.0000
Next Token : 7, Posbility: 0.0000
Next Token : 6, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ?, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  12, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -7, Posbility: 0.0000
Next Token : 6, Posbility: 0.0000
Next Token : 9, Posbility: 0.0000
Next Token : 8, Posbility: 0.0000
Next Token : 7, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ?, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  10, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  8;, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 7, Posbility: 0.0000
Next Token : 9, Posbility: 0.0000
Next Token : 8, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token :  !, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  12, Posbility: 0.0000
Next Token :  13, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  10, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 9,, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : 7, Posbility: 0.0000
Next Token : 8, Posbility: 0.0000
Next Token : 9, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 10, Posbility: 0.0000
Next Token :  11, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  10;, Posbility: 0.0001
Next Token :  10, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 11, Posbility: 0.0000
Next Token :  12, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  11, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ?, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  11, Posbility: 0.0000
Next Token : 12, Posbility: 0.0001
Next Token :  13, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  12, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ;, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ], Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  12, Posbility: 0.0001
Next Token :  14, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 13, Posbility: 0.0002
Next Token :  13, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : ;, Posbility: 0.0012
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  15, Posbility: 0.0002
Next Token : 14, Posbility: 0.0003
Next Token : 
, Posbility: 0.0008
Next Token :  13, Posbility: 0.0015
Next Token :  14, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token : ], Posbility: 0.0012
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ]., Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ;, Posbility: 0.0001
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  ..., Posbility: 0.0002
Next Token : 
, Posbility: 0.0052
Next Token :  in, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0032
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0009
Next Token : [, Posbility: 0.0010
Next Token : print, Posbility: 0.0013
Next Token : (, Posbility: 0.0019
Next Token : let, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0002
Next Token :  is, Posbility: 0.0002
Next Token :  result, Posbility: 0.0003
Next Token :  v, Posbility: 0.0003
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : w, Posbility: 0.0004
Next Token : x, Posbility: 0.0005
Next Token : y, Posbility: 0.0009
Next Token : z, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token : 
, Posbility: 0.0036
Next Token :  [, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2;, Posbility: 0.0000
Next Token :  0, Posbility: 0.0001
Next Token :  1, Posbility: 0.0003
Next Token : 
, Posbility: 0.0015
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : 5, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : 3, Posbility: 0.0002
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 2
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 2 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ^, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 2 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  3;, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 2 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 6, Posbility: 0.0000
Next Token : 7, Posbility: 0.0000
Next Token : 5, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 2 ; 3
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 2 ; 3 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 2 ; 3 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 4, Posbility: 0.0000
Next Token :  4;, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  4, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 2 ; 3 ; 4
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 2 ; 3 ; 4 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 2 ; 3 ; 4 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 5, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  5;, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 2 ; 3 ; 4 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 7, Posbility: 0.0000
Next Token : 6, Posbility: 0.0000
Next Token : 5, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 2 ; 3 ; 4 ; 5
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 2 ; 3 ; 4 ; 5 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 8, Posbility: 0.0000
Next Token : 9, Posbility: 0.0000
Next Token : 5, Posbility: 0.0000
Next Token : 7, Posbility: 0.0000
Next Token : 6, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ?, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token : 7, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 7,, Posbility: 0.0000
Next Token : 9, Posbility: 0.0000
Next Token : 6, Posbility: 0.0000
Next Token : 8, Posbility: 0.0000
Next Token : 7, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ?, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 8, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  8;, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 8\, Posbility: 0.0000
Next Token : 8,, Posbility: 0.0000
Next Token : 7, Posbility: 0.0000
Next Token : 9, Posbility: 0.0000
Next Token : 8, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  13, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  10, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : 7, Posbility: 0.0000
Next Token : 9,, Posbility: 0.0000
Next Token : 8, Posbility: 0.0000
Next Token : 9, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether the product of numbers in a list is even or not. *)
let is_even_product xs =
  let rec helper xs acc =
    if List.length xs = 0 then acc
    else if List.length xs = 1 then
      if List.head xs = 0 then
        helper (List.tail xs) (acc + 0)
      else
        helper (List.tail xs) (acc + List.head xs)
    else
      helper (List.tail xs) (acc + List.head xs * List.head xs)
  in
  helper xs 0
let main () =
  let xs = [ 2 ; 3 ; 4 ; 5 ] in
  let ys = [ 2 ; 3 ; 4 ; 5 ; 6 ] in
  let zs = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ] in
  let w = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ] in
  let x = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ] in
  let y = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 ; 11 ; 12 ; 13 ; 14 ] in
  let z = [ 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ;
 score:False


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>