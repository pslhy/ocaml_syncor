code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  max, Posbility: 0.0398
Next Token :  sort, Posbility: 0.0452
Next Token :  large, Posbility: 0.1396
Next Token :  , Posbility: 0.2295
Next Token :  rec, Posbility: 0.3789
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  get, Posbility: 0.0432
Next Token :  find, Posbility: 0.0811
Next Token :  max, Posbility: 0.0811
Next Token :  large, Posbility: 0.0811
Next Token :  , Posbility: 0.4102
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : split, Posbility: 0.0359
Next Token : helper, Posbility: 0.0459
Next Token : nth, Posbility: 0.0520
Next Token : n, Posbility: 0.1816
Next Token : top, Posbility: 0.1816
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0182
Next Token : N, Posbility: 0.0300
Next Token : n, Posbility: 0.0386
Next Token :  , Posbility: 0.0496
Next Token : _, Posbility: 0.7773
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : of, Posbility: 0.0101
Next Token : list, Posbility: 0.0188
Next Token : items, Posbility: 0.0452
Next Token : k, Posbility: 0.1226
Next Token : n, Posbility: 0.7070
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0199
Next Token :  l, Posbility: 0.0542
Next Token :  =, Posbility: 0.0894
Next Token : _, Posbility: 0.3105
Next Token :  , Posbility: 0.4004
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ls, Posbility: 0.0400
Next Token : (, Posbility: 0.0850
Next Token : x, Posbility: 0.1396
Next Token : lst, Posbility: 0.2041
Next Token : n, Posbility: 0.3359
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  items, Posbility: 0.0664
Next Token :  =, Posbility: 0.1240
Next Token :  list, Posbility: 0.1240
Next Token :  l, Posbility: 0.2314
Next Token :  , Posbility: 0.2969
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0217
Next Token : (, Posbility: 0.0247
Next Token : ls, Posbility: 0.1104
Next Token : x, Posbility: 0.3008
Next Token : lst, Posbility: 0.3398
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0038
Next Token :  l, Posbility: 0.0043
Next Token :  , Posbility: 0.0151
Next Token :  acc, Posbility: 0.0219
Next Token :  =, Posbility: 0.9297
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0034
Next Token :  {, Posbility: 0.0039
Next Token :  match, Posbility: 0.0537
Next Token :  , Posbility: 0.0884
Next Token : 
, Posbility: 0.8398
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0042
Next Token :    , Posbility: 0.0102
Next Token : 	, Posbility: 0.0190
Next Token :     , Posbility: 0.1406
Next Token :   , Posbility: 0.8086
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0060
Next Token : List, Posbility: 0.0211
Next Token : let, Posbility: 0.1377
Next Token : if, Posbility: 0.3301
Next Token : match, Posbility: 0.4785
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  N, Posbility: 0.0009
Next Token :  !, Posbility: 0.0011
Next Token : 
, Posbility: 0.0017
Next Token :  String, Posbility: 0.0157
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Array, Posbility: 0.0016
Next Token : (, Posbility: 0.0122
Next Token : n, Posbility: 0.1484
Next Token : List, Posbility: 0.1484
Next Token : lst, Posbility: 0.6641
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0009
Next Token :  @, Posbility: 0.0009
Next Token :  , Posbility: 0.0009
Next Token :  =, Posbility: 0.0009
Next Token :  with, Posbility: 0.9922
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0019
Next Token :  , Posbility: 0.0045
Next Token :  [, Posbility: 0.0051
Next Token :  [], Posbility: 0.0200
Next Token : 
, Posbility: 0.9648
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0006
Next Token :       , Posbility: 0.0020
Next Token :    , Posbility: 0.0020
Next Token :     , Posbility: 0.0947
Next Token :   , Posbility: 0.8984
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : [, Posbility: 0.0084
Next Token : [], Posbility: 0.0227
Next Token : |, Posbility: 0.9688
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  null, Posbility: 0.0014
Next Token :  nil, Posbility: 0.0083
Next Token :  [, Posbility: 0.0106
Next Token :  , Posbility: 0.0176
Next Token :  [], Posbility: 0.9570
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0039
Next Token :  =>, Posbility: 0.0050
Next Token :  when, Posbility: 0.0050
Next Token :  |, Posbility: 0.0065
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token : â†’, Posbility: 0.0003
Next Token : ::, Posbility: 0.0015
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  nil, Posbility: 0.0021
Next Token :  [, Posbility: 0.0057
Next Token : 
, Posbility: 0.0095
Next Token :  , Posbility: 0.1152
Next Token :  [], Posbility: 0.8516
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0013
Next Token :   , Posbility: 0.0031
Next Token :  |, Posbility: 0.0051
Next Token :  , Posbility: 0.0138
Next Token : 
, Posbility: 0.9688
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  
 score:False
Error type: noerr
---------------------------
Next Token : [, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : //, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0052
Next Token :  [], Posbility: 0.0109
Next Token :  l, Posbility: 0.0109
Next Token :  [, Posbility: 0.1709
Next Token :  , Posbility: 0.7656
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0549
Next Token : h, Posbility: 0.0708
Next Token : _, Posbility: 0.1167
Next Token : hd, Posbility: 0.1924
Next Token : x, Posbility: 0.4609
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0017
Next Token : :, Posbility: 0.0109
Next Token : s, Posbility: 0.0294
Next Token : ::, Posbility: 0.3594
Next Token :  , Posbility: 0.5938
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0002
Next Token : if, Posbility: 0.0003
Next Token : ->, Posbility: 0.0013
Next Token : :, Posbility: 0.0028
Next Token : ::, Posbility: 0.9961
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  list, Posbility: 0.0017
Next Token :  [], Posbility: 0.0041
Next Token :  l, Posbility: 0.0086
Next Token :  rest, Posbility: 0.0928
Next Token :  , Posbility: 0.8789
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : y, Posbility: 0.0186
Next Token : lst, Posbility: 0.0238
Next Token : tail, Posbility: 0.0305
Next Token : _, Posbility: 0.0830
Next Token : x, Posbility: 0.7891
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0007
Next Token :  , Posbility: 0.0015
Next Token : _, Posbility: 0.0019
Next Token : ', Posbility: 0.0139
Next Token : s, Posbility: 0.9766
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  @, Posbility: 0.0013
Next Token :   , Posbility: 0.0019
Next Token :  =>, Posbility: 0.0028
Next Token :  when, Posbility: 0.1177
Next Token :  , Posbility: 0.8672
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0001
Next Token : -, Posbility: 0.0002
Next Token : if, Posbility: 0.0058
Next Token : ::, Posbility: 0.0201
Next Token : ->, Posbility: 0.9727
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0044
Next Token :  [, Posbility: 0.0044
Next Token :  match, Posbility: 0.0154
Next Token :  , Posbility: 0.3086
Next Token : 
, Posbility: 0.6562
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0039
Next Token :   , Posbility: 0.0094
Next Token :      , Posbility: 0.0121
Next Token :     , Posbility: 0.4531
Next Token :       , Posbility: 0.5156
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0178
Next Token : top, Posbility: 0.0293
Next Token : match, Posbility: 0.0903
Next Token : let, Posbility: 0.3574
Next Token : if, Posbility: 0.4590
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0030
Next Token :  Integer, Posbility: 0.0038
Next Token :  int, Posbility: 0.0049
Next Token :  String, Posbility: 0.0282
Next Token :  , Posbility: 0.9336
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0152
Next Token : (, Posbility: 0.0771
Next Token : x, Posbility: 0.1123
Next Token : List, Posbility: 0.1445
Next Token : n, Posbility: 0.5703
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0164
Next Token :  >=, Posbility: 0.0210
Next Token :  , Posbility: 0.1553
Next Token :  <=, Posbility: 0.2559
Next Token :  =, Posbility: 0.5391
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token :  [], Posbility: 0.0007
Next Token :  , Posbility: 0.0132
Next Token :  1, Posbility: 0.2637
Next Token :  0, Posbility: 0.7188
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0129
Next Token : 
, Posbility: 0.0212
Next Token :  ||, Posbility: 0.0212
Next Token :  with, Posbility: 0.0352
Next Token :  then, Posbility: 0.9023
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0011
Next Token :  [, Posbility: 0.0369
Next Token :  [], Posbility: 0.1660
Next Token : 
, Posbility: 0.2129
Next Token :  , Posbility: 0.5781
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0045
Next Token : 
, Posbility: 0.0157
Next Token : top, Posbility: 0.0332
Next Token : lst, Posbility: 0.0703
Next Token : x, Posbility: 0.8555
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then x
 score:False
Error type: noerr
---------------------------
Next Token :  else, Posbility: 0.0057
Next Token : ::, Posbility: 0.0065
Next Token : 
, Posbility: 0.1152
Next Token :  , Posbility: 0.1152
Next Token : s, Posbility: 0.7500
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0028
Next Token : ;, Posbility: 0.0032
Next Token :  , Posbility: 0.0302
Next Token :  else, Posbility: 0.1729
Next Token : 
, Posbility: 0.7773
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs

 score:False
Error type: noerr
---------------------------
Next Token :        , Posbility: 0.0006
Next Token :      , Posbility: 0.0010
Next Token :     , Posbility: 0.0012
Next Token :         , Posbility: 0.0015
Next Token :       , Posbility: 0.9922
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      
 score:False
Error type: noerr
---------------------------
Next Token : els, Posbility: 0.0001
Next Token : let, Posbility: 0.0003
Next Token : |, Posbility: 0.0004
Next Token : elif, Posbility: 0.0022
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0009
Next Token :  match, Posbility: 0.0039
Next Token :  {, Posbility: 0.0044
Next Token : 
, Posbility: 0.2412
Next Token :  , Posbility: 0.7461
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0143
Next Token : let, Posbility: 0.0236
Next Token : x, Posbility: 0.0388
Next Token : top, Posbility: 0.1055
Next Token : if, Posbility: 0.7812
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0009
Next Token :  Integer, Posbility: 0.0012
Next Token :  String, Posbility: 0.0015
Next Token :  not, Posbility: 0.0019
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0055
Next Token : List, Posbility: 0.0168
Next Token : (, Posbility: 0.0245
Next Token : x, Posbility: 0.1099
Next Token : n, Posbility: 0.8125
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0061
Next Token :  >=, Posbility: 0.0214
Next Token :  <=, Posbility: 0.0747
Next Token :  =, Posbility: 0.3359
Next Token :  , Posbility: 0.5508
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : /, Posbility: 0.0004
Next Token : â‰¤, Posbility: 0.0005
Next Token : -, Posbility: 0.0212
Next Token : <, Posbility: 0.4277
Next Token : >, Posbility: 0.5508
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n >
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0063
Next Token :  |, Posbility: 0.0105
Next Token :  1, Posbility: 0.0469
Next Token :  , Posbility: 0.3477
Next Token :  0, Posbility: 0.5703
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0036
Next Token : 
, Posbility: 0.0085
Next Token :  and, Posbility: 0.0232
Next Token :  &&, Posbility: 0.0918
Next Token :  then, Posbility: 0.8711
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0007
Next Token :   , Posbility: 0.0017
Next Token :  [, Posbility: 0.0084
Next Token : 
, Posbility: 0.3164
Next Token :  , Posbility: 0.6680
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0211
Next Token : (, Posbility: 0.0349
Next Token : if, Posbility: 0.0349
Next Token : top, Posbility: 0.4238
Next Token : x, Posbility: 0.4238
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x
 score:False
Error type: noerr
---------------------------
Next Token :  |, Posbility: 0.0045
Next Token : 
, Posbility: 0.0052
Next Token : ::, Posbility: 0.0140
Next Token : s, Posbility: 0.1035
Next Token :  , Posbility: 0.8672
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x 
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token : ^, Posbility: 0.0006
Next Token : @@, Posbility: 0.0007
Next Token : :, Posbility: 0.0017
Next Token : ::, Posbility: 0.9961
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token :   , Posbility: 0.0003
Next Token :  rec, Posbility: 0.0006
Next Token : 
, Posbility: 0.0009
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Top, Posbility: 0.0008
Next Token : n, Posbility: 0.0023
Next Token : x, Posbility: 0.0171
Next Token : (, Posbility: 0.0464
Next Token : top, Posbility: 0.9297
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top
 score:False
Error type: noerr
---------------------------
Next Token : N, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_
 score:False
Error type: noerr
---------------------------
Next Token : list, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n
 score:False
Error type: noerr
---------------------------
Next Token :  ~, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0007
Next Token :  (1, Posbility: 0.0038
Next Token : (, Posbility: 0.0598
Next Token :  , Posbility: 0.9336
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n 
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : -, Posbility: 0.0001
Next Token : (--, Posbility: 0.0003
Next Token : n, Posbility: 0.0757
Next Token : (, Posbility: 0.9219
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : -, Posbility: 0.0001
Next Token : num, Posbility: 0.0001
Next Token : List, Posbility: 0.0002
Next Token :  , Posbility: 0.0005
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1, Posbility: 0.0009
Next Token :  â€“, Posbility: 0.0020
Next Token :  -1), Posbility: 0.0055
Next Token : -1), Posbility: 0.1807
Next Token :  , Posbility: 0.8086
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -2, Posbility: 0.0000
Next Token : -1), Posbility: 0.0000
Next Token : minus, Posbility: 0.0000
Next Token : âˆ’, Posbility: 0.0017
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2), Posbility: 0.0002
Next Token :   , Posbility: 0.0003
Next Token :  , Posbility: 0.0009
Next Token :  1, Posbility: 0.0009
Next Token :  1), Posbility: 0.9961
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1)
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) 
 score:False
Error type: noerr
---------------------------
Next Token : n, Posbility: 0.0001
Next Token : y, Posbility: 0.0001
Next Token : lst, Posbility: 0.0066
Next Token : (, Posbility: 0.0109
Next Token : x, Posbility: 0.9805
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) x
 score:False
Error type: noerr
---------------------------
Next Token : ', Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0009
Next Token : 

, Posbility: 0.0046
Next Token :  , Posbility: 0.0067
Next Token :  else, Posbility: 0.1050
Next Token : 
, Posbility: 0.8789
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs

 score:False
Error type: noerr
---------------------------
Next Token :      , Posbility: 0.0002
Next Token :    , Posbility: 0.0002
Next Token :   , Posbility: 0.0032
Next Token :     , Posbility: 0.0041
Next Token :       , Posbility: 0.9922
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      
 score:False
Error type: noerr
---------------------------
Next Token : elif, Posbility: 0.0001
Next Token : //, Posbility: 0.0001
Next Token : end, Posbility: 0.0010
Next Token : |, Posbility: 0.0097
Next Token : else, Posbility: 0.9883
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  error, Posbility: 0.0092
Next Token : 
, Posbility: 0.0413
Next Token :  fail, Posbility: 0.0413
Next Token :  [], Posbility: 0.0530
Next Token :  , Posbility: 0.8281
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0427
Next Token : assert, Posbility: 0.0801
Next Token : raise, Posbility: 0.1318
Next Token : x, Posbility: 0.1924
Next Token : top, Posbility: 0.4062
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top_
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top_n
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0019
Next Token :  (1, Posbility: 0.0031
Next Token :  ((, Posbility: 0.0031
Next Token : (, Posbility: 0.0085
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top_n 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0009
Next Token : (0), Posbility: 0.0009
Next Token : 2, Posbility: 0.0015
Next Token : n, Posbility: 0.3750
Next Token : (, Posbility: 0.6172
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top_n (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : len, Posbility: 0.0031
Next Token : -, Posbility: 0.0044
Next Token : 0, Posbility: 0.0106
Next Token : List, Posbility: 0.0106
Next Token : n, Posbility: 0.9570
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top_n (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ), Posbility: 0.0035
Next Token : -1), Posbility: 0.0035
Next Token : +1), Posbility: 0.0096
Next Token :  , Posbility: 0.1167
Next Token :  +, Posbility: 0.8633
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top_n (n +
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  len, Posbility: 0.0003
Next Token :  2), Posbility: 0.0009
Next Token :  1, Posbility: 0.0025
Next Token :  , Posbility: 0.0067
Next Token :  1), Posbility: 0.9883
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top_n (n + 1)
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0003
Next Token :  [], Posbility: 0.0005
Next Token : 

, Posbility: 0.0009
Next Token : 
, Posbility: 0.0059
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top_n (n + 1) 
 score:False
Error type: noerr
---------------------------
Next Token : n, Posbility: 0.0001
Next Token : top, Posbility: 0.0009
Next Token : (, Posbility: 0.0176
Next Token : lst, Posbility: 0.0176
Next Token : x, Posbility: 0.9609
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top_n (n + 1) x
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : 

, Posbility: 0.0010
Next Token : 
, Posbility: 0.0032
Next Token :  , Posbility: 0.0036
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top_n (n + 1) xs
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0075
Next Token : ), Posbility: 0.0159
Next Token :  , Posbility: 0.0261
Next Token : 

, Posbility: 0.2471
Next Token : 
, Posbility: 0.6719
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top_n (n + 1) xs

 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0118
Next Token :       , Posbility: 0.0386
Next Token :     , Posbility: 0.0410
Next Token : let, Posbility: 0.0723
Next Token :   , Posbility: 0.7734
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top_n (n + 1) xs
  
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0040
Next Token : in, Posbility: 0.0042
Next Token : end, Posbility: 0.0058
Next Token : ;, Posbility: 0.2598
Next Token : |, Posbility: 0.7070
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top_n (n + 1) xs
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  acc, Posbility: 0.0035
Next Token :  ?, Posbility: 0.0096
Next Token :  [, Posbility: 0.0157
Next Token :  [], Posbility: 0.0708
Next Token :  , Posbility: 0.8633
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top_n (n + 1) xs
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0056
Next Token : head, Posbility: 0.0071
Next Token : y, Posbility: 0.0071
Next Token : x, Posbility: 0.4414
Next Token : _, Posbility: 0.5000
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top_n (n + 1) xs
  | _
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0011
Next Token :  =>, Posbility: 0.0021
Next Token : ::, Posbility: 0.0040
Next Token : x, Posbility: 0.0045
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top_n (n + 1) xs
  | _ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0016
Next Token : if, Posbility: 0.0034
Next Token : x, Posbility: 0.0043
Next Token : ::, Posbility: 0.1621
Next Token : ->, Posbility: 0.8242
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top_n (n + 1) xs
  | _ ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  error, Posbility: 0.0374
Next Token :  [], Posbility: 0.0374
Next Token : 
, Posbility: 0.1299
Next Token :  fail, Posbility: 0.1670
Next Token :  , Posbility: 0.5820
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top_n (n + 1) xs
  | _ -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0227
Next Token : Printf, Posbility: 0.0258
Next Token : raise, Posbility: 0.1680
Next Token : assert, Posbility: 0.2441
Next Token : top, Posbility: 0.3145
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top_n (n + 1) xs
  | _ -> top
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top_n (n + 1) xs
  | _ -> top_
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : error, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top_n (n + 1) xs
  | _ -> top_n
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0031
Next Token :  (1, Posbility: 0.0035
Next Token : (, Posbility: 0.0058
Next Token :  ((, Posbility: 0.0066
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top_n (n + 1) xs
  | _ -> top_n 
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0006
Next Token : (0), Posbility: 0.0009
Next Token : 2, Posbility: 0.0015
Next Token : n, Posbility: 0.3750
Next Token : (, Posbility: 0.6172
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top_n (n + 1) xs
  | _ -> top_n (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  , Posbility: 0.0009
Next Token : 2, Posbility: 0.0013
Next Token : Math, Posbility: 0.0019
Next Token : 0, Posbility: 0.0036
Next Token : n, Posbility: 0.9844
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top_n (n + 1) xs
  | _ -> top_n (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : +1), Posbility: 0.0033
Next Token : ), Posbility: 0.0089
Next Token : -1), Posbility: 0.0089
Next Token :  +, Posbility: 0.4883
Next Token :  , Posbility: 0.4883
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top_n (n + 1) xs
  | _ -> top_n (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : >, Posbility: 0.0001
Next Token : ^, Posbility: 0.0002
Next Token : /, Posbility: 0.0004
Next Token : +1), Posbility: 0.0009
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top_n (n + 1) xs
  | _ -> top_n (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  3), Posbility: 0.0001
Next Token :  1, Posbility: 0.0003
Next Token :  , Posbility: 0.0009
Next Token :  2), Posbility: 0.0025
Next Token :  1), Posbility: 0.9961
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top_n (n + 1) xs
  | _ -> top_n (n - 1)
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0035
Next Token : 

, Posbility: 0.0045
Next Token : 
, Posbility: 0.0065
Next Token :  [], Posbility: 0.1299
Next Token :  , Posbility: 0.8516
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top_n (n + 1) xs
  | _ -> top_n (n - 1) 
 score:False
Error type: noerr
---------------------------
Next Token : top, Posbility: 0.0009
Next Token : ([], Posbility: 0.0024
Next Token : (, Posbility: 0.0175
Next Token : x, Posbility: 0.0175
Next Token : lst, Posbility: 0.9531
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top_n (n + 1) xs
  | _ -> top_n (n - 1) lst
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0050
Next Token : ), Posbility: 0.0135
Next Token :  , Posbility: 0.0325
Next Token : 
, Posbility: 0.3477
Next Token : 

, Posbility: 0.5742
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec top_n n lst =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then x :: top_n (n - 1) xs
      else top_n (n + 1) xs
  | _ -> top_n (n - 1) lst


 score:True
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END and No Syntax Error--------

processing time : :46.61901879310608

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>