code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sort, Posbility: 0.0386
Next Token :  get, Posbility: 0.0437
Next Token :  first, Posbility: 0.1348
Next Token :  , Posbility: 0.2217
Next Token :  rec, Posbility: 0.3223
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  get, Posbility: 0.0430
Next Token :  compare, Posbility: 0.0486
Next Token :  first, Posbility: 0.0552
Next Token :  find, Posbility: 0.1699
Next Token :  , Posbility: 0.3594
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fold, Posbility: 0.0153
Next Token : select, Posbility: 0.0173
Next Token : f, Posbility: 0.0251
Next Token : smallest, Posbility: 0.1855
Next Token : min, Posbility: 0.4453
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0121
Next Token :  =, Posbility: 0.0227
Next Token : 2, Posbility: 0.0425
Next Token :  , Posbility: 0.0698
Next Token : _, Posbility: 0.7539
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : tuple, Posbility: 0.0266
Next Token : 2, Posbility: 0.0342
Next Token : of, Posbility: 0.0564
Next Token : by, Posbility: 0.1191
Next Token : second, Posbility: 0.4707
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0117
Next Token :  a, Posbility: 0.0170
Next Token :  =, Posbility: 0.1826
Next Token : _, Posbility: 0.2070
Next Token :  , Posbility: 0.4961
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ls, Posbility: 0.0496
Next Token : t, Posbility: 0.0928
Next Token : (, Posbility: 0.1533
Next Token : lst, Posbility: 0.1533
Next Token : x, Posbility: 0.1738
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  acc, Posbility: 0.0017
Next Token :  i, Posbility: 0.0036
Next Token :  , Posbility: 0.0645
Next Token :  =, Posbility: 0.3691
Next Token : s, Posbility: 0.5391
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0014
Next Token : 
, Posbility: 0.0016
Next Token :  acc, Posbility: 0.0023
Next Token :  , Posbility: 0.0522
Next Token :  =, Posbility: 0.9297
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fun, Posbility: 0.0071
Next Token :  function, Posbility: 0.0194
Next Token :  match, Posbility: 0.0596
Next Token :  , Posbility: 0.0767
Next Token : 
, Posbility: 0.8242
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0036
Next Token :    , Posbility: 0.0076
Next Token : 	, Posbility: 0.0098
Next Token :     , Posbility: 0.0928
Next Token :   , Posbility: 0.8789
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0051
Next Token : List, Posbility: 0.0178
Next Token : if, Posbility: 0.0903
Next Token : let, Posbility: 0.1914
Next Token : match, Posbility: 0.6680
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0005
Next Token :  ?, Posbility: 0.0006
Next Token :  !, Posbility: 0.0009
Next Token :  String, Posbility: 0.0031
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Array, Posbility: 0.0035
Next Token : Seq, Posbility: 0.0051
Next Token : (, Posbility: 0.0058
Next Token : List, Posbility: 0.1162
Next Token : x, Posbility: 0.8594
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  with, Posbility: 0.0008
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0002
Next Token :  @, Posbility: 0.0003
Next Token :  , Posbility: 0.0005
Next Token : 
, Posbility: 0.0009
Next Token :  with, Posbility: 0.9961
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0016
Next Token :  , Posbility: 0.0038
Next Token :  [, Posbility: 0.0056
Next Token :  [], Posbility: 0.0466
Next Token : 
, Posbility: 0.9375
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0004
Next Token :       , Posbility: 0.0011
Next Token :    , Posbility: 0.0016
Next Token :     , Posbility: 0.0674
Next Token :   , Posbility: 0.9297
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([], Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : [, Posbility: 0.0154
Next Token : [], Posbility: 0.0288
Next Token : |, Posbility: 0.9531
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0010
Next Token :  nil, Posbility: 0.0064
Next Token :  , Posbility: 0.0173
Next Token :  [, Posbility: 0.0223
Next Token :  [], Posbility: 0.9492
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0024
Next Token :    , Posbility: 0.0040
Next Token :  |, Posbility: 0.0040
Next Token :  =>, Posbility: 0.0107
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : -, Posbility: 0.0001
Next Token : â†’, Posbility: 0.0003
Next Token : ::, Posbility: 0.0004
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0378
Next Token :  None, Posbility: 0.1025
Next Token :  error, Posbility: 0.1689
Next Token :  fail, Posbility: 0.1689
Next Token :  , Posbility: 0.4609
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0308
Next Token : (, Posbility: 0.0393
Next Token : panic, Posbility: 0.0574
Next Token : assert, Posbility: 0.1069
Next Token : raise, Posbility: 0.5430
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise
 score:False
Error type: noerr
---------------------------
Next Token : not, Posbility: 0.0118
Next Token : _, Posbility: 0.0221
Next Token :  ", Posbility: 0.0469
Next Token :  , Posbility: 0.2383
Next Token :  Not, Posbility: 0.6484
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : In, Posbility: 0.0002
Next Token : Defined, Posbility: 0.0002
Next Token : found, Posbility: 0.0003
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_
 score:False
Error type: noerr
---------------------------
Next Token : a, Posbility: 0.0046
Next Token : possible, Posbility: 0.0046
Next Token : provided, Posbility: 0.0060
Next Token : reached, Posbility: 0.0143
Next Token : found, Posbility: 0.8867
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
 score:False
Error type: noerr
---------------------------
Next Token : (), Posbility: 0.0327
Next Token : _, Posbility: 0.0420
Next Token :  ", Posbility: 0.0889
Next Token :  , Posbility: 0.1006
Next Token : 
, Posbility: 0.6562
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found

 score:False
Error type: noerr
---------------------------
Next Token :           , Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :       , Posbility: 0.0003
Next Token :     , Posbility: 0.0003
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  
 score:False
Error type: noerr
---------------------------
Next Token : |[, Posbility: 0.0001
Next Token : [, Posbility: 0.0001
Next Token : //, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0063
Next Token :  [], Posbility: 0.0063
Next Token :  [{, Posbility: 0.0117
Next Token :  [, Posbility: 0.3867
Next Token :  , Posbility: 0.5625
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([, Posbility: 0.0415
Next Token : hd, Posbility: 0.0469
Next Token : _, Posbility: 0.1855
Next Token : x, Posbility: 0.2695
Next Token : (, Posbility: 0.3457
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : y, Posbility: 0.0437
Next Token : a, Posbility: 0.0635
Next Token : hd, Posbility: 0.0723
Next Token : _, Posbility: 0.2520
Next Token : x, Posbility: 0.2520
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : :, Posbility: 0.0159
Next Token : 0,, Posbility: 0.0204
Next Token : 1,, Posbility: 0.0295
Next Token :  , Posbility: 0.1030
Next Token : ,, Posbility: 0.7617
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x,
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  [, Posbility: 0.0226
Next Token :  second, Posbility: 0.0291
Next Token : y, Posbility: 0.0374
Next Token : _, Posbility: 0.0698
Next Token :  , Posbility: 0.7500
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : ()), Posbility: 0.0398
Next Token : x, Posbility: 0.0510
Next Token : []), Posbility: 0.0742
Next Token : y, Posbility: 0.2930
Next Token : _, Posbility: 0.4844
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ),, Posbility: 0.0031
Next Token :  , Posbility: 0.0067
Next Token : y, Posbility: 0.0067
Next Token : ,, Posbility: 0.0918
Next Token : ), Posbility: 0.8711
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  as, Posbility: 0.0023
Next Token :  |, Posbility: 0.0056
Next Token : ::, Posbility: 0.0134
Next Token :  when, Posbility: 0.0284
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0002
Next Token : â†’, Posbility: 0.0004
Next Token : if, Posbility: 0.0474
Next Token : ::, Posbility: 0.2119
Next Token : ->, Posbility: 0.7383
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0022
Next Token :  {, Posbility: 0.0146
Next Token :  match, Posbility: 0.0398
Next Token : 
, Posbility: 0.3770
Next Token :  , Posbility: 0.5508
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0439
Next Token : (, Posbility: 0.0640
Next Token : if, Posbility: 0.0820
Next Token : min, Posbility: 0.1191
Next Token : x, Posbility: 0.6055
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
 score:False
Error type: noerr
---------------------------
Next Token :  |, Posbility: 0.0166
Next Token :  , Posbility: 0.0275
Next Token : s, Posbility: 0.0398
Next Token : 

, Posbility: 0.3340
Next Token : 
, Posbility: 0.5508
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x

 score:False
Error type: noerr
---------------------------
Next Token :     , Posbility: 0.0152
Next Token : (, Posbility: 0.0195
Next Token : end, Posbility: 0.0530
Next Token : let, Posbility: 0.0640
Next Token :   , Posbility: 0.7305
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  
 score:False
Error type: noerr
---------------------------
Next Token : [, Posbility: 0.0001
Next Token : ;, Posbility: 0.0002
Next Token : let, Posbility: 0.0003
Next Token : (, Posbility: 0.0004
Next Token : |, Posbility: 0.9961
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  tuple, Posbility: 0.0011
Next Token :  pair, Posbility: 0.0021
Next Token :  ((, Posbility: 0.0027
Next Token :  [, Posbility: 0.0096
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0042
Next Token : ([, Posbility: 0.0042
Next Token : _, Posbility: 0.0352
Next Token : x, Posbility: 0.1396
Next Token : (, Posbility: 0.8008
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : first, Posbility: 0.0074
Next Token : a, Posbility: 0.0121
Next Token : y, Posbility: 0.0425
Next Token : _, Posbility: 0.4023
Next Token : x, Posbility: 0.5156
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0018
Next Token : _, Posbility: 0.0103
Next Token : 0,, Posbility: 0.0170
Next Token : 1,, Posbility: 0.0359
Next Token : ,, Posbility: 0.9258
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x,
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  rest, Posbility: 0.0038
Next Token :  acc, Posbility: 0.0038
Next Token : y, Posbility: 0.0055
Next Token :  second, Posbility: 0.0317
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : (, Posbility: 0.0410
Next Token : s, Posbility: 0.0464
Next Token : _, Posbility: 0.0767
Next Token : x, Posbility: 0.0767
Next Token : y, Posbility: 0.7266
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  @, Posbility: 0.0030
Next Token :  , Posbility: 0.0038
Next Token : s, Posbility: 0.0220
Next Token : ,, Posbility: 0.0282
Next Token : ), Posbility: 0.9336
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0013
Next Token : ::, Posbility: 0.0044
Next Token :  =>, Posbility: 0.0044
Next Token :  when, Posbility: 0.0369
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : >, Posbility: 0.0001
Next Token : <, Posbility: 0.0001
Next Token : ::, Posbility: 0.0049
Next Token : if, Posbility: 0.0598
Next Token : ->, Posbility: 0.9336
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0013
Next Token :  {, Posbility: 0.0084
Next Token :  match, Posbility: 0.0376
Next Token :  , Posbility: 0.3555
Next Token : 
, Posbility: 0.5859
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0063
Next Token :    , Posbility: 0.0072
Next Token :   , Posbility: 0.0366
Next Token :       , Posbility: 0.1128
Next Token :     , Posbility: 0.8320
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : min, Posbility: 0.0178
Next Token : try, Posbility: 0.0203
Next Token : match, Posbility: 0.1924
Next Token : let, Posbility: 0.3164
Next Token : if, Posbility: 0.4062
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0034
Next Token :  String, Posbility: 0.0056
Next Token :  not, Posbility: 0.0134
Next Token :  compare, Posbility: 0.0134
Next Token :  , Posbility: 0.9375
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Cmp, Posbility: 0.0073
Next Token : (, Posbility: 0.0540
Next Token : Compare, Posbility: 0.0540
Next Token : x, Posbility: 0.1006
Next Token : y, Posbility: 0.7422
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0017
Next Token :  >=, Posbility: 0.0162
Next Token :  =, Posbility: 0.0342
Next Token :  <=, Posbility: 0.0564
Next Token :  , Posbility: 0.8828
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : <?, Posbility: 0.0000
Next Token : lt, Posbility: 0.0002
Next Token : â‰¤, Posbility: 0.0004
Next Token : >, Posbility: 0.0474
Next Token : <, Posbility: 0.9531
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  get, Posbility: 0.0018
Next Token :  second, Posbility: 0.0055
Next Token :  0, Posbility: 0.0071
Next Token : >, Posbility: 0.0408
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ref, Posbility: 0.0020
Next Token : y, Posbility: 0.0250
Next Token : (, Posbility: 0.0530
Next Token : min, Posbility: 0.3906
Next Token : x, Posbility: 0.5039
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [2], Posbility: 0.0155
Next Token : [1], Posbility: 0.0291
Next Token : ., Posbility: 0.1299
Next Token : s, Posbility: 0.1299
Next Token :  then, Posbility: 0.6602
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0003
Next Token :  Some, Posbility: 0.0019
Next Token :  {, Posbility: 0.0031
Next Token : 
, Posbility: 0.2422
Next Token :  , Posbility: 0.7461
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0046
Next Token : (, Posbility: 0.0125
Next Token : y, Posbility: 0.0339
Next Token : x, Posbility: 0.2500
Next Token : min, Posbility: 0.6797
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  second, Posbility: 0.0001
Next Token :  , Posbility: 0.0017
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_
 score:False
Error type: noerr
---------------------------
Next Token : secondary, Posbility: 0.0001
Next Token : sec, Posbility: 0.0001
Next Token : third, Posbility: 0.0002
Next Token : first, Posbility: 0.0006
Next Token : second, Posbility: 1.0000
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second
 score:False
Error type: noerr
---------------------------
Next Token :  ~, Posbility: 0.0023
Next Token :  ((, Posbility: 0.0030
Next Token : (, Posbility: 0.0132
Next Token :  [, Posbility: 0.0461
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0003
Next Token : ([, Posbility: 0.0035
Next Token : y, Posbility: 0.0096
Next Token : x, Posbility: 0.1172
Next Token : (, Posbility: 0.8672
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : y, Posbility: 0.0045
Next Token : Rest, Posbility: 0.0045
Next Token : tail, Posbility: 0.0109
Next Token : List, Posbility: 0.0554
Next Token : x, Posbility: 0.8672
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : :, Posbility: 0.0267
Next Token : ::, Posbility: 0.0825
Next Token :  , Posbility: 0.1357
Next Token : ,, Posbility: 0.1357
Next Token : s, Posbility: 0.6094
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  [, Posbility: 0.0041
Next Token : ., Posbility: 0.0046
Next Token : @, Posbility: 0.0161
Next Token :  @, Posbility: 0.1729
Next Token :  , Posbility: 0.7773
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ^, Posbility: 0.0135
Next Token : x, Posbility: 0.0197
Next Token : ::, Posbility: 0.0287
Next Token : :, Posbility: 0.3945
Next Token : -, Posbility: 0.5078
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [{, Posbility: 0.0040
Next Token : @, Posbility: 0.0051
Next Token :  1), Posbility: 0.0084
Next Token :  , Posbility: 0.1025
Next Token :  [, Posbility: 0.8594
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs - [
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0049
Next Token :  [, Posbility: 0.0049
Next Token : x, Posbility: 0.2070
Next Token :  , Posbility: 0.3418
Next Token : (, Posbility: 0.4375
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs - [(
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : _, Posbility: 0.0003
Next Token : (, Posbility: 0.0014
Next Token :  , Posbility: 0.0023
Next Token : y, Posbility: 0.0757
Next Token : x, Posbility: 0.9180
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs - [(x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : s, Posbility: 0.0002
Next Token : ',, Posbility: 0.0002
Next Token :  +, Posbility: 0.0003
Next Token :  , Posbility: 0.0017
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs - [(x,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ), Posbility: 0.0006
Next Token : x, Posbility: 0.0007
Next Token :  None, Posbility: 0.0009
Next Token : y, Posbility: 0.0471
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs - [(x, 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0003
Next Token : -, Posbility: 0.0003
Next Token : _, Posbility: 0.0063
Next Token : x, Posbility: 0.0469
Next Token : y, Posbility: 0.9453
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs - [(x, y
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ),, Posbility: 0.0009
Next Token :  , Posbility: 0.0021
Next Token : )], Posbility: 0.0095
Next Token : );, Posbility: 0.0227
Next Token : ), Posbility: 0.9648
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs - [(x, y)
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ],, Posbility: 0.0004
Next Token :  |, Posbility: 0.0007
Next Token :  , Posbility: 0.0009
Next Token : ]);, Posbility: 0.1475
Next Token : ]), Posbility: 0.8477
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs - [(x, y)])
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0009
Next Token :  |, Posbility: 0.0027
Next Token :  , Posbility: 0.0045
Next Token :  else, Posbility: 0.3164
Next Token : 
, Posbility: 0.6719
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs - [(x, y)])

 score:False
Error type: noerr
---------------------------
Next Token :           , Posbility: 0.0003
Next Token :         , Posbility: 0.0007
Next Token :       , Posbility: 0.0007
Next Token :   , Posbility: 0.0085
Next Token :     , Posbility: 0.9883
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs - [(x, y)])
    
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : //, Posbility: 0.0000
Next Token : |, Posbility: 0.0003
Next Token : elif, Posbility: 0.0010
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs - [(x, y)])
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0019
Next Token :   , Posbility: 0.0027
Next Token :  {, Posbility: 0.0031
Next Token : 
, Posbility: 0.0108
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs - [(x, y)])
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0055
Next Token : y, Posbility: 0.0150
Next Token : if, Posbility: 0.0408
Next Token : x, Posbility: 0.1113
Next Token : min, Posbility: 0.8203
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs - [(x, y)])
    else min
 score:False
Error type: noerr
---------------------------
Next Token :  ((, Posbility: 0.0000
Next Token :  second, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs - [(x, y)])
    else min_
 score:False
Error type: noerr
---------------------------
Next Token : seconds, Posbility: 0.0000
Next Token : secondary, Posbility: 0.0000
Next Token : third, Posbility: 0.0001
Next Token : first, Posbility: 0.0006
Next Token : second, Posbility: 1.0000
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs - [(x, y)])
    else min_second
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token :  [, Posbility: 0.0005
Next Token : (, Posbility: 0.0015
Next Token :  ((, Posbility: 0.0067
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs - [(x, y)])
    else min_second 
 score:False
Error type: noerr
---------------------------
Next Token : ([], Posbility: 0.0000
Next Token : ([, Posbility: 0.0010
Next Token : y, Posbility: 0.0014
Next Token : x, Posbility: 0.0474
Next Token : (, Posbility: 0.9492
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs - [(x, y)])
    else min_second (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : list, Posbility: 0.0002
Next Token : tail, Posbility: 0.0003
Next Token : List, Posbility: 0.0013
Next Token : y, Posbility: 0.0229
Next Token : x, Posbility: 0.9727
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs - [(x, y)])
    else min_second (x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0006
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs - [(x, y)])
    else min_second (xs
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ), Posbility: 0.0001
Next Token :  --, Posbility: 0.0002
Next Token :  â€“, Posbility: 0.0002
Next Token :  +, Posbility: 0.0007
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs - [(x, y)])
    else min_second (xs 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : âˆ’, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs - [(x, y)])
    else min_second (xs -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [!, Posbility: 0.0002
Next Token :  [{, Posbility: 0.0019
Next Token :  [[, Posbility: 0.0022
Next Token :  , Posbility: 0.0046
Next Token :  [, Posbility: 0.9922
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs - [(x, y)])
    else min_second (xs - [
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (0,, Posbility: 0.0002
Next Token : y, Posbility: 0.0012
Next Token : x, Posbility: 0.0015
Next Token :  , Posbility: 0.0025
Next Token : (, Posbility: 0.9961
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs - [(x, y)])
    else min_second (xs - [(
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : x, Posbility: 0.4375
Next Token : y, Posbility: 0.5625
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs - [(x, y)])
    else min_second (xs - [(y
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs - [(x, y)])
    else min_second (xs - [(y,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0), Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : x, Posbility: 0.0032
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs - [(x, y)])
    else min_second (xs - [(y, 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : y, Posbility: 0.0006
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs - [(x, y)])
    else min_second (xs - [(y, x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ))), Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : );, Posbility: 0.0003
Next Token : )], Posbility: 0.0005
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs - [(x, y)])
    else min_second (xs - [(y, x)
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ],, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : ]),, Posbility: 0.0004
Next Token : ]);, Posbility: 0.0952
Next Token : ]), Posbility: 0.9023
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs - [(x, y)])
    else min_second (xs - [(y, x)])
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0010
Next Token :  in, Posbility: 0.0010
Next Token :  , Posbility: 0.0051
Next Token : 
, Posbility: 0.3164
Next Token : 

, Posbility: 0.6719
---------------------------
code:
 (* Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. *)
let rec min_second xs =
  match xs with
  | [] -> raise Not_found
  | (x, _) -> x
  | (x, y) ->
    if y < x then min_second (xs - [(x, y)])
    else min_second (xs - [(y, x)])


 score:True
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END and No Syntax Error--------

processing time : :44.63052821159363

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>