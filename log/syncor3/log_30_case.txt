code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  can, Posbility: 0.0192
Next Token :  check, Posbility: 0.1611
Next Token :  rec, Posbility: 0.2061
Next Token :  , Posbility: 0.2334
Next Token :  is, Posbility: 0.2656
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0029
Next Token : square, Posbility: 0.0029
Next Token : Di, Posbility: 0.0042
Next Token : Square, Posbility: 0.0352
Next Token : _, Posbility: 0.9102
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : di, Posbility: 0.0160
Next Token : sq, Posbility: 0.0206
Next Token : sum, Posbility: 0.0300
Next Token : diff, Posbility: 0.0493
Next Token : square, Posbility: 0.4688
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0117
Next Token : (, Posbility: 0.0248
Next Token :  , Posbility: 0.1113
Next Token :  =, Posbility: 0.3027
Next Token : _, Posbility: 0.4980
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : of, Posbility: 0.0559
Next Token : number, Posbility: 0.0635
Next Token : sum, Posbility: 0.1523
Next Token : difference, Posbility: 0.1953
Next Token : diff, Posbility: 0.1953
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  num, Posbility: 0.0177
Next Token : (, Posbility: 0.0200
Next Token : _, Posbility: 0.0898
Next Token :  , Posbility: 0.2773
Next Token :  =, Posbility: 0.5195
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fn, Posbility: 0.0168
Next Token :  fun, Posbility: 0.0854
Next Token :  , Posbility: 0.1245
Next Token : 
, Posbility: 0.2637
Next Token :  function, Posbility: 0.4922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0026
Next Token :  num, Posbility: 0.0043
Next Token : (, Posbility: 0.0192
Next Token :  , Posbility: 0.1250
Next Token : 
, Posbility: 0.8125
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0090
Next Token : 	, Posbility: 0.0116
Next Token : |, Posbility: 0.0588
Next Token :     , Posbility: 0.0757
Next Token :   , Posbility: 0.8125
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0009
Next Token : ?, Posbility: 0.0012
Next Token : let, Posbility: 0.0019
Next Token : (, Posbility: 0.0059
Next Token : |, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0309
Next Token :  Some, Posbility: 0.0309
Next Token :  [], Posbility: 0.0396
Next Token :  0, Posbility: 0.2275
Next Token :  , Posbility: 0.4824
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Square, Posbility: 0.0391
Next Token : _, Posbility: 0.0569
Next Token : (, Posbility: 0.1060
Next Token : n, Posbility: 0.1543
Next Token : x, Posbility: 0.3262
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0300
Next Token :  when, Posbility: 0.0300
Next Token :  =, Posbility: 0.0386
Next Token : ::, Posbility: 0.0923
Next Token :  , Posbility: 0.6836
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0306
Next Token : if, Posbility: 0.0347
Next Token : <, Posbility: 0.0393
Next Token : ::, Posbility: 0.3301
Next Token : ->, Posbility: 0.5430
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0245
Next Token :  true, Posbility: 0.0245
Next Token :  false, Posbility: 0.0315
Next Token : 
, Posbility: 0.1816
Next Token :  , Posbility: 0.6328
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0103
Next Token : (, Posbility: 0.0757
Next Token : let, Posbility: 0.0859
Next Token : if, Posbility: 0.0977
Next Token : x, Posbility: 0.6367
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x
 score:False
Error type: noerr
---------------------------
Next Token :  <=, Posbility: 0.0420
Next Token :  >=, Posbility: 0.0474
Next Token :  =, Posbility: 0.2129
Next Token :  *, Posbility: 0.2412
Next Token :  , Posbility: 0.2412
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x 
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0481
Next Token : /, Posbility: 0.0481
Next Token : >, Posbility: 0.1895
Next Token : <, Posbility: 0.2754
Next Token : ^, Posbility: 0.3555
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0030
Next Token :  1, Posbility: 0.0030
Next Token :  4, Posbility: 0.0030
Next Token : =, Posbility: 0.0466
Next Token :  , Posbility: 0.9336
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2., Posbility: 0.0004
Next Token : 3, Posbility: 0.0049
Next Token : (, Posbility: 0.0133
Next Token : x, Posbility: 0.0464
Next Token : 2, Posbility: 0.9336
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2
 score:False
Error type: noerr
---------------------------
Next Token :  |, Posbility: 0.0236
Next Token : 
, Posbility: 0.0388
Next Token :  ==, Posbility: 0.1060
Next Token :  , Posbility: 0.1748
Next Token :  =, Posbility: 0.5391
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  -1, Posbility: 0.0015
Next Token :  4, Posbility: 0.0040
Next Token :  1, Posbility: 0.0295
Next Token :  0, Posbility: 0.3613
Next Token :  , Posbility: 0.5938
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0015
Next Token : 3, Posbility: 0.0068
Next Token : 2, Posbility: 0.0305
Next Token : (, Posbility: 0.0444
Next Token : x, Posbility: 0.8945
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0228
Next Token : ^2, Posbility: 0.0376
Next Token :  *, Posbility: 0.1021
Next Token :  , Posbility: 0.1914
Next Token : 
, Posbility: 0.5195
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0005
Next Token :       , Posbility: 0.0009
Next Token : |, Posbility: 0.0014
Next Token :     , Posbility: 0.0036
Next Token :   , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  
 score:False
Error type: noerr
---------------------------
Next Token : =, Posbility: 0.0003
Next Token : ->, Posbility: 0.0003
Next Token : (, Posbility: 0.0003
Next Token : ;, Posbility: 0.0022
Next Token : |, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0048
Next Token :  other, Posbility: 0.0062
Next Token :  otherwise, Posbility: 0.0131
Next Token :  0, Posbility: 0.0277
Next Token :  , Posbility: 0.9180
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0051
Next Token : n, Posbility: 0.0139
Next Token : y, Posbility: 0.0376
Next Token : x, Posbility: 0.1689
Next Token : _, Posbility: 0.7578
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0011
Next Token :    , Posbility: 0.0021
Next Token : 
, Posbility: 0.0021
Next Token :   , Posbility: 0.0066
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token : if, Posbility: 0.0003
Next Token : ::, Posbility: 0.0028
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0145
Next Token :  true, Posbility: 0.0145
Next Token :  , Posbility: 0.0396
Next Token :  False, Posbility: 0.1074
Next Token :  false, Posbility: 0.7930
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0034
Next Token : ), Posbility: 0.0064
Next Token :  , Posbility: 0.0093
Next Token : 

, Posbility: 0.3945
Next Token : 
, Posbility: 0.5742
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false

 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0344
Next Token : ;, Posbility: 0.0566
Next Token : let, Posbility: 0.0684
Next Token : |, Posbility: 0.1060
Next Token :   , Posbility: 0.1641
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  
 score:False
Error type: noerr
---------------------------
Next Token : =, Posbility: 0.0231
Next Token : 
, Posbility: 0.0315
Next Token : in, Posbility: 0.0491
Next Token : ;, Posbility: 0.1328
Next Token : |, Posbility: 0.5977
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0156
Next Token : 

, Posbility: 0.0177
Next Token : 
, Posbility: 0.0425
Next Token :  , Posbility: 0.2158
Next Token : >, Posbility: 0.5859
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |>
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ignore, Posbility: 0.0173
Next Token :  Some, Posbility: 0.0222
Next Token :  fun, Posbility: 0.0251
Next Token :  String, Posbility: 0.0415
Next Token :  , Posbility: 0.7344
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0410
Next Token : Int, Posbility: 0.0598
Next Token : Result, Posbility: 0.0986
Next Token : List, Posbility: 0.1621
Next Token : Option, Posbility: 0.1836
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : T, Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token : _, Posbility: 0.0017
Next Token : ., Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : and, Posbility: 0.0281
Next Token : of, Posbility: 0.0281
Next Token : value, Posbility: 0.1611
Next Token : is, Posbility: 0.2070
Next Token : map, Posbility: 0.3418
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map
 score:False
Error type: noerr
---------------------------
Next Token :  Some, Posbility: 0.0297
Next Token : _, Posbility: 0.0554
Next Token : 

, Posbility: 0.0630
Next Token : 
, Posbility: 0.1035
Next Token :  , Posbility: 0.5977
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0143
Next Token : Int, Posbility: 0.0143
Next Token : x, Posbility: 0.0208
Next Token : Option, Posbility: 0.0498
Next Token : (, Posbility: 0.7812
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : x, Posbility: 0.0143
Next Token : \, Posbility: 0.0143
Next Token : +, Posbility: 0.0143
Next Token : function, Posbility: 0.0388
Next Token : fun, Posbility: 0.7812
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  num, Posbility: 0.0030
Next Token :  a, Posbility: 0.0092
Next Token :  i, Posbility: 0.0117
Next Token :  v, Posbility: 0.0193
Next Token :  , Posbility: 0.9336
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0229
Next Token : (, Posbility: 0.0229
Next Token : y, Posbility: 0.0378
Next Token : n, Posbility: 0.1030
Next Token : x, Posbility: 0.7617
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0003
Next Token : ->, Posbility: 0.0003
Next Token : x, Posbility: 0.0004
Next Token :  =>, Posbility: 0.0007
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ^, Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token : -, Posbility: 0.0002
Next Token : y, Posbility: 0.0019
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0223
Next Token :  is, Posbility: 0.0223
Next Token :  true, Posbility: 0.0287
Next Token :  Some, Posbility: 0.0608
Next Token :  , Posbility: 0.7422
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0208
Next Token : 2, Posbility: 0.0266
Next Token : Option, Posbility: 0.0386
Next Token : (, Posbility: 0.0928
Next Token : x, Posbility: 0.6836
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ), Posbility: 0.0269
Next Token : ^2, Posbility: 0.0269
Next Token :  +, Posbility: 0.1206
Next Token :  *, Posbility: 0.1982
Next Token :  , Posbility: 0.5391
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : <, Posbility: 0.0160
Next Token : /, Posbility: 0.0262
Next Token : >, Posbility: 0.0337
Next Token : -, Posbility: 0.0432
Next Token : ^, Posbility: 0.8711
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1), Posbility: 0.0056
Next Token :  4), Posbility: 0.0154
Next Token :  3), Posbility: 0.0154
Next Token :  , Posbility: 0.1133
Next Token :  2), Posbility: 0.8398
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
 score:False
Error type: noerr
---------------------------
Next Token :  >>, Posbility: 0.0124
Next Token :  in, Posbility: 0.0381
Next Token :  , Posbility: 0.0713
Next Token : 

, Posbility: 0.3203
Next Token : 
, Posbility: 0.5273
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)

 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0152
Next Token : end, Posbility: 0.0413
Next Token : |, Posbility: 0.0933
Next Token : in, Posbility: 0.2100
Next Token :   , Posbility: 0.5352
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0030
Next Token : [, Posbility: 0.0030
Next Token : (, Posbility: 0.0118
Next Token : in, Posbility: 0.0134
Next Token : |, Posbility: 0.9414
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Some, Posbility: 0.0006
Next Token : *, Posbility: 0.0009
Next Token :  None, Posbility: 0.0036
Next Token :  , Posbility: 0.0046
Next Token : >, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |>
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Optional, Posbility: 0.0023
Next Token :  String, Posbility: 0.0055
Next Token :  is, Posbility: 0.0103
Next Token :  Some, Posbility: 0.0361
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0038
Next Token : Maybe, Posbility: 0.0043
Next Token : Result, Posbility: 0.0104
Next Token : List, Posbility: 0.0220
Next Token : Option, Posbility: 0.9336
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : 2., Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : or, Posbility: 0.0698
Next Token : filter, Posbility: 0.0698
Next Token : get, Posbility: 0.1147
Next Token : and, Posbility: 0.1147
Next Token : map, Posbility: 0.2432
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map
 score:False
Error type: noerr
---------------------------
Next Token :  ((, Posbility: 0.0134
Next Token : i, Posbility: 0.0172
Next Token : 
, Posbility: 0.0195
Next Token : _, Posbility: 0.1445
Next Token :  , Posbility: 0.7344
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0071
Next Token : Int, Posbility: 0.0132
Next Token : x, Posbility: 0.0219
Next Token : Option, Posbility: 0.0864
Next Token : (, Posbility: 0.8203
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : if, Posbility: 0.0020
Next Token : \, Posbility: 0.0023
Next Token : Option, Posbility: 0.0030
Next Token : function, Posbility: 0.0249
Next Token : fun, Posbility: 0.9375
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0024
Next Token :  a, Posbility: 0.0027
Next Token :  i, Posbility: 0.0040
Next Token :  v, Posbility: 0.0065
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : square, Posbility: 0.0078
Next Token : n, Posbility: 0.0166
Next Token : _, Posbility: 0.0166
Next Token : y, Posbility: 0.0166
Next Token : x, Posbility: 0.9023
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : x, Posbility: 0.0002
Next Token :  =>, Posbility: 0.0008
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0001
Next Token : x, Posbility: 0.0003
Next Token : ^, Posbility: 0.0003
Next Token : y, Posbility: 0.0008
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0093
Next Token :  1, Posbility: 0.0135
Next Token :  not, Posbility: 0.0254
Next Token :  Some, Posbility: 0.0287
Next Token :  , Posbility: 0.8398
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0306
Next Token : if, Posbility: 0.0306
Next Token : (, Posbility: 0.0649
Next Token : Option, Posbility: 0.0649
Next Token : x, Posbility: 0.6953
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  |, Posbility: 0.0172
Next Token : ), Posbility: 0.0283
Next Token :  +, Posbility: 0.1270
Next Token :  *, Posbility: 0.1631
Next Token :  , Posbility: 0.5703
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : <, Posbility: 0.0216
Next Token : >, Posbility: 0.0244
Next Token : /, Posbility: 0.0518
Next Token : -, Posbility: 0.0854
Next Token : ^, Posbility: 0.8086
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  -1), Posbility: 0.0109
Next Token :  1), Posbility: 0.0178
Next Token :  3), Posbility: 0.0486
Next Token :  , Posbility: 0.1318
Next Token :  2), Posbility: 0.7617
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
 score:False
Error type: noerr
---------------------------
Next Token : ., Posbility: 0.0036
Next Token :   , Posbility: 0.0040
Next Token :  , Posbility: 0.0383
Next Token : 

, Posbility: 0.2490
Next Token : 
, Posbility: 0.6797
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0103
Next Token : end, Posbility: 0.0141
Next Token : let, Posbility: 0.0181
Next Token : {, Posbility: 0.0359
Next Token :   , Posbility: 0.8203
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : in, Posbility: 0.0017
Next Token : >>, Posbility: 0.0018
Next Token : ->, Posbility: 0.0027
Next Token : =, Posbility: 0.0045
Next Token : |, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : *, Posbility: 0.0003
Next Token :  Some, Posbility: 0.0003
Next Token :  , Posbility: 0.0013
Next Token :  None, Posbility: 0.0032
Next Token : >, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |>
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fun, Posbility: 0.0023
Next Token :  String, Posbility: 0.0030
Next Token :  is, Posbility: 0.0082
Next Token :  Some, Posbility: 0.0284
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Maybe, Posbility: 0.0034
Next Token : (, Posbility: 0.0039
Next Token : Result, Posbility: 0.0093
Next Token : List, Posbility: 0.0136
Next Token : Option, Posbility: 0.9531
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : or, Posbility: 0.0408
Next Token : is, Posbility: 0.0669
Next Token : and, Posbility: 0.0669
Next Token : get, Posbility: 0.0859
Next Token : map, Posbility: 0.4961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map
 score:False
Error type: noerr
---------------------------
Next Token : i, Posbility: 0.0111
Next Token :  ((, Posbility: 0.0111
Next Token : 
, Posbility: 0.0126
Next Token : _, Posbility: 0.0439
Next Token :  , Posbility: 0.8789
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0021
Next Token : id, Posbility: 0.0030
Next Token : x, Posbility: 0.0039
Next Token : Option, Posbility: 0.0154
Next Token : (, Posbility: 0.9570
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : not, Posbility: 0.0005
Next Token : Option, Posbility: 0.0005
Next Token : if, Posbility: 0.0008
Next Token : function, Posbility: 0.0157
Next Token : fun, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0010
Next Token :  a, Posbility: 0.0013
Next Token :  i, Posbility: 0.0013
Next Token :  v, Posbility: 0.0024
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0039
Next Token : (, Posbility: 0.0050
Next Token : n, Posbility: 0.0050
Next Token : _, Posbility: 0.0175
Next Token : x, Posbility: 0.9531
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ->, Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token : ', Posbility: 0.0001
Next Token :  =>, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : y, Posbility: 0.0003
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  true, Posbility: 0.0074
Next Token :  !, Posbility: 0.0096
Next Token :  not, Posbility: 0.0334
Next Token :  Some, Posbility: 0.0334
Next Token :  , Posbility: 0.8633
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0064
Next Token : if, Posbility: 0.0197
Next Token : (, Posbility: 0.0415
Next Token : Option, Posbility: 0.0535
Next Token : x, Posbility: 0.8359
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ==, Posbility: 0.0116
Next Token : ), Posbility: 0.0315
Next Token :  *, Posbility: 0.0403
Next Token :  +, Posbility: 0.0518
Next Token :  , Posbility: 0.8125
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0035
Next Token : >, Posbility: 0.0084
Next Token : -, Posbility: 0.0084
Next Token : <, Posbility: 0.0084
Next Token : ^, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1), Posbility: 0.0039
Next Token :  4), Posbility: 0.0039
Next Token :  3), Posbility: 0.0105
Next Token :  , Posbility: 0.0286
Next Token :  2), Posbility: 0.9453
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0012
Next Token :  in, Posbility: 0.0062
Next Token :  , Posbility: 0.0148
Next Token : 

, Posbility: 0.1592
Next Token : 
, Posbility: 0.8086
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0099
Next Token : end, Posbility: 0.0106
Next Token : let, Posbility: 0.0135
Next Token : {, Posbility: 0.0325
Next Token :   , Posbility: 0.8398
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : >>, Posbility: 0.0011
Next Token : in, Posbility: 0.0027
Next Token : =, Posbility: 0.0035
Next Token : ->, Posbility: 0.0045
Next Token : |, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : *, Posbility: 0.0001
Next Token :  Some, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token :  None, Posbility: 0.0007
Next Token : >, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |>
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fun, Posbility: 0.0015
Next Token :  function, Posbility: 0.0019
Next Token :  is, Posbility: 0.0031
Next Token :  Some, Posbility: 0.0177
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0024
Next Token : Maybe, Posbility: 0.0024
Next Token : Result, Posbility: 0.0051
Next Token : List, Posbility: 0.0066
Next Token : Option, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : is, Posbility: 0.0187
Next Token : or, Posbility: 0.0187
Next Token : get, Posbility: 0.0240
Next Token : and, Posbility: 0.0396
Next Token : map, Posbility: 0.7969
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map
 score:False
Error type: noerr
---------------------------
Next Token :  ((, Posbility: 0.0044
Next Token : i, Posbility: 0.0056
Next Token : 
, Posbility: 0.0072
Next Token : _, Posbility: 0.0221
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0009
Next Token : id, Posbility: 0.0012
Next Token : x, Posbility: 0.0013
Next Token : Option, Posbility: 0.0066
Next Token : (, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : not, Posbility: 0.0002
Next Token : Option, Posbility: 0.0002
Next Token : if, Posbility: 0.0004
Next Token : function, Posbility: 0.0085
Next Token : fun, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0003
Next Token :  a, Posbility: 0.0003
Next Token :  i, Posbility: 0.0004
Next Token :  v, Posbility: 0.0007
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0017
Next Token : n, Posbility: 0.0017
Next Token : (, Posbility: 0.0021
Next Token : _, Posbility: 0.0109
Next Token : x, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ->, Posbility: 0.0001
Next Token :  =>, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ^, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : y, Posbility: 0.0001
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  true, Posbility: 0.0038
Next Token :  !, Posbility: 0.0038
Next Token :  Some, Posbility: 0.0134
Next Token :  not, Posbility: 0.0171
Next Token :  , Posbility: 0.9336
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0016
Next Token : if, Posbility: 0.0056
Next Token : (, Posbility: 0.0119
Next Token : Option, Posbility: 0.0251
Next Token : x, Posbility: 0.9453
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  =, Posbility: 0.0021
Next Token :  *, Posbility: 0.0057
Next Token :  +, Posbility: 0.0095
Next Token : ), Posbility: 0.0107
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0001
Next Token : -, Posbility: 0.0003
Next Token : >, Posbility: 0.0003
Next Token : <, Posbility: 0.0005
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1), Posbility: 0.0015
Next Token :  4), Posbility: 0.0015
Next Token :  3), Posbility: 0.0040
Next Token :  , Posbility: 0.0109
Next Token :  2), Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
 score:False
Error type: noerr
---------------------------
Next Token :  (*, Posbility: 0.0010
Next Token :  in, Posbility: 0.0077
Next Token :  , Posbility: 0.0099
Next Token : 

, Posbility: 0.0830
Next Token : 
, Posbility: 0.8906
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0057
Next Token : let, Posbility: 0.0065
Next Token : end, Posbility: 0.0073
Next Token : {, Posbility: 0.0255
Next Token :   , Posbility: 0.8984
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0008
Next Token : in, Posbility: 0.0024
Next Token : =, Posbility: 0.0028
Next Token : ->, Posbility: 0.0031
Next Token : |, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : *, Posbility: 0.0000
Next Token :  Some, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  None, Posbility: 0.0003
Next Token : >, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |>
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fun, Posbility: 0.0011
Next Token :  is, Posbility: 0.0015
Next Token :  function, Posbility: 0.0017
Next Token :  Some, Posbility: 0.0157
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Maybe, Posbility: 0.0012
Next Token : (, Posbility: 0.0019
Next Token : Result, Posbility: 0.0024
Next Token : List, Posbility: 0.0031
Next Token : Option, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : get, Posbility: 0.0061
Next Token : is, Posbility: 0.0061
Next Token : or, Posbility: 0.0100
Next Token : and, Posbility: 0.0272
Next Token : map, Posbility: 0.8984
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map
 score:False
Error type: noerr
---------------------------
Next Token :  ((, Posbility: 0.0027
Next Token : i, Posbility: 0.0031
Next Token : 
, Posbility: 0.0050
Next Token : _, Posbility: 0.0156
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map 
 score:False
Error type: noerr
---------------------------
Next Token : Bool, Posbility: 0.0005
Next Token : id, Posbility: 0.0006
Next Token : x, Posbility: 0.0007
Next Token : Option, Posbility: 0.0036
Next Token : (, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : not, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : if, Posbility: 0.0002
Next Token : function, Posbility: 0.0052
Next Token : fun, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0002
Next Token :  {, Posbility: 0.0002
Next Token :  i, Posbility: 0.0002
Next Token :  v, Posbility: 0.0004
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0008
Next Token : n, Posbility: 0.0008
Next Token : (, Posbility: 0.0012
Next Token : _, Posbility: 0.0059
Next Token : x, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ^, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0019
Next Token :  true, Posbility: 0.0024
Next Token :  Some, Posbility: 0.0065
Next Token :  not, Posbility: 0.0107
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0008
Next Token : if, Posbility: 0.0027
Next Token : (, Posbility: 0.0066
Next Token : Option, Posbility: 0.0108
Next Token : x, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  =, Posbility: 0.0009
Next Token :  *, Posbility: 0.0028
Next Token :  +, Posbility: 0.0045
Next Token : ), Posbility: 0.0058
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ^2, Posbility: 0.0001
Next Token : >, Posbility: 0.0001
Next Token : -, Posbility: 0.0001
Next Token : <, Posbility: 0.0001
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2);, Posbility: 0.0009
Next Token :  4), Posbility: 0.0009
Next Token :  3), Posbility: 0.0024
Next Token :  , Posbility: 0.0067
Next Token :  2), Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
 score:False
Error type: noerr
---------------------------
Next Token :  (*, Posbility: 0.0007
Next Token :  in, Posbility: 0.0055
Next Token :  , Posbility: 0.0071
Next Token : 

, Posbility: 0.0525
Next Token : 
, Posbility: 0.9297
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0043
Next Token : |, Posbility: 0.0043
Next Token : end, Posbility: 0.0059
Next Token : {, Posbility: 0.0181
Next Token :   , Posbility: 0.9297
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0006
Next Token : =, Posbility: 0.0019
Next Token : ->, Posbility: 0.0025
Next Token : in, Posbility: 0.0025
Next Token : |, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Some, Posbility: 0.0000
Next Token : *, Posbility: 0.0000
Next Token :  None, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : >, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |>
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0007
Next Token :  fun, Posbility: 0.0007
Next Token :  function, Posbility: 0.0013
Next Token :  Some, Posbility: 0.0109
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Maybe, Posbility: 0.0006
Next Token : (, Posbility: 0.0013
Next Token : Result, Posbility: 0.0015
Next Token : List, Posbility: 0.0019
Next Token : Option, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : get, Posbility: 0.0038
Next Token : or, Posbility: 0.0063
Next Token : filter, Posbility: 0.0063
Next Token : and, Posbility: 0.0172
Next Token : map, Posbility: 0.9375
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map
 score:False
Error type: noerr
---------------------------
Next Token : i, Posbility: 0.0017
Next Token :  ((, Posbility: 0.0017
Next Token : 
, Posbility: 0.0040
Next Token : _, Posbility: 0.0096
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0003
Next Token : x, Posbility: 0.0004
Next Token : id, Posbility: 0.0004
Next Token : Option, Posbility: 0.0022
Next Token : (, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : not, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : if, Posbility: 0.0001
Next Token : function, Posbility: 0.0036
Next Token : fun, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  {, Posbility: 0.0001
Next Token :  i, Posbility: 0.0001
Next Token :  v, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0004
Next Token : (), Posbility: 0.0005
Next Token : (, Posbility: 0.0007
Next Token : _, Posbility: 0.0041
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  true, Posbility: 0.0012
Next Token :  !, Posbility: 0.0012
Next Token :  Some, Posbility: 0.0024
Next Token :  not, Posbility: 0.0066
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0005
Next Token : if, Posbility: 0.0015
Next Token : (, Posbility: 0.0036
Next Token : Option, Posbility: 0.0052
Next Token : x, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  =, Posbility: 0.0004
Next Token :  *, Posbility: 0.0015
Next Token :  +, Posbility: 0.0025
Next Token : ), Posbility: 0.0032
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : >, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : <, Posbility: 0.0001
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4), Posbility: 0.0005
Next Token :  2);, Posbility: 0.0009
Next Token :  3), Posbility: 0.0012
Next Token :  , Posbility: 0.0032
Next Token :  2), Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
 score:False
Error type: noerr
---------------------------
Next Token :  (*, Posbility: 0.0006
Next Token :  in, Posbility: 0.0039
Next Token :  , Posbility: 0.0050
Next Token : 

, Posbility: 0.0289
Next Token : 
, Posbility: 0.9570
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)

 score:False
Error type: noerr
---------------------------
Next Token : |, Posbility: 0.0025
Next Token : ;, Posbility: 0.0034
Next Token : end, Posbility: 0.0039
Next Token : {, Posbility: 0.0144
Next Token :   , Posbility: 0.9492
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0006
Next Token : ->, Posbility: 0.0013
Next Token : =, Posbility: 0.0013
Next Token : in, Posbility: 0.0017
Next Token : |, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  true, Posbility: 0.0000
Next Token : *, Posbility: 0.0000
Next Token :  None, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : >, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |>
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0004
Next Token :  Optional, Posbility: 0.0004
Next Token :  function, Posbility: 0.0008
Next Token :  Some, Posbility: 0.0075
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Maybe, Posbility: 0.0004
Next Token : (, Posbility: 0.0010
Next Token : Result, Posbility: 0.0010
Next Token : List, Posbility: 0.0013
Next Token : Option, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : get, Posbility: 0.0015
Next Token : or, Posbility: 0.0024
Next Token : filter, Posbility: 0.0024
Next Token : and, Posbility: 0.0066
Next Token : map, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map
 score:False
Error type: noerr
---------------------------
Next Token :  ((, Posbility: 0.0010
Next Token : i, Posbility: 0.0012
Next Token : 
, Posbility: 0.0024
Next Token : _, Posbility: 0.0059
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0002
Next Token : x, Posbility: 0.0002
Next Token : id, Posbility: 0.0003
Next Token : Option, Posbility: 0.0013
Next Token : (, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : fn, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : if, Posbility: 0.0001
Next Token : function, Posbility: 0.0028
Next Token : fun, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  {, Posbility: 0.0001
Next Token :  i, Posbility: 0.0001
Next Token :  v, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0003
Next Token : (), Posbility: 0.0003
Next Token : (, Posbility: 0.0005
Next Token : _, Posbility: 0.0032
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0007
Next Token :  true, Posbility: 0.0009
Next Token :  Some, Posbility: 0.0012
Next Token :  not, Posbility: 0.0040
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0004
Next Token : if, Posbility: 0.0012
Next Token : (, Posbility: 0.0032
Next Token : Option, Posbility: 0.0032
Next Token : x, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  =, Posbility: 0.0003
Next Token :  *, Posbility: 0.0012
Next Token :  +, Posbility: 0.0019
Next Token : ), Posbility: 0.0022
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : >, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : <, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4), Posbility: 0.0007
Next Token :  2);, Posbility: 0.0012
Next Token :  3), Posbility: 0.0012
Next Token :  , Posbility: 0.0032
Next Token :  2), Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
 score:False
Error type: noerr
---------------------------
Next Token :  (*, Posbility: 0.0009
Next Token :  in, Posbility: 0.0031
Next Token :  , Posbility: 0.0040
Next Token : 

, Posbility: 0.0201
Next Token : 
, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)

 score:False
Error type: noerr
---------------------------
Next Token : |, Posbility: 0.0016
Next Token : ;, Posbility: 0.0031
Next Token : end, Posbility: 0.0034
Next Token : {, Posbility: 0.0121
Next Token :   , Posbility: 0.9570
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : ->, Posbility: 0.0005
Next Token : (, Posbility: 0.0006
Next Token : =, Posbility: 0.0010
Next Token : in, Posbility: 0.0013
Next Token : |, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  true, Posbility: 0.0000
Next Token : *, Posbility: 0.0000
Next Token :  None, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : >, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |>
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Optional, Posbility: 0.0003
Next Token :  fun, Posbility: 0.0003
Next Token :  function, Posbility: 0.0007
Next Token :  Some, Posbility: 0.0059
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Maybe, Posbility: 0.0003
Next Token : Result, Posbility: 0.0007
Next Token : (, Posbility: 0.0008
Next Token : List, Posbility: 0.0010
Next Token : Option, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : is, Posbility: 0.0009
Next Token : or, Posbility: 0.0015
Next Token : filter, Posbility: 0.0015
Next Token : and, Posbility: 0.0040
Next Token : map, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map
 score:False
Error type: noerr
---------------------------
Next Token : i, Posbility: 0.0008
Next Token :  ((, Posbility: 0.0008
Next Token : 
, Posbility: 0.0022
Next Token : _, Posbility: 0.0052
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0001
Next Token : x, Posbility: 0.0002
Next Token : id, Posbility: 0.0002
Next Token : Option, Posbility: 0.0008
Next Token : (, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : fn, Posbility: 0.0000
Next Token : if, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : function, Posbility: 0.0025
Next Token : fun, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  {, Posbility: 0.0001
Next Token :  i, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0002
Next Token : n, Posbility: 0.0002
Next Token : (, Posbility: 0.0004
Next Token : _, Posbility: 0.0022
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0007
Next Token :  true, Posbility: 0.0009
Next Token :  Some, Posbility: 0.0012
Next Token :  not, Posbility: 0.0040
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0004
Next Token : if, Posbility: 0.0008
Next Token : Option, Posbility: 0.0019
Next Token : (, Posbility: 0.0025
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  =, Posbility: 0.0002
Next Token :  *, Posbility: 0.0008
Next Token :  +, Posbility: 0.0013
Next Token : ), Posbility: 0.0015
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : >, Posbility: 0.0000
Next Token : <, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4), Posbility: 0.0005
Next Token :  3), Posbility: 0.0009
Next Token :  2);, Posbility: 0.0015
Next Token :  , Posbility: 0.0025
Next Token :  2), Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
 score:False
Error type: noerr
---------------------------
Next Token :  (*, Posbility: 0.0007
Next Token :  in, Posbility: 0.0019
Next Token :  , Posbility: 0.0035
Next Token : 

, Posbility: 0.0157
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)

 score:False
Error type: noerr
---------------------------
Next Token : |, Posbility: 0.0011
Next Token : end, Posbility: 0.0025
Next Token : ;, Posbility: 0.0035
Next Token : {, Posbility: 0.0084
Next Token :   , Posbility: 0.9688
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : =, Posbility: 0.0005
Next Token : (, Posbility: 0.0005
Next Token : ;, Posbility: 0.0007
Next Token : in, Posbility: 0.0012
Next Token : |, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  true, Posbility: 0.0000
Next Token : *, Posbility: 0.0000
Next Token :  None, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : >, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |>
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Optional, Posbility: 0.0002
Next Token :  fun, Posbility: 0.0003
Next Token :  function, Posbility: 0.0006
Next Token :  Some, Posbility: 0.0052
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Maybe, Posbility: 0.0002
Next Token : Result, Posbility: 0.0005
Next Token : (, Posbility: 0.0007
Next Token : List, Posbility: 0.0007
Next Token : Option, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : bind, Posbility: 0.0005
Next Token : or, Posbility: 0.0009
Next Token : filter, Posbility: 0.0015
Next Token : and, Posbility: 0.0040
Next Token : map, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map
 score:False
Error type: noerr
---------------------------
Next Token : i, Posbility: 0.0005
Next Token :  ((, Posbility: 0.0006
Next Token : 
, Posbility: 0.0015
Next Token : _, Posbility: 0.0036
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : Int, Posbility: 0.0001
Next Token : id, Posbility: 0.0002
Next Token : Option, Posbility: 0.0007
Next Token : (, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : fn, Posbility: 0.0000
Next Token : if, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : function, Posbility: 0.0019
Next Token : fun, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  {, Posbility: 0.0001
Next Token :  i, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0002
Next Token : n, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : _, Posbility: 0.0019
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0005
Next Token :  Some, Posbility: 0.0006
Next Token :  true, Posbility: 0.0007
Next Token :  not, Posbility: 0.0025
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0003
Next Token : if, Posbility: 0.0006
Next Token : Option, Posbility: 0.0013
Next Token : (, Posbility: 0.0019
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  =, Posbility: 0.0001
Next Token :  *, Posbility: 0.0006
Next Token :  +, Posbility: 0.0010
Next Token : ), Posbility: 0.0013
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : <, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4), Posbility: 0.0005
Next Token :  3), Posbility: 0.0009
Next Token :  , Posbility: 0.0025
Next Token :  2);, Posbility: 0.0025
Next Token :  2), Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
 score:False
Error type: noerr
---------------------------
Next Token :  (*, Posbility: 0.0006
Next Token :  in, Posbility: 0.0015
Next Token :  , Posbility: 0.0024
Next Token : 

, Posbility: 0.0109
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)

 score:False
Error type: noerr
---------------------------
Next Token : when, Posbility: 0.0009
Next Token : end, Posbility: 0.0031
Next Token : ;, Posbility: 0.0051
Next Token : {, Posbility: 0.0074
Next Token :   , Posbility: 0.9648
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : =, Posbility: 0.0003
Next Token : (, Posbility: 0.0005
Next Token : in, Posbility: 0.0009
Next Token : ;, Posbility: 0.0010
Next Token : |, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  true, Posbility: 0.0000
Next Token : *, Posbility: 0.0000
Next Token :  None, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : >, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |>
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Optional, Posbility: 0.0002
Next Token :  fun, Posbility: 0.0002
Next Token :  function, Posbility: 0.0005
Next Token :  Some, Posbility: 0.0041
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Function, Posbility: 0.0002
Next Token : Result, Posbility: 0.0005
Next Token : List, Posbility: 0.0006
Next Token : (, Posbility: 0.0007
Next Token : Option, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : bind, Posbility: 0.0009
Next Token : or, Posbility: 0.0015
Next Token : filter, Posbility: 0.0015
Next Token : and, Posbility: 0.0040
Next Token : map, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map
 score:False
Error type: noerr
---------------------------
Next Token : i, Posbility: 0.0004
Next Token :  ((, Posbility: 0.0005
Next Token : 
, Posbility: 0.0013
Next Token : _, Posbility: 0.0032
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : Int, Posbility: 0.0001
Next Token : id, Posbility: 0.0001
Next Token : Option, Posbility: 0.0005
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : function, Posbility: 0.0019
Next Token : fun, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  {, Posbility: 0.0001
Next Token :  i, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0001
Next Token : n, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : _, Posbility: 0.0013
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0004
Next Token :  Some, Posbility: 0.0004
Next Token :  true, Posbility: 0.0005
Next Token :  not, Posbility: 0.0025
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0003
Next Token : if, Posbility: 0.0005
Next Token : Option, Posbility: 0.0010
Next Token : (, Posbility: 0.0017
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  =, Posbility: 0.0001
Next Token :  *, Posbility: 0.0007
Next Token :  +, Posbility: 0.0012
Next Token : ), Posbility: 0.0013
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : <, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4), Posbility: 0.0003
Next Token :  3), Posbility: 0.0005
Next Token :  , Posbility: 0.0019
Next Token :  2);, Posbility: 0.0032
Next Token :  2), Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
 score:False
Error type: noerr
---------------------------
Next Token :  (*, Posbility: 0.0006
Next Token :  in, Posbility: 0.0010
Next Token :  , Posbility: 0.0019
Next Token : 

, Posbility: 0.0096
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)

 score:False
Error type: noerr
---------------------------
Next Token : when, Posbility: 0.0008
Next Token : end, Posbility: 0.0033
Next Token : {, Posbility: 0.0045
Next Token : ;, Posbility: 0.0051
Next Token :   , Posbility: 0.9727
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : =, Posbility: 0.0003
Next Token : (, Posbility: 0.0005
Next Token : ;, Posbility: 0.0007
Next Token : in, Posbility: 0.0007
Next Token : |, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  true, Posbility: 0.0000
Next Token : *, Posbility: 0.0000
Next Token :  None, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : >, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |>
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fun, Posbility: 0.0002
Next Token :  Optional, Posbility: 0.0002
Next Token :  function, Posbility: 0.0004
Next Token :  Some, Posbility: 0.0036
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Function, Posbility: 0.0001
Next Token : Result, Posbility: 0.0004
Next Token : List, Posbility: 0.0006
Next Token : (, Posbility: 0.0006
Next Token : Option, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : bind, Posbility: 0.0005
Next Token : or, Posbility: 0.0007
Next Token : filter, Posbility: 0.0009
Next Token : and, Posbility: 0.0025
Next Token : map, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map
 score:False
Error type: noerr
---------------------------
Next Token : i, Posbility: 0.0004
Next Token :  ((, Posbility: 0.0005
Next Token : 
, Posbility: 0.0012
Next Token : _, Posbility: 0.0028
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map 
 score:False
Error type: noerr
---------------------------
Next Token : Int, Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token : id, Posbility: 0.0001
Next Token : Option, Posbility: 0.0004
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : function, Posbility: 0.0017
Next Token : fun, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  v, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0001
Next Token : n, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : _, Posbility: 0.0013
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0003
Next Token :  Some, Posbility: 0.0003
Next Token :  true, Posbility: 0.0004
Next Token :  not, Posbility: 0.0013
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0003
Next Token : if, Posbility: 0.0004
Next Token : Option, Posbility: 0.0008
Next Token : (, Posbility: 0.0015
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  =, Posbility: 0.0001
Next Token :  *, Posbility: 0.0005
Next Token : ), Posbility: 0.0008
Next Token :  +, Posbility: 0.0009
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : <, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4), Posbility: 0.0003
Next Token :  3), Posbility: 0.0005
Next Token :  , Posbility: 0.0015
Next Token :  2);, Posbility: 0.0032
Next Token :  2), Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
 score:False
Error type: noerr
---------------------------
Next Token :  (*, Posbility: 0.0007
Next Token :  in, Posbility: 0.0008
Next Token :  , Posbility: 0.0017
Next Token : 

, Posbility: 0.0085
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)

 score:False
Error type: noerr
---------------------------
Next Token : |, Posbility: 0.0007
Next Token : end, Posbility: 0.0026
Next Token : ;, Posbility: 0.0038
Next Token : {, Posbility: 0.0038
Next Token :   , Posbility: 0.9766
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : =, Posbility: 0.0002
Next Token : (, Posbility: 0.0005
Next Token : ;, Posbility: 0.0006
Next Token : in, Posbility: 0.0008
Next Token : |, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  true, Posbility: 0.0000
Next Token : *, Posbility: 0.0000
Next Token :  None, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : >, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |>
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Optional, Posbility: 0.0001
Next Token :  fun, Posbility: 0.0001
Next Token :  function, Posbility: 0.0004
Next Token :  Some, Posbility: 0.0028
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Function, Posbility: 0.0001
Next Token : Result, Posbility: 0.0003
Next Token : List, Posbility: 0.0004
Next Token : (, Posbility: 0.0005
Next Token : Option, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : bind, Posbility: 0.0005
Next Token : or, Posbility: 0.0007
Next Token : filter, Posbility: 0.0009
Next Token : and, Posbility: 0.0019
Next Token : map, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map
 score:False
Error type: noerr
---------------------------
Next Token : i, Posbility: 0.0003
Next Token :  ((, Posbility: 0.0004
Next Token : 
, Posbility: 0.0009
Next Token : _, Posbility: 0.0025
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : Int, Posbility: 0.0001
Next Token : id, Posbility: 0.0001
Next Token : Option, Posbility: 0.0003
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token : function, Posbility: 0.0013
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  v, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0001
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : _, Posbility: 0.0010
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0002
Next Token :  1, Posbility: 0.0003
Next Token :  true, Posbility: 0.0004
Next Token :  not, Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0002
Next Token : if, Posbility: 0.0003
Next Token : Option, Posbility: 0.0006
Next Token : (, Posbility: 0.0012
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :  *, Posbility: 0.0004
Next Token : ), Posbility: 0.0007
Next Token :  +, Posbility: 0.0007
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : <, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4), Posbility: 0.0003
Next Token :  3), Posbility: 0.0004
Next Token :  , Posbility: 0.0015
Next Token :  2);, Posbility: 0.0032
Next Token :  2), Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0007
Next Token :  (*, Posbility: 0.0007
Next Token :  , Posbility: 0.0015
Next Token : 

, Posbility: 0.0096
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)

 score:False
Error type: noerr
---------------------------
Next Token : |, Posbility: 0.0007
Next Token : {, Posbility: 0.0026
Next Token : end, Posbility: 0.0031
Next Token : ;, Posbility: 0.0045
Next Token :   , Posbility: 0.9766
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : =, Posbility: 0.0002
Next Token : (, Posbility: 0.0004
Next Token : in, Posbility: 0.0006
Next Token : ;, Posbility: 0.0008
Next Token : |, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  true, Posbility: 0.0000
Next Token : *, Posbility: 0.0000
Next Token :  None, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : >, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |>
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Optional, Posbility: 0.0001
Next Token :  fun, Posbility: 0.0001
Next Token :  function, Posbility: 0.0003
Next Token :  Some, Posbility: 0.0022
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Function, Posbility: 0.0001
Next Token : Result, Posbility: 0.0003
Next Token : List, Posbility: 0.0004
Next Token : (, Posbility: 0.0004
Next Token : Option, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : bind, Posbility: 0.0004
Next Token : or, Posbility: 0.0005
Next Token : filter, Posbility: 0.0007
Next Token : and, Posbility: 0.0015
Next Token : map, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map
 score:False
Error type: noerr
---------------------------
Next Token : i, Posbility: 0.0003
Next Token :  ((, Posbility: 0.0004
Next Token : 
, Posbility: 0.0009
Next Token : _, Posbility: 0.0022
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : Int, Posbility: 0.0001
Next Token : id, Posbility: 0.0001
Next Token : Option, Posbility: 0.0003
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : function, Posbility: 0.0013
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  v, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0001
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0008
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ->, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Some, Posbility: 0.0002
Next Token :  1, Posbility: 0.0003
Next Token :  true, Posbility: 0.0003
Next Token :  not, Posbility: 0.0013
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0003
Next Token : if, Posbility: 0.0003
Next Token : Option, Posbility: 0.0004
Next Token : (, Posbility: 0.0012
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :  *, Posbility: 0.0004
Next Token : ), Posbility: 0.0006
Next Token :  +, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : <, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4), Posbility: 0.0003
Next Token :  3), Posbility: 0.0004
Next Token :  , Posbility: 0.0015
Next Token :  2);, Posbility: 0.0032
Next Token :  2), Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0007
Next Token :  (*, Posbility: 0.0009
Next Token :  , Posbility: 0.0015
Next Token : 

, Posbility: 0.0096
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)

 score:False
Error type: noerr
---------------------------
Next Token : when, Posbility: 0.0007
Next Token : end, Posbility: 0.0031
Next Token : {, Posbility: 0.0031
Next Token : ;, Posbility: 0.0040
Next Token :   , Posbility: 0.9766
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : =, Posbility: 0.0002
Next Token : in, Posbility: 0.0004
Next Token : (, Posbility: 0.0004
Next Token : ;, Posbility: 0.0007
Next Token : |, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  true, Posbility: 0.0000
Next Token :  None, Posbility: 0.0000
Next Token : *, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : >, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |>
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fun, Posbility: 0.0001
Next Token :  Optional, Posbility: 0.0001
Next Token :  function, Posbility: 0.0002
Next Token :  Some, Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Function, Posbility: 0.0001
Next Token : Result, Posbility: 0.0003
Next Token : (, Posbility: 0.0005
Next Token : List, Posbility: 0.0005
Next Token : Option, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : bind, Posbility: 0.0003
Next Token : or, Posbility: 0.0004
Next Token : filter, Posbility: 0.0005
Next Token : and, Posbility: 0.0015
Next Token : map, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map
 score:False
Error type: noerr
---------------------------
Next Token : i, Posbility: 0.0002
Next Token :  ((, Posbility: 0.0003
Next Token : 
, Posbility: 0.0008
Next Token : _, Posbility: 0.0022
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : id, Posbility: 0.0001
Next Token : Int, Posbility: 0.0001
Next Token : Option, Posbility: 0.0002
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token : function, Posbility: 0.0013
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0001
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0007
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ->, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0002
Next Token :  1, Posbility: 0.0003
Next Token :  true, Posbility: 0.0003
Next Token :  not, Posbility: 0.0012
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0002
Next Token : 2, Posbility: 0.0003
Next Token : Option, Posbility: 0.0004
Next Token : (, Posbility: 0.0012
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :  *, Posbility: 0.0004
Next Token : ), Posbility: 0.0007
Next Token :  +, Posbility: 0.0007
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : <, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4), Posbility: 0.0003
Next Token :  3), Posbility: 0.0004
Next Token :  , Posbility: 0.0012
Next Token :  2);, Posbility: 0.0032
Next Token :  2), Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0007
Next Token :  (*, Posbility: 0.0007
Next Token :  , Posbility: 0.0013
Next Token : 

, Posbility: 0.0085
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)

 score:False
Error type: noerr
---------------------------
Next Token : when, Posbility: 0.0005
Next Token : {, Posbility: 0.0024
Next Token : end, Posbility: 0.0027
Next Token : ;, Posbility: 0.0035
Next Token :   , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : =, Posbility: 0.0001
Next Token : (, Posbility: 0.0004
Next Token : in, Posbility: 0.0004
Next Token : ;, Posbility: 0.0007
Next Token : |, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : >>, Posbility: 0.0000
Next Token :  None, Posbility: 0.0000
Next Token : *, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : >, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |>
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Optional, Posbility: 0.0001
Next Token :  fun, Posbility: 0.0001
Next Token :  function, Posbility: 0.0002
Next Token :  Some, Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Function, Posbility: 0.0001
Next Token : Result, Posbility: 0.0003
Next Token : List, Posbility: 0.0004
Next Token : (, Posbility: 0.0005
Next Token : Option, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : bind, Posbility: 0.0003
Next Token : or, Posbility: 0.0004
Next Token : filter, Posbility: 0.0005
Next Token : and, Posbility: 0.0012
Next Token : map, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map
 score:False
Error type: noerr
---------------------------
Next Token : i, Posbility: 0.0002
Next Token :  ((, Posbility: 0.0003
Next Token : 
, Posbility: 0.0006
Next Token : _, Posbility: 0.0015
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : id, Posbility: 0.0001
Next Token : Int, Posbility: 0.0001
Next Token : Option, Posbility: 0.0002
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token : function, Posbility: 0.0015
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0001
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0006
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0001
Next Token :  1, Posbility: 0.0002
Next Token :  true, Posbility: 0.0003
Next Token :  not, Posbility: 0.0008
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0002
Next Token : if, Posbility: 0.0002
Next Token : Option, Posbility: 0.0003
Next Token : (, Posbility: 0.0010
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :  *, Posbility: 0.0003
Next Token : ), Posbility: 0.0006
Next Token :  +, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : <, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4), Posbility: 0.0003
Next Token :  3), Posbility: 0.0005
Next Token :  , Posbility: 0.0015
Next Token :  2);, Posbility: 0.0052
Next Token :  2), Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0006
Next Token :  (*, Posbility: 0.0007
Next Token :  , Posbility: 0.0012
Next Token : 

, Posbility: 0.0075
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)

 score:False
Error type: noerr
---------------------------
Next Token : |, Posbility: 0.0006
Next Token : {, Posbility: 0.0014
Next Token : ;, Posbility: 0.0035
Next Token : end, Posbility: 0.0038
Next Token :   , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : =, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : ;, Posbility: 0.0006
Next Token : in, Posbility: 0.0006
Next Token : |, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : >>, Posbility: 0.0000
Next Token :  None, Posbility: 0.0000
Next Token : *, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : >, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |>
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fun, Posbility: 0.0001
Next Token :  Optional, Posbility: 0.0001
Next Token :  function, Posbility: 0.0002
Next Token :  Some, Posbility: 0.0015
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Function, Posbility: 0.0001
Next Token : Result, Posbility: 0.0002
Next Token : List, Posbility: 0.0003
Next Token : (, Posbility: 0.0004
Next Token : Option, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : bind, Posbility: 0.0003
Next Token : or, Posbility: 0.0004
Next Token : filter, Posbility: 0.0005
Next Token : and, Posbility: 0.0012
Next Token : map, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map
 score:False
Error type: noerr
---------------------------
Next Token : i, Posbility: 0.0002
Next Token :  ((, Posbility: 0.0003
Next Token : 
, Posbility: 0.0007
Next Token : _, Posbility: 0.0015
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : id, Posbility: 0.0000
Next Token : Option, Posbility: 0.0002
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token : function, Posbility: 0.0013
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0001
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0006
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ->, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ^, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0001
Next Token :  1, Posbility: 0.0002
Next Token :  true, Posbility: 0.0003
Next Token :  not, Posbility: 0.0008
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0002
Next Token : 2, Posbility: 0.0002
Next Token : Option, Posbility: 0.0003
Next Token : (, Posbility: 0.0009
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :  *, Posbility: 0.0004
Next Token : ), Posbility: 0.0006
Next Token :  +, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : <, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4), Posbility: 0.0003
Next Token :  3), Posbility: 0.0004
Next Token :  , Posbility: 0.0012
Next Token :  2);, Posbility: 0.0041
Next Token :  2), Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0005
Next Token :  (*, Posbility: 0.0005
Next Token :  , Posbility: 0.0012
Next Token : 

, Posbility: 0.0075
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)

 score:False
Error type: noerr
---------------------------
Next Token : |, Posbility: 0.0004
Next Token : {, Posbility: 0.0015
Next Token : end, Posbility: 0.0031
Next Token : ;, Posbility: 0.0038
Next Token :   , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : =, Posbility: 0.0001
Next Token : (, Posbility: 0.0004
Next Token : in, Posbility: 0.0004
Next Token : ;, Posbility: 0.0009
Next Token : |, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0000
Next Token : >>, Posbility: 0.0000
Next Token : *, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : >, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |>
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0001
Next Token :  Optional, Posbility: 0.0001
Next Token :  function, Posbility: 0.0002
Next Token :  Some, Posbility: 0.0013
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Function, Posbility: 0.0001
Next Token : Result, Posbility: 0.0002
Next Token : List, Posbility: 0.0004
Next Token : (, Posbility: 0.0005
Next Token : Option, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : bind, Posbility: 0.0003
Next Token : or, Posbility: 0.0003
Next Token : filter, Posbility: 0.0005
Next Token : and, Posbility: 0.0010
Next Token : map, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map
 score:False
Error type: noerr
---------------------------
Next Token : i, Posbility: 0.0002
Next Token :  ((, Posbility: 0.0002
Next Token : 
, Posbility: 0.0006
Next Token : _, Posbility: 0.0015
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : id, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : Option, Posbility: 0.0001
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : Fun, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token : function, Posbility: 0.0013
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0006
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ->, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0001
Next Token :  1, Posbility: 0.0002
Next Token :  true, Posbility: 0.0002
Next Token :  not, Posbility: 0.0006
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : 2, Posbility: 0.0002
Next Token : Option, Posbility: 0.0002
Next Token : (, Posbility: 0.0008
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token :  *, Posbility: 0.0003
Next Token : ), Posbility: 0.0005
Next Token :  +, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : <, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4), Posbility: 0.0003
Next Token :  3), Posbility: 0.0004
Next Token :  , Posbility: 0.0012
Next Token :  2);, Posbility: 0.0052
Next Token :  2), Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0006
Next Token :  (*, Posbility: 0.0006
Next Token :  , Posbility: 0.0010
Next Token : 

, Posbility: 0.0075
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)

 score:False
Error type: noerr
---------------------------
Next Token : |, Posbility: 0.0004
Next Token : {, Posbility: 0.0014
Next Token : end, Posbility: 0.0033
Next Token : ;, Posbility: 0.0040
Next Token :   , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : =, Posbility: 0.0001
Next Token : (, Posbility: 0.0004
Next Token : in, Posbility: 0.0004
Next Token : ;, Posbility: 0.0005
Next Token : |, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0000
Next Token : >>, Posbility: 0.0000
Next Token : *, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : >, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |>
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fun, Posbility: 0.0001
Next Token :  Optional, Posbility: 0.0001
Next Token :  function, Posbility: 0.0002
Next Token :  Some, Posbility: 0.0010
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Function, Posbility: 0.0001
Next Token : Result, Posbility: 0.0002
Next Token : (, Posbility: 0.0004
Next Token : List, Posbility: 0.0004
Next Token : Option, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : bind, Posbility: 0.0002
Next Token : or, Posbility: 0.0002
Next Token : filter, Posbility: 0.0004
Next Token : and, Posbility: 0.0008
Next Token : map, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map
 score:False
Error type: noerr
---------------------------
Next Token : i, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0002
Next Token : 
, Posbility: 0.0006
Next Token : _, Posbility: 0.0012
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : id, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : Option, Posbility: 0.0001
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : Fun, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token : function, Posbility: 0.0013
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0004
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ->, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0001
Next Token :  1, Posbility: 0.0002
Next Token :  true, Posbility: 0.0002
Next Token :  not, Posbility: 0.0006
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : Option, Posbility: 0.0002
Next Token : 2, Posbility: 0.0002
Next Token : (, Posbility: 0.0009
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :  *, Posbility: 0.0003
Next Token : ), Posbility: 0.0005
Next Token :  +, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : <, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4), Posbility: 0.0002
Next Token :  3), Posbility: 0.0004
Next Token :  , Posbility: 0.0012
Next Token :  2);, Posbility: 0.0052
Next Token :  2), Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0004
Next Token :  (*, Posbility: 0.0005
Next Token :  , Posbility: 0.0010
Next Token : 

, Posbility: 0.0046
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)

 score:False
Error type: noerr
---------------------------
Next Token : |, Posbility: 0.0003
Next Token : {, Posbility: 0.0012
Next Token : end, Posbility: 0.0031
Next Token : ;, Posbility: 0.0038
Next Token :   , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : in, Posbility: 0.0003
Next Token : ;, Posbility: 0.0007
Next Token : |, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : >>, Posbility: 0.0000
Next Token :  None, Posbility: 0.0000
Next Token : *, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : >, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |>
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0001
Next Token :  Optional, Posbility: 0.0001
Next Token :  function, Posbility: 0.0002
Next Token :  Some, Posbility: 0.0010
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Function, Posbility: 0.0001
Next Token : Result, Posbility: 0.0002
Next Token : List, Posbility: 0.0003
Next Token : (, Posbility: 0.0004
Next Token : Option, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : or, Posbility: 0.0002
Next Token : bind, Posbility: 0.0002
Next Token : filter, Posbility: 0.0004
Next Token : and, Posbility: 0.0008
Next Token : map, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map
 score:False
Error type: noerr
---------------------------
Next Token : i, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0002
Next Token : 
, Posbility: 0.0006
Next Token : _, Posbility: 0.0012
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : id, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : Option, Posbility: 0.0001
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : Fun, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token : function, Posbility: 0.0012
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0004
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ->, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0001
Next Token :  1, Posbility: 0.0002
Next Token :  true, Posbility: 0.0002
Next Token :  not, Posbility: 0.0006
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : 2, Posbility: 0.0002
Next Token : Option, Posbility: 0.0002
Next Token : (, Posbility: 0.0009
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token :  *, Posbility: 0.0003
Next Token : ), Posbility: 0.0004
Next Token :  +, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : <, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4), Posbility: 0.0002
Next Token :  3), Posbility: 0.0004
Next Token :  , Posbility: 0.0012
Next Token :  2);, Posbility: 0.0052
Next Token :  2), Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0005
Next Token :  (*, Posbility: 0.0005
Next Token :  , Posbility: 0.0010
Next Token : 

, Posbility: 0.0052
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)

 score:False
Error type: noerr
---------------------------
Next Token : when, Posbility: 0.0003
Next Token : {, Posbility: 0.0013
Next Token : end, Posbility: 0.0024
Next Token : ;, Posbility: 0.0031
Next Token :   , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : in, Posbility: 0.0003
Next Token : ;, Posbility: 0.0008
Next Token : |, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  true, Posbility: 0.0000
Next Token : >>, Posbility: 0.0000
Next Token : *, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : >, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |>
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Optional, Posbility: 0.0001
Next Token :  fun, Posbility: 0.0001
Next Token :  function, Posbility: 0.0002
Next Token :  Some, Posbility: 0.0010
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Function, Posbility: 0.0001
Next Token : Result, Posbility: 0.0002
Next Token : List, Posbility: 0.0003
Next Token : (, Posbility: 0.0003
Next Token : Option, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : or, Posbility: 0.0002
Next Token : bind, Posbility: 0.0002
Next Token : filter, Posbility: 0.0003
Next Token : and, Posbility: 0.0006
Next Token : map, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map
 score:False
Error type: noerr
---------------------------
Next Token : i, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0002
Next Token : 
, Posbility: 0.0005
Next Token : _, Posbility: 0.0010
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : id, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : Option, Posbility: 0.0001
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : Fun, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token : function, Posbility: 0.0012
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0001
Next Token :  1, Posbility: 0.0002
Next Token :  true, Posbility: 0.0002
Next Token :  not, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : Option, Posbility: 0.0001
Next Token : 2, Posbility: 0.0002
Next Token : (, Posbility: 0.0008
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token :  *, Posbility: 0.0003
Next Token : ), Posbility: 0.0004
Next Token :  +, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : <, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4), Posbility: 0.0002
Next Token :  3), Posbility: 0.0003
Next Token :  , Posbility: 0.0009
Next Token :  2);, Posbility: 0.0067
Next Token :  2), Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0004
Next Token :  (*, Posbility: 0.0004
Next Token :  , Posbility: 0.0009
Next Token : 

, Posbility: 0.0052
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)

 score:False
Error type: noerr
---------------------------
Next Token : |, Posbility: 0.0003
Next Token : {, Posbility: 0.0011
Next Token : end, Posbility: 0.0028
Next Token : ;, Posbility: 0.0045
Next Token :   , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : in, Posbility: 0.0003
Next Token : ;, Posbility: 0.0008
Next Token : |, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0000
Next Token : >>, Posbility: 0.0000
Next Token : *, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : >, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |>
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Optional, Posbility: 0.0001
Next Token :  fun, Posbility: 0.0001
Next Token :  function, Posbility: 0.0002
Next Token :  Some, Posbility: 0.0009
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Function, Posbility: 0.0001
Next Token : Result, Posbility: 0.0001
Next Token : List, Posbility: 0.0003
Next Token : (, Posbility: 0.0003
Next Token : Option, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : flat, Posbility: 0.0002
Next Token : bind, Posbility: 0.0002
Next Token : filter, Posbility: 0.0003
Next Token : and, Posbility: 0.0006
Next Token : map, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0002
Next Token : 
, Posbility: 0.0005
Next Token : _, Posbility: 0.0010
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : id, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : Option, Posbility: 0.0001
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token : function, Posbility: 0.0012
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  true, Posbility: 0.0001
Next Token :  not, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token : Option, Posbility: 0.0001
Next Token : (, Posbility: 0.0007
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token :  *, Posbility: 0.0003
Next Token : ), Posbility: 0.0004
Next Token :  +, Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : <, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4), Posbility: 0.0002
Next Token :  3), Posbility: 0.0003
Next Token :  , Posbility: 0.0009
Next Token :  2);, Posbility: 0.0041
Next Token :  2), Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0003
Next Token :  (*, Posbility: 0.0004
Next Token :  , Posbility: 0.0007
Next Token : 

, Posbility: 0.0046
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)

 score:False
Error type: noerr
---------------------------
Next Token : when, Posbility: 0.0002
Next Token : {, Posbility: 0.0012
Next Token : end, Posbility: 0.0026
Next Token : ;, Posbility: 0.0038
Next Token :   , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : in, Posbility: 0.0003
Next Token : ;, Posbility: 0.0007
Next Token : |, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : >`, Posbility: 0.0000
Next Token : >>, Posbility: 0.0000
Next Token : *, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : >, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |>
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0000
Next Token :  Optional, Posbility: 0.0000
Next Token :  function, Posbility: 0.0001
Next Token :  Some, Posbility: 0.0008
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Function, Posbility: 0.0001
Next Token : Result, Posbility: 0.0001
Next Token : List, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : Option, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : bind, Posbility: 0.0002
Next Token : flat, Posbility: 0.0002
Next Token : filter, Posbility: 0.0003
Next Token : and, Posbility: 0.0006
Next Token : map, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0002
Next Token : 
, Posbility: 0.0004
Next Token : _, Posbility: 0.0009
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : id, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : Option, Posbility: 0.0001
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : Fun, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token : function, Posbility: 0.0012
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ->, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  true, Posbility: 0.0002
Next Token :  not, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : Option, Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0007
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :  *, Posbility: 0.0003
Next Token : ), Posbility: 0.0003
Next Token :  +, Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : <, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4), Posbility: 0.0002
Next Token :  3), Posbility: 0.0003
Next Token :  , Posbility: 0.0009
Next Token :  2);, Posbility: 0.0052
Next Token :  2), Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0003
Next Token :  (*, Posbility: 0.0004
Next Token :  , Posbility: 0.0007
Next Token : 

, Posbility: 0.0036
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)

 score:False
Error type: noerr
---------------------------
Next Token : |, Posbility: 0.0004
Next Token : {, Posbility: 0.0006
Next Token : end, Posbility: 0.0031
Next Token : ;, Posbility: 0.0033
Next Token :   , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : in, Posbility: 0.0003
Next Token : ;, Posbility: 0.0006
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : >`, Posbility: 0.0000
Next Token : >>, Posbility: 0.0000
Next Token : *, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : >, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |>
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Optional, Posbility: 0.0000
Next Token :  fun, Posbility: 0.0000
Next Token :  function, Posbility: 0.0001
Next Token :  Some, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Function, Posbility: 0.0001
Next Token : Result, Posbility: 0.0001
Next Token : List, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : Option, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : flat, Posbility: 0.0002
Next Token : bind, Posbility: 0.0002
Next Token : filter, Posbility: 0.0003
Next Token : and, Posbility: 0.0006
Next Token : map, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0002
Next Token : 
, Posbility: 0.0004
Next Token : _, Posbility: 0.0008
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : id, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : Option, Posbility: 0.0001
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : Fun, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token : function, Posbility: 0.0010
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  true, Posbility: 0.0001
Next Token :  not, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : Option, Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0006
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token :  *, Posbility: 0.0002
Next Token : ), Posbility: 0.0002
Next Token :  +, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : <, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4), Posbility: 0.0002
Next Token :  3), Posbility: 0.0003
Next Token :  , Posbility: 0.0009
Next Token :  2);, Posbility: 0.0067
Next Token :  2), Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0002
Next Token :  (*, Posbility: 0.0003
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0032
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)

 score:False
Error type: noerr
---------------------------
Next Token : when, Posbility: 0.0003
Next Token : {, Posbility: 0.0007
Next Token : end, Posbility: 0.0026
Next Token : ;, Posbility: 0.0040
Next Token :   , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : in, Posbility: 0.0003
Next Token : ;, Posbility: 0.0007
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : >`, Posbility: 0.0000
Next Token : >>, Posbility: 0.0000
Next Token : *, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : >, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |>
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0000
Next Token :  Optional, Posbility: 0.0000
Next Token :  function, Posbility: 0.0001
Next Token :  Some, Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Function, Posbility: 0.0001
Next Token : Result, Posbility: 0.0001
Next Token : List, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : Option, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : bind, Posbility: 0.0002
Next Token : flat, Posbility: 0.0002
Next Token : filter, Posbility: 0.0003
Next Token : and, Posbility: 0.0006
Next Token : map, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token : _, Posbility: 0.0008
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : id, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : Option, Posbility: 0.0001
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : Fun, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token : function, Posbility: 0.0012
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  true, Posbility: 0.0001
Next Token :  not, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : Option, Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0006
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token : ), Posbility: 0.0002
Next Token :  *, Posbility: 0.0002
Next Token :  +, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : <, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4), Posbility: 0.0002
Next Token :  3), Posbility: 0.0003
Next Token :  , Posbility: 0.0009
Next Token :  2);, Posbility: 0.0041
Next Token :  2), Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0003
Next Token :  (*, Posbility: 0.0005
Next Token :  , Posbility: 0.0006
Next Token : 

, Posbility: 0.0032
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)

 score:False
Error type: noerr
---------------------------
Next Token : when, Posbility: 0.0003
Next Token : {, Posbility: 0.0010
Next Token : end, Posbility: 0.0026
Next Token : ;, Posbility: 0.0031
Next Token :   , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : in, Posbility: 0.0003
Next Token : ;, Posbility: 0.0005
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : >`, Posbility: 0.0000
Next Token : >>, Posbility: 0.0000
Next Token : *, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : >, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |>
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0000
Next Token :  fun, Posbility: 0.0000
Next Token :  function, Posbility: 0.0001
Next Token :  Some, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Function, Posbility: 0.0001
Next Token : Result, Posbility: 0.0001
Next Token : List, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : Option, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : bind, Posbility: 0.0001
Next Token : flat, Posbility: 0.0001
Next Token : filter, Posbility: 0.0002
Next Token : and, Posbility: 0.0003
Next Token : map, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token : _, Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : id, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : Option, Posbility: 0.0001
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : Fun, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token : function, Posbility: 0.0010
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0001
Next Token :  true, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  not, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token : Option, Posbility: 0.0001
Next Token : (, Posbility: 0.0006
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token :  *, Posbility: 0.0002
Next Token : ), Posbility: 0.0002
Next Token :  +, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : <, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4), Posbility: 0.0002
Next Token :  3), Posbility: 0.0003
Next Token :  , Posbility: 0.0009
Next Token :  2);, Posbility: 0.0041
Next Token :  2), Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0002
Next Token :  (*, Posbility: 0.0004
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0041
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)

 score:False
Error type: noerr
---------------------------
Next Token : |, Posbility: 0.0004
Next Token : {, Posbility: 0.0007
Next Token : end, Posbility: 0.0024
Next Token : ;, Posbility: 0.0038
Next Token :   , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : in, Posbility: 0.0003
Next Token : ;, Posbility: 0.0005
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |
 score:False
Error type: noerr
---------------------------
Next Token :  None, Posbility: 0.0000
Next Token : >>, Posbility: 0.0000
Next Token : *, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : >, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |>
 score:False
Error type: noerr
---------------------------
Next Token :  None, Posbility: 0.0000
Next Token :  Optional, Posbility: 0.0000
Next Token :  function, Posbility: 0.0001
Next Token :  Some, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> 
 score:False
Error type: noerr
---------------------------
Next Token : Function, Posbility: 0.0001
Next Token : Result, Posbility: 0.0001
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : Option, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.
 score:False
Error type: noerr
---------------------------
Next Token : bind, Posbility: 0.0001
Next Token : flat, Posbility: 0.0001
Next Token : filter, Posbility: 0.0002
Next Token : and, Posbility: 0.0004
Next Token : map, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token : _, Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : id, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : Option, Posbility: 0.0001
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (
 score:False
Error type: noerr
---------------------------
Next Token : Fun, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token : function, Posbility: 0.0009
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun 
 score:False
Error type: noerr
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x ->
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0001
Next Token :  true, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  not, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> 
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token : Option, Posbility: 0.0001
Next Token : (, Posbility: 0.0006
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x
 score:False
Error type: noerr
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token :  *, Posbility: 0.0002
Next Token : ), Posbility: 0.0003
Next Token :  +, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x 
 score:False
Error type: noerr
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : <, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^
 score:False
Error type: noerr
---------------------------
Next Token :  4), Posbility: 0.0002
Next Token :  3), Posbility: 0.0003
Next Token :  , Posbility: 0.0009
Next Token :  2);, Posbility: 0.0052
Next Token :  2), Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0002
Next Token :  (*, Posbility: 0.0005
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0025
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)

 score:False
Error type: noerr
---------------------------
Next Token : |, Posbility: 0.0002
Next Token : {, Posbility: 0.0005
Next Token : end, Posbility: 0.0022
Next Token : ;, Posbility: 0.0034
Next Token :   , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : in, Posbility: 0.0002
Next Token : ;, Posbility: 0.0004
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |
 score:False
Error type: noerr
---------------------------
Next Token : >`, Posbility: 0.0000
Next Token : >>, Posbility: 0.0000
Next Token : *, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : >, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |>
 score:False
Error type: noerr
---------------------------
Next Token :  None, Posbility: 0.0000
Next Token :  Optional, Posbility: 0.0000
Next Token :  function, Posbility: 0.0001
Next Token :  Some, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> 
 score:False
Error type: noerr
---------------------------
Next Token : Function, Posbility: 0.0000
Next Token : Result, Posbility: 0.0001
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : Option, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.
 score:False
Error type: noerr
---------------------------
Next Token : bind, Posbility: 0.0001
Next Token : flat, Posbility: 0.0001
Next Token : filter, Posbility: 0.0002
Next Token : and, Posbility: 0.0004
Next Token : map, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token : _, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : id, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : Option, Posbility: 0.0000
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (
 score:False
Error type: noerr
---------------------------
Next Token : Fun, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : fn, Posbility: 0.0001
Next Token : function, Posbility: 0.0012
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun 
 score:False
Error type: noerr
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x ->
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  true, Posbility: 0.0001
Next Token :  not, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> 
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token : Option, Posbility: 0.0001
Next Token : (, Posbility: 0.0006
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x
 score:False
Error type: noerr
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token :  *, Posbility: 0.0002
Next Token : ), Posbility: 0.0003
Next Token :  +, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x 
 score:False
Error type: noerr
---------------------------
Next Token : <, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^
 score:False
Error type: noerr
---------------------------
Next Token :  4), Posbility: 0.0002
Next Token :  3), Posbility: 0.0003
Next Token :  , Posbility: 0.0009
Next Token :  2);, Posbility: 0.0041
Next Token :  2), Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0002
Next Token :  (*, Posbility: 0.0003
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0032
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)

 score:False
Error type: noerr
---------------------------
Next Token : |, Posbility: 0.0003
Next Token : {, Posbility: 0.0008
Next Token : ;, Posbility: 0.0026
Next Token : end, Posbility: 0.0026
Next Token :   , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : in, Posbility: 0.0003
Next Token : ;, Posbility: 0.0005
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |
 score:False
Error type: noerr
---------------------------
Next Token : >`, Posbility: 0.0000
Next Token : >>, Posbility: 0.0000
Next Token : *, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : >, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |>
 score:False
Error type: noerr
---------------------------
Next Token :  None, Posbility: 0.0000
Next Token :  fun, Posbility: 0.0000
Next Token :  function, Posbility: 0.0001
Next Token :  Some, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> 
 score:False
Error type: noerr
---------------------------
Next Token : Function, Posbility: 0.0000
Next Token : Result, Posbility: 0.0001
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : Option, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.
 score:False
Error type: noerr
---------------------------
Next Token : bind, Posbility: 0.0001
Next Token : flat, Posbility: 0.0001
Next Token : filter, Posbility: 0.0001
Next Token : and, Posbility: 0.0002
Next Token : map, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token : _, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : id, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : Option, Posbility: 0.0000
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (
 score:False
Error type: noerr
---------------------------
Next Token : Fun, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token : function, Posbility: 0.0009
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun 
 score:False
Error type: noerr
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x 
 score:False
Error type: noerr
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x ->
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0001
Next Token :  true, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  not, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> 
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : Option, Posbility: 0.0001
Next Token : (, Posbility: 0.0006
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x
 score:False
Error type: noerr
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token :  *, Posbility: 0.0002
Next Token : ), Posbility: 0.0002
Next Token :  +, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x 
 score:False
Error type: noerr
---------------------------
Next Token : <, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^
 score:False
Error type: noerr
---------------------------
Next Token :  4), Posbility: 0.0002
Next Token :  3), Posbility: 0.0003
Next Token :  , Posbility: 0.0009
Next Token :  2);, Posbility: 0.0052
Next Token :  2), Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given number can be represented as the difference of two squares or not. *)
let is_square_diff = function
  | x -> x ^ 2 = x
  | _ -> false
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
  |> Option.map (fun x -> x ^ 2)
 score:False


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>