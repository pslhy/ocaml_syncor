code:
 (* Write a function to find the shared elements from the given two lists. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0089
Next Token :  list, Posbility: 0.0100
Next Token :  find, Posbility: 0.0449
Next Token :  rec, Posbility: 0.4258
Next Token :  , Posbility: 0.4258
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0171
Next Token : intersect, Posbility: 0.0220
Next Token : diff, Posbility: 0.0596
Next Token : common, Posbility: 0.0981
Next Token : shared, Posbility: 0.5664
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0053
Next Token : (, Posbility: 0.0068
Next Token :  , Posbility: 0.1206
Next Token :  =, Posbility: 0.2891
Next Token : _, Posbility: 0.5430
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : elt, Posbility: 0.0149
Next Token : elem, Posbility: 0.0245
Next Token : element, Posbility: 0.0278
Next Token : list, Posbility: 0.0757
Next Token : elements, Posbility: 0.7148
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0610
Next Token :  l, Posbility: 0.0610
Next Token :  a, Posbility: 0.0781
Next Token :  =, Posbility: 0.2129
Next Token :  , Posbility: 0.4512
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0498
Next Token : ls, Posbility: 0.0498
Next Token : lst, Posbility: 0.0820
Next Token : (, Posbility: 0.1191
Next Token : x, Posbility: 0.5352
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0024
Next Token : 1, Posbility: 0.0045
Next Token :  =, Posbility: 0.0095
Next Token :  , Posbility: 0.3125
Next Token : s, Posbility: 0.6641
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0045
Next Token : _, Posbility: 0.0095
Next Token :  =, Posbility: 0.0330
Next Token : 1, Posbility: 0.0898
Next Token :  , Posbility: 0.8516
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : _, Posbility: 0.0004
Next Token : x, Posbility: 0.0015
Next Token : y, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0041
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0009
Next Token :   , Posbility: 0.0011
Next Token : 
, Posbility: 0.0024
Next Token :  , Posbility: 0.0157
Next Token :  =, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0052
Next Token :  ..., Posbility: 0.0052
Next Token :  match, Posbility: 0.0160
Next Token :  , Posbility: 0.1719
Next Token : 
, Posbility: 0.7695
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0074
Next Token : let, Posbility: 0.0095
Next Token :    , Posbility: 0.0122
Next Token :     , Posbility: 0.1021
Next Token :   , Posbility: 0.8555
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Set, Posbility: 0.0227
Next Token : x, Posbility: 0.0374
Next Token : match, Posbility: 0.0791
Next Token : List, Posbility: 0.1016
Next Token : let, Posbility: 0.6602
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0162
Next Token :  len, Posbility: 0.0162
Next Token :  open, Posbility: 0.0439
Next Token :  , Posbility: 0.3262
Next Token :  rec, Posbility: 0.4180
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  go, Posbility: 0.0410
Next Token :  rec, Posbility: 0.0464
Next Token :  loop, Posbility: 0.0864
Next Token :  find, Posbility: 0.1260
Next Token :  , Posbility: 0.4980
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : core, Posbility: 0.0398
Next Token : aux, Posbility: 0.0840
Next Token : f, Posbility: 0.0952
Next Token : shared, Posbility: 0.1079
Next Token : helper, Posbility: 0.2012
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0183
Next Token :  acc, Posbility: 0.0236
Next Token :  i, Posbility: 0.1055
Next Token :  =, Posbility: 0.1357
Next Token :  , Posbility: 0.6055
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : lst, Posbility: 0.0137
Next Token : (), Posbility: 0.0176
Next Token : y, Posbility: 0.0226
Next Token : (, Posbility: 0.0786
Next Token : x, Posbility: 0.7461
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0108
Next Token :  =, Posbility: 0.0123
Next Token : i, Posbility: 0.0201
Next Token :  , Posbility: 0.0703
Next Token : s, Posbility: 0.8594
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0104
Next Token :  acc, Posbility: 0.0133
Next Token : _, Posbility: 0.0410
Next Token :  =, Posbility: 0.1621
Next Token :  , Posbility: 0.7266
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : helper, Posbility: 0.0018
Next Token : visited, Posbility: 0.0018
Next Token : (, Posbility: 0.0050
Next Token : x, Posbility: 0.0173
Next Token : y, Posbility: 0.9492
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token :  , Posbility: 0.0005
Next Token :  =, Posbility: 0.0025
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0125
Next Token :  i, Posbility: 0.0718
Next Token :  acc, Posbility: 0.1953
Next Token :  , Posbility: 0.2500
Next Token :  =, Posbility: 0.3203
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0008
Next Token :  function, Posbility: 0.0034
Next Token :  match, Posbility: 0.0083
Next Token :  , Posbility: 0.0255
Next Token : 
, Posbility: 0.9570
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0019
Next Token :    , Posbility: 0.0027
Next Token :       , Posbility: 0.0122
Next Token :   , Posbility: 0.0138
Next Token :     , Posbility: 0.9688
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0042
Next Token : List, Posbility: 0.0078
Next Token : let, Posbility: 0.0947
Next Token : if, Posbility: 0.2578
Next Token : match, Posbility: 0.6172
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0013
Next Token : (, Posbility: 0.0015
Next Token : 
, Posbility: 0.0028
Next Token :  String, Posbility: 0.0028
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0013
Next Token : y, Posbility: 0.0153
Next Token : (, Posbility: 0.0684
Next Token : List, Posbility: 0.0684
Next Token : x, Posbility: 0.8320
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : ,, Posbility: 0.0004
Next Token :  with, Posbility: 0.0004
Next Token :  , Posbility: 0.0006
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0022
Next Token :  @, Posbility: 0.0037
Next Token :  , Posbility: 0.0061
Next Token : ,, Posbility: 0.0742
Next Token :  with, Posbility: 0.9062
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0013
Next Token :  , Posbility: 0.0065
Next Token :  [, Posbility: 0.0065
Next Token :  [], Posbility: 0.0200
Next Token : 
, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0005
Next Token :   , Posbility: 0.0005
Next Token :    , Posbility: 0.0011
Next Token :       , Posbility: 0.0598
Next Token :     , Posbility: 0.9375
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Nil, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : [, Posbility: 0.0107
Next Token : [], Posbility: 0.0289
Next Token : |, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0038
Next Token :  [, Posbility: 0.0103
Next Token :  nil, Posbility: 0.0103
Next Token :  , Posbility: 0.0461
Next Token :  [], Posbility: 0.9258
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  as, Posbility: 0.0052
Next Token :  =>, Posbility: 0.0060
Next Token :  when, Posbility: 0.0077
Next Token :  |, Posbility: 0.0728
Next Token :  , Posbility: 0.8867
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0005
Next Token : _, Posbility: 0.0008
Next Token : if, Posbility: 0.0019
Next Token : ::, Posbility: 0.0085
Next Token : ->, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0074
Next Token : 
, Posbility: 0.0547
Next Token :  match, Posbility: 0.0547
Next Token :  [], Posbility: 0.1914
Next Token :  , Posbility: 0.6680
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0187
Next Token : (, Posbility: 0.0271
Next Token : helper, Posbility: 0.0308
Next Token : return, Posbility: 0.0649
Next Token : y, Posbility: 0.7930
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0023
Next Token : ;, Posbility: 0.0081
Next Token :  , Posbility: 0.0104
Next Token :  |, Posbility: 0.0361
Next Token : 
, Posbility: 0.9336
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :       , Posbility: 0.0001
Next Token :    , Posbility: 0.0006
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0000
Next Token : //, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : ;, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0093
Next Token :  el, Posbility: 0.0119
Next Token :  [], Posbility: 0.0417
Next Token :  [, Posbility: 0.0688
Next Token :  , Posbility: 0.8359
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0254
Next Token : h, Posbility: 0.0540
Next Token : hd, Posbility: 0.0693
Next Token : _, Posbility: 0.2129
Next Token : x, Posbility: 0.5781
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0051
Next Token : 1, Posbility: 0.0051
Next Token : s, Posbility: 0.0292
Next Token : ::, Posbility: 0.3555
Next Token :  , Posbility: 0.5859
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : <, Posbility: 0.0002
Next Token : :, Posbility: 0.0005
Next Token : ^, Posbility: 0.0005
Next Token : ->, Posbility: 0.0076
Next Token : ::, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  tx, Posbility: 0.0016
Next Token :  new, Posbility: 0.0024
Next Token :  [], Posbility: 0.0034
Next Token :  rest, Posbility: 0.1455
Next Token :  , Posbility: 0.8398
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : t, Posbility: 0.0111
Next Token : y, Posbility: 0.0126
Next Token : tail, Posbility: 0.0161
Next Token : _, Posbility: 0.0498
Next Token : x, Posbility: 0.8828
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0005
Next Token : x, Posbility: 0.0012
Next Token : _, Posbility: 0.0024
Next Token : ', Posbility: 0.0052
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  when, Posbility: 0.0513
Next Token : _, Posbility: 0.0581
Next Token : 1, Posbility: 0.0845
Next Token : ', Posbility: 0.1787
Next Token :  , Posbility: 0.5508
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : -, Posbility: 0.0008
Next Token : if, Posbility: 0.0015
Next Token : ::, Posbility: 0.0019
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0005
Next Token :   , Posbility: 0.0011
Next Token :  match, Posbility: 0.0947
Next Token :  , Posbility: 0.2002
Next Token : 
, Posbility: 0.6992
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :          , Posbility: 0.0051
Next Token :           , Posbility: 0.0058
Next Token : 	, Posbility: 0.0058
Next Token :       , Posbility: 0.1157
Next Token :         , Posbility: 0.8555
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0110
Next Token : helper, Posbility: 0.0181
Next Token : let, Posbility: 0.2207
Next Token : match, Posbility: 0.3633
Next Token : if, Posbility: 0.3633
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0058
Next Token :  !, Posbility: 0.0139
Next Token :  not, Posbility: 0.0378
Next Token :  String, Posbility: 0.0486
Next Token :  , Posbility: 0.8594
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Contains, Posbility: 0.0139
Next Token : (, Posbility: 0.0547
Next Token : y, Posbility: 0.1689
Next Token : x, Posbility: 0.2168
Next Token : List, Posbility: 0.4590
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Compare, Posbility: 0.0003
Next Token : (, Posbility: 0.0004
Next Token : s, Posbility: 0.0013
Next Token : _, Posbility: 0.0022
Next Token : ., Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : find, Posbility: 0.0127
Next Token : exists, Posbility: 0.0269
Next Token : contains, Posbility: 0.0503
Next Token : member, Posbility: 0.1064
Next Token : mem, Posbility: 0.7852
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0013
Next Token : (, Posbility: 0.0021
Next Token : x, Posbility: 0.0045
Next Token : _, Posbility: 0.0177
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : <, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0101
Next Token : y, Posbility: 0.0752
Next Token : x, Posbility: 0.9141
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ?, Posbility: 0.0001
Next Token :  ~, Posbility: 0.0002
Next Token : y, Posbility: 0.0003
Next Token : s, Posbility: 0.0032
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ::, Posbility: 0.0001
Next Token : <, Posbility: 0.0002
Next Token : (, Posbility: 0.0015
Next Token : x, Posbility: 0.0085
Next Token : y, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  then, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  &&, Posbility: 0.0030
Next Token :  =, Posbility: 0.0082
Next Token :  with, Posbility: 0.0106
Next Token : 
, Posbility: 0.0136
Next Token :  then, Posbility: 0.9570
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0006
Next Token :  Some, Posbility: 0.0006
Next Token :  {, Posbility: 0.0006
Next Token : 
, Posbility: 0.3750
Next Token :  , Posbility: 0.6211
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0061
Next Token : (, Posbility: 0.0166
Next Token : y, Posbility: 0.0166
Next Token : x, Posbility: 0.0452
Next Token : helper, Posbility: 0.9102
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0005
Next Token : (, Posbility: 0.0012
Next Token :  [, Posbility: 0.0013
Next Token :  ~, Posbility: 0.0022
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : helper, Posbility: 0.0000
Next Token : tail, Posbility: 0.0000
Next Token : y, Posbility: 0.0066
Next Token : (, Posbility: 0.0178
Next Token : x, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Next Token :  , Posbility: 0.0012
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token :  ~, Posbility: 0.0002
Next Token :  [, Posbility: 0.0025
Next Token :  [], Posbility: 0.0032
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([, Posbility: 0.0002
Next Token : helper, Posbility: 0.0018
Next Token : x, Posbility: 0.0132
Next Token : (, Posbility: 0.2637
Next Token : y, Posbility: 0.7188
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ++, Posbility: 0.0040
Next Token : ;, Posbility: 0.0045
Next Token :  , Posbility: 0.0203
Next Token :  else, Posbility: 0.3594
Next Token : 
, Posbility: 0.5938
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :             , Posbility: 0.0021
Next Token :           , Posbility: 0.0021
Next Token :       , Posbility: 0.0035
Next Token :     , Posbility: 0.0139
Next Token :         , Posbility: 0.9727
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : [, Posbility: 0.0001
Next Token : elif, Posbility: 0.0002
Next Token : |, Posbility: 0.0003
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys
        else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0012
Next Token :  {, Posbility: 0.0014
Next Token :  match, Posbility: 0.0020
Next Token : 
, Posbility: 0.0596
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys
        else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0156
Next Token : List, Posbility: 0.0156
Next Token : if, Posbility: 0.0256
Next Token : x, Posbility: 0.0698
Next Token : helper, Posbility: 0.8516
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys
        else helper
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0013
Next Token : (, Posbility: 0.0021
Next Token :  ~, Posbility: 0.0021
Next Token :  [, Posbility: 0.0109
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys
        else helper 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0005
Next Token : helper, Posbility: 0.0013
Next Token : y, Posbility: 0.0437
Next Token : (, Posbility: 0.0723
Next Token : x, Posbility: 0.8789
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys
        else helper x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : sl, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0052
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys
        else helper xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0020
Next Token :  [], Posbility: 0.0026
Next Token : 
, Posbility: 0.0043
Next Token :  [, Posbility: 0.0591
Next Token :  , Posbility: 0.9258
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys
        else helper xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : helper, Posbility: 0.0075
Next Token : List, Posbility: 0.0096
Next Token : y, Posbility: 0.0337
Next Token : x, Posbility: 0.0630
Next Token : (, Posbility: 0.8672
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys
        else helper xs (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : filter, Posbility: 0.0142
Next Token : y, Posbility: 0.0635
Next Token : helper, Posbility: 0.1191
Next Token : List, Posbility: 0.3672
Next Token : x, Posbility: 0.3672
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys
        else helper xs (x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  +, Posbility: 0.0001
Next Token : :, Posbility: 0.0021
Next Token : ::, Posbility: 0.0417
Next Token : s, Posbility: 0.1138
Next Token :  , Posbility: 0.8398
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys
        else helper xs (x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : ^, Posbility: 0.0001
Next Token : @@, Posbility: 0.0002
Next Token : :, Posbility: 0.0041
Next Token : ::, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys
        else helper xs (x ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0004
Next Token :  !, Posbility: 0.0004
Next Token : ., Posbility: 0.0006
Next Token : !, Posbility: 0.0006
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys
        else helper xs (x :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0061
Next Token : (, Posbility: 0.0166
Next Token : helper, Posbility: 0.0166
Next Token : x, Posbility: 0.0452
Next Token : y, Posbility: 0.9102
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys
        else helper xs (x :: y
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : st, Posbility: 0.0000
Next Token : );, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : ), Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys
        else helper xs (x :: ys
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  @, Posbility: 0.0002
Next Token : )), Posbility: 0.0005
Next Token :  , Posbility: 0.0015
Next Token : );, Posbility: 0.0179
Next Token : ), Posbility: 0.9805
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys
        else helper xs (x :: ys)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0007
Next Token :  , Posbility: 0.0012
Next Token : 

, Posbility: 0.0096
Next Token :  in, Posbility: 0.1177
Next Token : 
, Posbility: 0.8672
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys
        else helper xs (x :: ys)

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0052
Next Token :         , Posbility: 0.0085
Next Token :    , Posbility: 0.0811
Next Token :     , Posbility: 0.1338
Next Token :   , Posbility: 0.7695
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys
        else helper xs (x :: ys)
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  then, Posbility: 0.0002
Next Token : then, Posbility: 0.0045
Next Token :  in, Posbility: 0.0058
Next Token : end, Posbility: 0.0139
Next Token : in, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys
        else helper xs (x :: ys)
  in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  (*, Posbility: 0.0001
Next Token :   , Posbility: 0.0016
Next Token : 

, Posbility: 0.0024
Next Token :  , Posbility: 0.0330
Next Token : 
, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys
        else helper xs (x :: ys)
  in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0003
Next Token :    , Posbility: 0.0013
Next Token :       , Posbility: 0.0015
Next Token :     , Posbility: 0.0259
Next Token :   , Posbility: 0.9688
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys
        else helper xs (x :: ys)
  in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0061
Next Token : (, Posbility: 0.0101
Next Token : match, Posbility: 0.0167
Next Token : let, Posbility: 0.0276
Next Token : helper, Posbility: 0.9141
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys
        else helper xs (x :: ys)
  in
  helper
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0008
Next Token :  [, Posbility: 0.0015
Next Token :  ~, Posbility: 0.0017
Next Token :  [], Posbility: 0.0085
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys
        else helper xs (x :: ys)
  in
  helper 
 score:False
Error type: noerr
---------------------------
Next Token : ([], Posbility: 0.0000
Next Token : List, Posbility: 0.0007
Next Token : (, Posbility: 0.0025
Next Token : y, Posbility: 0.0032
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys
        else helper xs (x :: ys)
  in
  helper x
 score:False
Error type: noerr
---------------------------
Next Token :  [], Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys
        else helper xs (x :: ys)
  in
  helper xs
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0003
Next Token : 
, Posbility: 0.0006
Next Token : ., Posbility: 0.0015
Next Token :  [], Posbility: 0.0259
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys
        else helper xs (x :: ys)
  in
  helper xs 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : x, Posbility: 0.0003
Next Token : ([], Posbility: 0.0009
Next Token : (, Posbility: 0.0067
Next Token : y, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys
        else helper xs (x :: ys)
  in
  helper xs y
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys
        else helper xs (x :: ys)
  in
  helper xs ys
 score:False
Error type: noerr
---------------------------
Next Token : , Posbility: 0.0018
Next Token :  , Posbility: 0.0048
Next Token : ;, Posbility: 0.0130
Next Token : 
, Posbility: 0.2617
Next Token : 

, Posbility: 0.7109
---------------------------
code:
 (* Write a function to find the shared elements from the given two lists. *)
let shared_elements xs ys =
  let rec helper xs ys =
    match xs with
    | [] -> ys
    | x :: xs ->
        if List.mem x ys then helper xs ys
        else helper xs (x :: ys)
  in
  helper xs ys


 score:True
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END and No Syntax Error--------

processing time : :44.08188986778259

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>