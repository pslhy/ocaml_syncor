code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  con, Posbility: 0.0151
Next Token :  get, Posbility: 0.0249
Next Token :  all, Posbility: 0.0249
Next Token :  , Posbility: 0.1846
Next Token :  rec, Posbility: 0.6445
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  get, Posbility: 0.0383
Next Token :  list, Posbility: 0.0435
Next Token :  all, Posbility: 0.0559
Next Token :  find, Posbility: 0.0635
Next Token :  , Posbility: 0.4668
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : split, Posbility: 0.0222
Next Token : gen, Posbility: 0.0222
Next Token : helper, Posbility: 0.0415
Next Token : cons, Posbility: 0.1279
Next Token : pairs, Posbility: 0.3477
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0109
Next Token :  i, Posbility: 0.0140
Next Token : _, Posbility: 0.1934
Next Token :  , Posbility: 0.2812
Next Token :  =, Posbility: 0.4102
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fn, Posbility: 0.0173
Next Token :  fun, Posbility: 0.0471
Next Token :  , Posbility: 0.0532
Next Token : 
, Posbility: 0.1279
Next Token :  function, Posbility: 0.7344
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0036
Next Token : (, Posbility: 0.0060
Next Token :  [], Posbility: 0.0439
Next Token :  , Posbility: 0.1357
Next Token : 
, Posbility: 0.7812
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0135
Next Token :         , Posbility: 0.0197
Next Token : |, Posbility: 0.0605
Next Token :     , Posbility: 0.1133
Next Token :   , Posbility: 0.7383
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : l, Posbility: 0.0020
Next Token : (, Posbility: 0.0100
Next Token : [, Posbility: 0.0272
Next Token : [], Posbility: 0.0396
Next Token : |, Posbility: 0.9023
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0009
Next Token :  nil, Posbility: 0.0010
Next Token :  [, Posbility: 0.0220
Next Token :  , Posbility: 0.0361
Next Token :  [], Posbility: 0.9336
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0066
Next Token :    , Posbility: 0.0075
Next Token :  |, Posbility: 0.0085
Next Token :  as, Posbility: 0.0625
Next Token :  , Posbility: 0.8633
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0004
Next Token : :, Posbility: 0.0019
Next Token : _, Posbility: 0.0031
Next Token : ::, Posbility: 0.0140
Next Token : ->, Posbility: 0.9805
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0014
Next Token :  nil, Posbility: 0.0024
Next Token : 
, Posbility: 0.0039
Next Token :  , Posbility: 0.0289
Next Token :  [], Posbility: 0.9570
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0013
Next Token :    , Posbility: 0.0016
Next Token :   , Posbility: 0.0045
Next Token :  , Posbility: 0.0095
Next Token : 
, Posbility: 0.9688
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []

 score:False
Error type: noerr
---------------------------
Next Token : |, Posbility: 0.0000
Next Token : 	, Posbility: 0.0001
Next Token :       , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0001
Next Token : ;, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : let, Posbility: 0.0006
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0064
Next Token :  [], Posbility: 0.0082
Next Token :  a, Posbility: 0.0287
Next Token :  [, Posbility: 0.1650
Next Token :  , Posbility: 0.7383
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0569
Next Token : hd, Posbility: 0.0569
Next Token : (, Posbility: 0.0732
Next Token : h, Posbility: 0.0830
Next Token : x, Posbility: 0.6133
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0024
Next Token : :, Posbility: 0.0140
Next Token : s, Posbility: 0.0140
Next Token : ::, Posbility: 0.3613
Next Token :  , Posbility: 0.5977
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0001
Next Token : x, Posbility: 0.0012
Next Token : :, Posbility: 0.0028
Next Token : ->, Posbility: 0.0096
Next Token : ::, Posbility: 0.9844
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  list, Posbility: 0.0023
Next Token :  [], Posbility: 0.0039
Next Token :  l, Posbility: 0.0049
Next Token :  rest, Posbility: 0.0366
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : tail, Posbility: 0.0153
Next Token : t, Posbility: 0.0173
Next Token : _, Posbility: 0.0197
Next Token : y, Posbility: 0.0879
Next Token : x, Posbility: 0.8359
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0009
Next Token :  , Posbility: 0.0015
Next Token : _, Posbility: 0.0015
Next Token : ', Posbility: 0.0178
Next Token : s, Posbility: 0.9727
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0024
Next Token :   , Posbility: 0.0031
Next Token : 
, Posbility: 0.0050
Next Token :  when, Posbility: 0.0226
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token : if, Posbility: 0.0006
Next Token : ::, Posbility: 0.0159
Next Token : ->, Posbility: 0.9844
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  for, Posbility: 0.0018
Next Token :   , Posbility: 0.0026
Next Token :  [, Posbility: 0.0679
Next Token : 
, Posbility: 0.3438
Next Token :  , Posbility: 0.5664
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0240
Next Token : List, Posbility: 0.1074
Next Token : (, Posbility: 0.1377
Next Token : let, Posbility: 0.1377
Next Token : x, Posbility: 0.4824
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  | x :: xs -> x
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0029
Next Token :  *, Posbility: 0.0148
Next Token : ::, Posbility: 0.0216
Next Token : s, Posbility: 0.0315
Next Token :  , Posbility: 0.9180
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  | x :: xs -> x 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0014
Next Token : <, Posbility: 0.0016
Next Token : ^, Posbility: 0.0107
Next Token : :, Posbility: 0.0177
Next Token : ::, Posbility: 0.9648
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  | x :: xs -> x ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  con, Posbility: 0.0007
Next Token :  ((, Posbility: 0.0013
Next Token : 
, Posbility: 0.0015
Next Token :  [, Posbility: 0.0096
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  | x :: xs -> x :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0017
Next Token : Pair, Posbility: 0.0075
Next Token : (, Posbility: 0.1514
Next Token : x, Posbility: 0.1514
Next Token : pairs, Posbility: 0.6797
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  | x :: xs -> x :: pairs
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0006
Next Token :  ((, Posbility: 0.0009
Next Token : _, Posbility: 0.0010
Next Token : (, Posbility: 0.0228
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  | x :: xs -> x :: pairs 
 score:False
Error type: noerr
---------------------------
Next Token : :, Posbility: 0.0001
Next Token : ::, Posbility: 0.0001
Next Token : y, Posbility: 0.0005
Next Token : (, Posbility: 0.0601
Next Token : x, Posbility: 0.9375
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  | x :: xs -> x :: pairs x
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token : ', Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  | x :: xs -> x :: pairs xs
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0009
Next Token : ), Posbility: 0.0067
Next Token :  , Posbility: 0.0111
Next Token : 

, Posbility: 0.3672
Next Token : 
, Posbility: 0.6055
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  | x :: xs -> x :: pairs xs

 score:False
Error type: noerr
---------------------------
Next Token : in, Posbility: 0.0391
Next Token : end, Posbility: 0.0830
Next Token :   , Posbility: 0.1367
Next Token : let, Posbility: 0.1455
Next Token : |, Posbility: 0.1982
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  | x :: xs -> x :: pairs xs
|
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0063
Next Token : ?, Posbility: 0.0072
Next Token :  ?, Posbility: 0.0322
Next Token : >, Posbility: 0.2695
Next Token :  , Posbility: 0.5703
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  | x :: xs -> x :: pairs xs
| 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : p, Posbility: 0.0056
Next Token : y, Posbility: 0.0134
Next Token : (, Posbility: 0.0251
Next Token : x, Posbility: 0.3926
Next Token : _, Posbility: 0.5039
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  | x :: xs -> x :: pairs xs
| _
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0031
Next Token : ::, Posbility: 0.0035
Next Token :  as, Posbility: 0.0057
Next Token : ,, Posbility: 0.0084
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  | x :: xs -> x :: pairs xs
| _ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0017
Next Token : _, Posbility: 0.0054
Next Token : x, Posbility: 0.0272
Next Token : ::, Posbility: 0.2578
Next Token : ->, Posbility: 0.7031
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  | x :: xs -> x :: pairs xs
| _ ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  un, Posbility: 0.0052
Next Token :  error, Posbility: 0.0630
Next Token : 
, Posbility: 0.0713
Next Token :  fail, Posbility: 0.3633
Next Token :  , Posbility: 0.4668
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  | x :: xs -> x :: pairs xs
| _ -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Error, Posbility: 0.0222
Next Token : panic, Posbility: 0.0776
Next Token : assert, Posbility: 0.1455
Next Token : pairs, Posbility: 0.2109
Next Token : raise, Posbility: 0.3477
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  | x :: xs -> x :: pairs xs
| _ -> raise
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0047
Next Token : 
, Posbility: 0.0099
Next Token :  ", Posbility: 0.1211
Next Token :  , Posbility: 0.2910
Next Token :  Not, Posbility: 0.5430
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  | x :: xs -> x :: pairs xs
| _ -> raise Not
 score:False
Error type: noerr
---------------------------
Next Token : ., Posbility: 0.0004
Next Token : Y, Posbility: 0.0004
Next Token :  implemented, Posbility: 0.0005
Next Token : Defined, Posbility: 0.0013
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  | x :: xs -> x :: pairs xs
| _ -> raise Not_
 score:False
Error type: noerr
---------------------------
Next Token : a, Posbility: 0.0304
Next Token : expected, Posbility: 0.0391
Next Token : implement, Posbility: 0.1543
Next Token : reached, Posbility: 0.1748
Next Token : found, Posbility: 0.2539
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  | x :: xs -> x :: pairs xs
| _ -> raise Not_found
 score:False
Error type: noerr
---------------------------
Next Token : ), Posbility: 0.0591
Next Token : _, Posbility: 0.0762
Next Token :  , Posbility: 0.0762
Next Token : 
, Posbility: 0.2656
Next Token : 

, Posbility: 0.4375
---------------------------
code:
 (* Write a function to return a list of all pairs of consecutive items in a given list. *)
let rec pairs = function
  | [] -> []
  | x :: xs -> x :: pairs xs
| _ -> raise Not_found


 score:True
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END and No Syntax Error--------

processing time : :20.50040364265442

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>