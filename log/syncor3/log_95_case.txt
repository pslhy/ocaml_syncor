code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  same, Posbility: 0.0315
Next Token :  sum, Posbility: 0.0518
Next Token :  is, Posbility: 0.1592
Next Token :  , Posbility: 0.2637
Next Token :  rec, Posbility: 0.3379
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  find, Posbility: 0.0393
Next Token :  check, Posbility: 0.0447
Next Token :  sum, Posbility: 0.0835
Next Token :  is, Posbility: 0.1768
Next Token :  , Posbility: 0.4238
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fi, Posbility: 0.0238
Next Token : f, Posbility: 0.0270
Next Token : add, Posbility: 0.0270
Next Token : divide, Posbility: 0.0305
Next Token : div, Posbility: 0.6133
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec div
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0022
Next Token : sum, Posbility: 0.0159
Next Token : _, Posbility: 0.0432
Next Token : s, Posbility: 0.0432
Next Token : is, Posbility: 0.8672
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divis
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : on, Posbility: 0.0033
Next Token : ive, Posbility: 0.0033
Next Token : ions, Posbility: 0.0033
Next Token : or, Posbility: 0.4844
Next Token : ors, Posbility: 0.4844
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sum, Posbility: 0.0254
Next Token :  a, Posbility: 0.0327
Next Token : _, Posbility: 0.2412
Next Token :  =, Posbility: 0.3105
Next Token :  , Posbility: 0.3105
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : d, Posbility: 0.0159
Next Token : m, Posbility: 0.0334
Next Token : (, Posbility: 0.0908
Next Token : x, Posbility: 0.1924
Next Token : n, Posbility: 0.5938
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0190
Next Token :  k, Posbility: 0.0190
Next Token :  a, Posbility: 0.0312
Next Token :  , Posbility: 0.2314
Next Token :  =, Posbility: 0.6289
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  function, Posbility: 0.0050
Next Token :  {, Posbility: 0.0094
Next Token :  match, Posbility: 0.0786
Next Token :  , Posbility: 0.1465
Next Token : 
, Posbility: 0.7461
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0039
Next Token :    , Posbility: 0.0082
Next Token : 	, Posbility: 0.0105
Next Token :     , Posbility: 0.1279
Next Token :   , Posbility: 0.8359
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0096
Next Token : List, Posbility: 0.0430
Next Token : let, Posbility: 0.2188
Next Token : match, Posbility: 0.2812
Next Token : if, Posbility: 0.4082
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  int, Posbility: 0.0008
Next Token :  N, Posbility: 0.0009
Next Token :  !, Posbility: 0.0010
Next Token :  not, Posbility: 0.0024
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Mod, Posbility: 0.0018
Next Token : Div, Posbility: 0.0034
Next Token : Int, Posbility: 0.0081
Next Token : (, Posbility: 0.0410
Next Token : n, Posbility: 0.9336
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  %, Posbility: 0.0186
Next Token :  ==, Posbility: 0.1367
Next Token :  , Posbility: 0.2256
Next Token :  <=, Posbility: 0.2256
Next Token :  =, Posbility: 0.3730
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0004
Next Token : 1, Posbility: 0.0004
Next Token :  , Posbility: 0.0242
Next Token :  1, Posbility: 0.4863
Next Token :  0, Posbility: 0.4863
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0007
Next Token :  , Posbility: 0.0031
Next Token : 
, Posbility: 0.0138
Next Token :  ||, Posbility: 0.0138
Next Token :  then, Posbility: 0.9648
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0276
Next Token :  , Posbility: 0.1240
Next Token : 
, Posbility: 0.1240
Next Token :  0, Posbility: 0.1240
Next Token :  [], Posbility: 0.5547
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0006
Next Token :   , Posbility: 0.0032
Next Token :  , Posbility: 0.0126
Next Token :  else, Posbility: 0.1973
Next Token : 
, Posbility: 0.7812
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []

 score:False
Error type: noerr
---------------------------
Next Token :         , Posbility: 0.0002
Next Token :       , Posbility: 0.0003
Next Token :  , Posbility: 0.0005
Next Token :     , Posbility: 0.0019
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0002
Next Token : then, Posbility: 0.0004
Next Token : let, Posbility: 0.0010
Next Token : elif, Posbility: 0.0017
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0031
Next Token :  {, Posbility: 0.0199
Next Token :  [, Posbility: 0.0698
Next Token : 
, Posbility: 0.3125
Next Token :  , Posbility: 0.5820
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0608
Next Token : let, Posbility: 0.0884
Next Token : n, Posbility: 0.1001
Next Token : List, Posbility: 0.1001
Next Token : if, Posbility: 0.5781
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0009
Next Token :  even, Posbility: 0.0010
Next Token :  is, Posbility: 0.0022
Next Token :  not, Posbility: 0.0028
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0016
Next Token : div, Posbility: 0.0021
Next Token : Div, Posbility: 0.0034
Next Token : (, Posbility: 0.0255
Next Token : n, Posbility: 0.9570
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0171
Next Token :  <=, Posbility: 0.0171
Next Token :  %, Posbility: 0.0464
Next Token :  , Posbility: 0.1621
Next Token :  =, Posbility: 0.7266
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  -1, Posbility: 0.0001
Next Token : 1, Posbility: 0.0003
Next Token :  0, Posbility: 0.0009
Next Token :  , Posbility: 0.0067
Next Token :  1, Posbility: 0.9922
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0004
Next Token :  , Posbility: 0.0007
Next Token : 
, Posbility: 0.0012
Next Token :  ||, Posbility: 0.0059
Next Token :  then, Posbility: 0.9922
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0287
Next Token :  [1,, Posbility: 0.0287
Next Token :  [, Posbility: 0.2119
Next Token :  [], Posbility: 0.3496
Next Token :  , Posbility: 0.3496
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0359
Next Token : [2], Posbility: 0.0461
Next Token : [1];, Posbility: 0.0522
Next Token : [0], Posbility: 0.0977
Next Token : [1], Posbility: 0.7227
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
 score:False
Error type: noerr
---------------------------
Next Token :  |, Posbility: 0.0018
Next Token :  *, Posbility: 0.0039
Next Token :  , Posbility: 0.0119
Next Token :  else, Posbility: 0.0286
Next Token : 
, Posbility: 0.9453
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]

 score:False
Error type: noerr
---------------------------
Next Token :          , Posbility: 0.0003
Next Token :       , Posbility: 0.0008
Next Token :           , Posbility: 0.0012
Next Token :     , Posbility: 0.0017
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  
 score:False
Error type: noerr
---------------------------
Next Token : [, Posbility: 0.0001
Next Token : //, Posbility: 0.0001
Next Token : |, Posbility: 0.0002
Next Token : let, Posbility: 0.0010
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0086
Next Token :  {, Posbility: 0.0383
Next Token :  [, Posbility: 0.0435
Next Token : 
, Posbility: 0.2832
Next Token :  , Posbility: 0.6016
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : div, Posbility: 0.0417
Next Token : List, Posbility: 0.0535
Next Token : n, Posbility: 0.0688
Next Token : let, Posbility: 0.1650
Next Token : if, Posbility: 0.5742
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  O, Posbility: 0.0015
Next Token :  even, Posbility: 0.0019
Next Token :  is, Posbility: 0.0024
Next Token :  not, Posbility: 0.0040
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0049
Next Token : div, Posbility: 0.0063
Next Token : Div, Posbility: 0.0071
Next Token : (, Posbility: 0.0317
Next Token : n, Posbility: 0.9297
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  &, Posbility: 0.0194
Next Token :  mod, Posbility: 0.0986
Next Token :  , Posbility: 0.2373
Next Token :  =, Posbility: 0.2695
Next Token :  %, Posbility: 0.3047
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : =, Posbility: 0.0005
Next Token :  10, Posbility: 0.0024
Next Token :  1, Posbility: 0.0040
Next Token :  4, Posbility: 0.0066
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0010
Next Token : 5, Posbility: 0.0010
Next Token : n, Posbility: 0.0015
Next Token : 3, Posbility: 0.0052
Next Token : 2, Posbility: 0.9883
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !=, Posbility: 0.0032
Next Token :  then, Posbility: 0.0032
Next Token :  , Posbility: 0.0086
Next Token :  ==, Posbility: 0.1045
Next Token :  =, Posbility: 0.8750
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0;, Posbility: 0.0001
Next Token : 0, Posbility: 0.0003
Next Token :  , Posbility: 0.0008
Next Token :  1, Posbility: 0.1191
Next Token :  0, Posbility: 0.8789
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0015
Next Token :  ||, Posbility: 0.0031
Next Token : 
, Posbility: 0.0066
Next Token :  &&, Posbility: 0.0108
Next Token :  then, Posbility: 0.9727
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  (1, Posbility: 0.0069
Next Token :  1, Posbility: 0.0146
Next Token : 
, Posbility: 0.1787
Next Token :  [, Posbility: 0.2949
Next Token :  , Posbility: 0.4863
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0422
Next Token : 2, Posbility: 0.0894
Next Token : (, Posbility: 0.1147
Next Token : n, Posbility: 0.1475
Next Token : div, Posbility: 0.5156
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then div
 score:False
Error type: noerr
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token : is, Posbility: 1.0000
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divis
 score:False
Error type: noerr
---------------------------
Next Token : ions, Posbility: 0.0000
Next Token : ories, Posbility: 0.0000
Next Token : ons, Posbility: 0.0001
Next Token : or, Posbility: 0.0002
Next Token : ors, Posbility: 1.0000
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors
 score:False
Error type: noerr
---------------------------
Next Token :  ~, Posbility: 0.0030
Next Token :  (1, Posbility: 0.0055
Next Token :  ((, Posbility: 0.0055
Next Token : (, Posbility: 0.0464
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors 
 score:False
Error type: noerr
---------------------------
Next Token : /, Posbility: 0.0009
Next Token : 2, Posbility: 0.0015
Next Token : div, Posbility: 0.0140
Next Token : n, Posbility: 0.1167
Next Token : (, Posbility: 0.8633
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : Div, Posbility: 0.0034
Next Token : /, Posbility: 0.0064
Next Token : 2, Posbility: 0.0073
Next Token : div, Posbility: 0.0223
Next Token : n, Posbility: 0.9492
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : +1), Posbility: 0.0057
Next Token : -1), Posbility: 0.0199
Next Token :  +, Posbility: 0.0199
Next Token : /, Posbility: 0.0894
Next Token :  , Posbility: 0.8477
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ^, Posbility: 0.0002
Next Token : div, Posbility: 0.0044
Next Token : //, Posbility: 0.0073
Next Token : -, Posbility: 0.1465
Next Token : /, Posbility: 0.8398
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n /
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : =, Posbility: 0.0009
Next Token : 2), Posbility: 0.0024
Next Token :  , Posbility: 0.0066
Next Token :  2);, Posbility: 0.0066
Next Token :  2), Posbility: 0.9805
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2)
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0474
Next Token :  |, Posbility: 0.0474
Next Token :  +, Posbility: 0.1660
Next Token :  ++, Posbility: 0.3516
Next Token :  , Posbility: 0.3516
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) 
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0068
Next Token : @@, Posbility: 0.0077
Next Token : :, Posbility: 0.0645
Next Token : ^, Posbility: 0.1206
Next Token : ::, Posbility: 0.7852
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0011
Next Token : :, Posbility: 0.0021
Next Token :  1, Posbility: 0.0024
Next Token :  [, Posbility: 0.3164
Next Token :  , Posbility: 0.6680
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [2], Posbility: 0.0223
Next Token : [1], Posbility: 0.0369
Next Token : (, Posbility: 0.0605
Next Token : n, Posbility: 0.1001
Next Token : div, Posbility: 0.7383
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) :: div
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  is, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token : is, Posbility: 1.0000
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) :: divis
 score:False
Error type: noerr
---------------------------
Next Token : ions, Posbility: 0.0000
Next Token : ories, Posbility: 0.0000
Next Token : or, Posbility: 0.0001
Next Token : ons, Posbility: 0.0002
Next Token : ors, Posbility: 1.0000
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) :: divisors
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0023
Next Token :  ((, Posbility: 0.0064
Next Token :  (1, Posbility: 0.0105
Next Token :  1, Posbility: 0.0286
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) :: divisors 
 score:False
Error type: noerr
---------------------------
Next Token : (2), Posbility: 0.0026
Next Token : 2, Posbility: 0.0092
Next Token : (1), Posbility: 0.0118
Next Token : n, Posbility: 0.1436
Next Token : (, Posbility: 0.8281
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) :: divisors (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : div, Posbility: 0.0004
Next Token :  , Posbility: 0.0005
Next Token : 3, Posbility: 0.0017
Next Token : 2, Posbility: 0.0067
Next Token : n, Posbility: 0.9883
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) :: divisors (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0014
Next Token : -1), Posbility: 0.0020
Next Token :  *, Posbility: 0.0103
Next Token :  +, Posbility: 0.0591
Next Token :  , Posbility: 0.9219
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) :: divisors (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : +1), Posbility: 0.0003
Next Token : ^, Posbility: 0.0005
Next Token : //, Posbility: 0.0010
Next Token : -, Posbility: 0.1816
Next Token : /, Posbility: 0.8164
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) :: divisors (n /
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  3), Posbility: 0.0153
Next Token :  2);, Posbility: 0.0153
Next Token :  4), Posbility: 0.0153
Next Token :  , Posbility: 0.1133
Next Token :  2), Posbility: 0.8359
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) :: divisors (n / 2)
 score:False
Error type: noerr
---------------------------
Next Token :  ++, Posbility: 0.0068
Next Token :  else, Posbility: 0.0113
Next Token :  |, Posbility: 0.0164
Next Token :  , Posbility: 0.0505
Next Token : 
, Posbility: 0.8945
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) :: divisors (n / 2)

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token : end, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) :: divisors (n / 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : //, Posbility: 0.0001
Next Token : elif, Posbility: 0.0004
Next Token : |, Posbility: 0.0006
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) :: divisors (n / 2)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0048
Next Token :  list, Posbility: 0.0062
Next Token : 
, Posbility: 0.0312
Next Token :  [, Posbility: 0.0312
Next Token :  , Posbility: 0.9141
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) :: divisors (n / 2)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0278
Next Token : n, Posbility: 0.1250
Next Token : let, Posbility: 0.1416
Next Token : if, Posbility: 0.1816
Next Token : div, Posbility: 0.4941
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) :: divisors (n / 2)
  else div
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : isa, Posbility: 0.0000
Next Token :  is, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : is, Posbility: 1.0000
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) :: divisors (n / 2)
  else divis
 score:False
Error type: noerr
---------------------------
Next Token : ions, Posbility: 0.0000
Next Token : ories, Posbility: 0.0000
Next Token : or, Posbility: 0.0001
Next Token : ons, Posbility: 0.0001
Next Token : ors, Posbility: 1.0000
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) :: divisors (n / 2)
  else divisors
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0010
Next Token :  ~, Posbility: 0.0013
Next Token :  (1, Posbility: 0.0058
Next Token :  ((, Posbility: 0.0178
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) :: divisors (n / 2)
  else divisors 
 score:False
Error type: noerr
---------------------------
Next Token : div, Posbility: 0.0001
Next Token : ([, Posbility: 0.0001
Next Token : 2, Posbility: 0.0002
Next Token : n, Posbility: 0.0601
Next Token : (, Posbility: 0.9375
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) :: divisors (n / 2)
  else divisors (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 3, Posbility: 0.0005
Next Token :  , Posbility: 0.0006
Next Token : div, Posbility: 0.0015
Next Token : 2, Posbility: 0.0075
Next Token : n, Posbility: 0.9883
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) :: divisors (n / 2)
  else divisors (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0007
Next Token : -1), Posbility: 0.0082
Next Token :  *, Posbility: 0.0093
Next Token :  +, Posbility: 0.0225
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) :: divisors (n / 2)
  else divisors (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : +1), Posbility: 0.0001
Next Token : //, Posbility: 0.0002
Next Token : −, Posbility: 0.0002
Next Token : /, Posbility: 0.2695
Next Token : -, Posbility: 0.7305
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) :: divisors (n / 2)
  else divisors (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0009
Next Token :  1);, Posbility: 0.0024
Next Token :  , Posbility: 0.0065
Next Token :  2), Posbility: 0.0178
Next Token :  1), Posbility: 0.9727
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) :: divisors (n / 2)
  else divisors (n - 1)
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0005
Next Token : 
, Posbility: 0.0035
Next Token : 

, Posbility: 0.0051
Next Token :  ++, Posbility: 0.0109
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) :: divisors (n / 2)
  else divisors (n - 1) 
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token : ^, Posbility: 0.0008
Next Token : @@, Posbility: 0.0017
Next Token : :, Posbility: 0.0041
Next Token : ::, Posbility: 0.9922
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) :: divisors (n / 2)
  else divisors (n - 1) ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0006
Next Token :  1, Posbility: 0.0006
Next Token :  [], Posbility: 0.0016
Next Token :  , Posbility: 0.4961
Next Token :  [, Posbility: 0.4961
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) :: divisors (n / 2)
  else divisors (n - 1) :: [
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0017
Next Token : |, Posbility: 0.0017
Next Token : (, Posbility: 0.0123
Next Token :  , Posbility: 0.1167
Next Token : n, Posbility: 0.8633
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) :: divisors (n / 2)
  else divisors (n - 1) :: [n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0038
Next Token : ]., Posbility: 0.0049
Next Token : ];, Posbility: 0.0063
Next Token :  , Posbility: 0.0364
Next Token : ], Posbility: 0.9375
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) :: divisors (n / 2)
  else divisors (n - 1) :: [n]
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0024
Next Token :  *, Posbility: 0.0031
Next Token :  , Posbility: 0.0084
Next Token : 
, Posbility: 0.2178
Next Token : 

, Posbility: 0.7617
---------------------------
code:
 (* Write a function to determine if the sum of the divisors of two integers are the same. *)
let rec divisors n =
  if n = 0 then []
  else if n = 1 then [1]
  else if n % 2 = 0 then divisors (n / 2) :: divisors (n / 2)
  else divisors (n - 1) :: [n]


 score:True
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END and No Syntax Error--------

processing time : :35.75322723388672

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>