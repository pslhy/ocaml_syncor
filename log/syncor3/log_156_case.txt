code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  equal, Posbility: 0.0830
Next Token :  check, Posbility: 0.1069
Next Token :  , Posbility: 0.1758
Next Token :  is, Posbility: 0.1758
Next Token :  rec, Posbility: 0.2910
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  find, Posbility: 0.0317
Next Token :  equal, Posbility: 0.1260
Next Token :  check, Posbility: 0.1260
Next Token :  , Posbility: 0.2070
Next Token :  is, Posbility: 0.2344
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : equal, Posbility: 0.0034
Next Token : All, Posbility: 0.0044
Next Token : List, Posbility: 0.0072
Next Token : Equal, Posbility: 0.0195
Next Token : _, Posbility: 0.9414
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : subset, Posbility: 0.0096
Next Token : eq, Posbility: 0.0159
Next Token : list, Posbility: 0.0913
Next Token : all, Posbility: 0.1934
Next Token : equal, Posbility: 0.5234
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0104
Next Token :  l, Posbility: 0.0172
Next Token :  , Posbility: 0.2695
Next Token :  =, Posbility: 0.2695
Next Token : _, Posbility: 0.3457
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : helper, Posbility: 0.0408
Next Token : rec, Posbility: 0.0408
Next Token : all, Posbility: 0.0977
Next Token : to, Posbility: 0.2344
Next Token : list, Posbility: 0.2344
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  el, Posbility: 0.0162
Next Token :  l, Posbility: 0.0237
Next Token :  =, Posbility: 0.1982
Next Token :  , Posbility: 0.3262
Next Token : _, Posbility: 0.3262
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : elem, Posbility: 0.0635
Next Token : of, Posbility: 0.0723
Next Token : to, Posbility: 0.1191
Next Token : helper, Posbility: 0.1191
Next Token : element, Posbility: 0.1729
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0311
Next Token :  element, Posbility: 0.0581
Next Token : _, Posbility: 0.0747
Next Token :  =, Posbility: 0.1582
Next Token :  , Posbility: 0.5508
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0449
Next Token : lst, Posbility: 0.0952
Next Token : (, Posbility: 0.1572
Next Token : e, Posbility: 0.1572
Next Token : x, Posbility: 0.2285
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0200
Next Token :  i, Posbility: 0.0227
Next Token : s, Posbility: 0.1680
Next Token :  =, Posbility: 0.2773
Next Token :  , Posbility: 0.4023
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : elt, Posbility: 0.0093
Next Token : (, Posbility: 0.0173
Next Token : x, Posbility: 0.0688
Next Token : e, Posbility: 0.0884
Next Token : y, Posbility: 0.7383
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0034
Next Token :  element, Posbility: 0.0050
Next Token :  i, Posbility: 0.0121
Next Token :  , Posbility: 0.1011
Next Token :  =, Posbility: 0.8438
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fun, Posbility: 0.0019
Next Token :  function, Posbility: 0.0121
Next Token :  match, Posbility: 0.0613
Next Token :  , Posbility: 0.0693
Next Token : 
, Posbility: 0.8477
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0059
Next Token :    , Posbility: 0.0110
Next Token : 	, Posbility: 0.0161
Next Token :     , Posbility: 0.1729
Next Token :   , Posbility: 0.7773
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0094
Next Token : List, Posbility: 0.0137
Next Token : let, Posbility: 0.0479
Next Token : if, Posbility: 0.2432
Next Token : match, Posbility: 0.6602
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0017
Next Token : (, Posbility: 0.0019
Next Token :  [, Posbility: 0.0035
Next Token :  String, Posbility: 0.0040
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Seq, Posbility: 0.0008
Next Token : List, Posbility: 0.0417
Next Token : y, Posbility: 0.0417
Next Token : (, Posbility: 0.0688
Next Token : x, Posbility: 0.8398
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0011
Next Token : ::, Posbility: 0.0029
Next Token :  , Posbility: 0.0214
Next Token :  with, Posbility: 0.2598
Next Token : ,, Posbility: 0.7070
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : y, Posbility: 0.0952
Next Token :  , Posbility: 0.9023
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : x, Posbility: 0.0007
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0005
Next Token :  , Posbility: 0.0005
Next Token : ,, Posbility: 0.0009
Next Token : 
, Posbility: 0.0025
Next Token :  with, Posbility: 0.9961
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0009
Next Token :  [, Posbility: 0.0010
Next Token : 

, Posbility: 0.0022
Next Token :  , Posbility: 0.0036
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0004
Next Token :       , Posbility: 0.0011
Next Token :    , Posbility: 0.0018
Next Token :     , Posbility: 0.0598
Next Token :   , Posbility: 0.9375
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([], Posbility: 0.0007
Next Token : [], Posbility: 0.0012
Next Token : (, Posbility: 0.0040
Next Token : [, Posbility: 0.0075
Next Token : |, Posbility: 0.9844
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0209
Next Token :  [, Posbility: 0.0938
Next Token :  None, Posbility: 0.1543
Next Token :  , Posbility: 0.2559
Next Token :  [],, Posbility: 0.4199
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [],
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : _, Posbility: 0.0018
Next Token :  [],, Posbility: 0.0020
Next Token :  [, Posbility: 0.0026
Next Token :  , Posbility: 0.2656
Next Token :  [], Posbility: 0.7227
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0014
Next Token :   , Posbility: 0.0039
Next Token :  =>, Posbility: 0.0065
Next Token :  |, Posbility: 0.0176
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token : ::, Posbility: 0.0002
Next Token : →, Posbility: 0.0004
Next Token : -, Posbility: 0.0004
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0061
Next Token :  , Posbility: 0.0166
Next Token :  false, Posbility: 0.0166
Next Token :  True, Posbility: 0.0452
Next Token :  true, Posbility: 0.9102
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0049
Next Token :  , Posbility: 0.0063
Next Token :  |, Posbility: 0.0134
Next Token : ,, Posbility: 0.0222
Next Token : 
, Posbility: 0.9414
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :     , Posbility: 0.0003
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  
 score:False
Error type: noerr
---------------------------
Next Token : [, Posbility: 0.0000
Next Token : //, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : ;, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0076
Next Token :  element, Posbility: 0.0125
Next Token :  [],, Posbility: 0.0718
Next Token :  [, Posbility: 0.1953
Next Token :  , Posbility: 0.6836
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0280
Next Token : h, Posbility: 0.0280
Next Token : hd, Posbility: 0.0461
Next Token : _, Posbility: 0.3867
Next Token : x, Posbility: 0.4375
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0459
Next Token : s, Posbility: 0.0520
Next Token :  , Posbility: 0.1602
Next Token : ,, Posbility: 0.2637
Next Token : ::, Posbility: 0.3398
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : a, Posbility: 0.0123
Next Token : [, Posbility: 0.0140
Next Token : _, Posbility: 0.1172
Next Token : y, Posbility: 0.1709
Next Token : x, Posbility: 0.5234
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0079
Next Token : x, Posbility: 0.0090
Next Token : ', Posbility: 0.0148
Next Token : ',, Posbility: 0.0189
Next Token : s, Posbility: 0.9141
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0092
Next Token :  when, Posbility: 0.0092
Next Token : 1,, Posbility: 0.0152
Next Token :  , Posbility: 0.1123
Next Token : ,, Posbility: 0.8281
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs,
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : y, Posbility: 0.0004
Next Token :   , Posbility: 0.0005
Next Token :  [, Posbility: 0.0075
Next Token :  [], Posbility: 0.1177
Next Token :  , Posbility: 0.8711
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : (), Posbility: 0.0013
Next Token : (, Posbility: 0.0022
Next Token : x, Posbility: 0.0269
Next Token : _, Posbility: 0.0732
Next Token : y, Posbility: 0.8906
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0011
Next Token : :, Posbility: 0.0013
Next Token :  |, Posbility: 0.0015
Next Token :  , Posbility: 0.0157
Next Token : ::, Posbility: 0.9766
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : [], Posbility: 0.0003
Next Token : [, Posbility: 0.0005
Next Token : x, Posbility: 0.0006
Next Token : _, Posbility: 0.0067
Next Token : y, Posbility: 0.9883
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y::y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y::ys
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0024
Next Token : ,, Posbility: 0.0039
Next Token :  |, Posbility: 0.0064
Next Token :  when, Posbility: 0.0287
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y::ys 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : →, Posbility: 0.0001
Next Token : ::, Posbility: 0.0002
Next Token : if, Posbility: 0.0010
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y::ys ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0018
Next Token :  !, Posbility: 0.0048
Next Token :  , Posbility: 0.1592
Next Token : 
, Posbility: 0.2637
Next Token :  is, Posbility: 0.5586
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y::ys -> is
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : equal, Posbility: 0.0000
Next Token : Equal, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y::ys -> is_
 score:False
Error type: noerr
---------------------------
Next Token : empty, Posbility: 0.0001
Next Token : match, Posbility: 0.0001
Next Token : eq, Posbility: 0.0001
Next Token : list, Posbility: 0.0009
Next Token : equal, Posbility: 0.9961
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y::ys -> is_equal
 score:False
Error type: noerr
---------------------------
Next Token :  ~, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token :  ?, Posbility: 0.0003
Next Token :  , Posbility: 0.0110
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y::ys -> is_equal_
 score:False
Error type: noerr
---------------------------
Next Token : value, Posbility: 0.0000
Next Token : cons, Posbility: 0.0001
Next Token : lists, Posbility: 0.0001
Next Token : element, Posbility: 0.0015
Next Token : list, Posbility: 0.9961
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y::ys -> is_equal_list
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0001
Next Token :  element, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token :  , Posbility: 0.0052
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y::ys -> is_equal_list_
 score:False
Error type: noerr
---------------------------
Next Token : list, Posbility: 0.0002
Next Token : elements, Posbility: 0.0002
Next Token : rest, Posbility: 0.0002
Next Token : head, Posbility: 0.0002
Next Token : element, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y::ys -> is_equal_list_element
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  ~, Posbility: 0.0019
Next Token : _, Posbility: 0.0031
Next Token : (, Posbility: 0.0052
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y::ys -> is_equal_list_element 
 score:False
Error type: noerr
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : head, Posbility: 0.0000
Next Token : y, Posbility: 0.0066
Next Token : (, Posbility: 0.0178
Next Token : x, Posbility: 0.9766
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y::ys -> is_equal_list_element x
 score:False
Error type: noerr
---------------------------
Next Token : :, Posbility: 0.0001
Next Token : ', Posbility: 0.0001
Next Token : ::, Posbility: 0.0001
Next Token :  , Posbility: 0.0260
Next Token : s, Posbility: 0.9727
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y::ys -> is_equal_list_element xs
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  [], Posbility: 0.0002
Next Token :  ~, Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y::ys -> is_equal_list_element xs 
 score:False
Error type: noerr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : x, Posbility: 0.0007
Next Token : (, Posbility: 0.0067
Next Token : y, Posbility: 0.9922
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y::ys -> is_equal_list_element xs y
 score:False
Error type: noerr
---------------------------
Next Token :  &&, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0005
Next Token : 
, Posbility: 0.0015
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y::ys -> is_equal_list_element xs ys
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0081
Next Token :  and, Posbility: 0.0104
Next Token :  &&, Posbility: 0.1260
Next Token : 

, Posbility: 0.2676
Next Token : 
, Posbility: 0.5664
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y::ys -> is_equal_list_element xs ys

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0081
Next Token : 

, Posbility: 0.0125
Next Token : end, Posbility: 0.0282
Next Token : let, Posbility: 0.1260
Next Token :   , Posbility: 0.7266
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y::ys -> is_equal_list_element xs ys
  
 score:False
Error type: noerr
---------------------------
Next Token : else, Posbility: 0.0002
Next Token : (, Posbility: 0.0004
Next Token : 
, Posbility: 0.0004
Next Token : ;, Posbility: 0.0004
Next Token : |, Posbility: 0.9961
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y::ys -> is_equal_list_element xs ys
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0030
Next Token :  a, Posbility: 0.0072
Next Token :  [],, Posbility: 0.0118
Next Token :  [, Posbility: 0.0221
Next Token :  , Posbility: 0.9375
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y::ys -> is_equal_list_element xs ys
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0049
Next Token : y, Posbility: 0.0056
Next Token : e, Posbility: 0.0081
Next Token : x, Posbility: 0.3906
Next Token : _, Posbility: 0.5703
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y::ys -> is_equal_list_element xs ys
  | _
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0017
Next Token : ::, Posbility: 0.0025
Next Token : x, Posbility: 0.0067
Next Token :  , Posbility: 0.3691
Next Token : ,, Posbility: 0.6055
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y::ys -> is_equal_list_element xs ys
  | _,
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  ?, Posbility: 0.0009
Next Token :  [, Posbility: 0.0011
Next Token : _, Posbility: 0.0066
Next Token :  [], Posbility: 0.0085
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y::ys -> is_equal_list_element xs ys
  | _, 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : e, Posbility: 0.0003
Next Token : (), Posbility: 0.0005
Next Token : x, Posbility: 0.0065
Next Token : y, Posbility: 0.0291
Next Token : _, Posbility: 0.9609
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y::ys -> is_equal_list_element xs ys
  | _, _
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0012
Next Token :   , Posbility: 0.0024
Next Token :  |, Posbility: 0.0031
Next Token : ,, Posbility: 0.0052
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y::ys -> is_equal_list_element xs ys
  | _, _ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ::, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : if, Posbility: 0.0001
Next Token :  =>, Posbility: 0.0001
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y::ys -> is_equal_list_element xs ys
  | _, _ ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0003
Next Token :  true, Posbility: 0.0003
Next Token : 
, Posbility: 0.0025
Next Token :  , Posbility: 0.0025
Next Token :  false, Posbility: 0.9922
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y::ys -> is_equal_list_element xs ys
  | _, _ -> false
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0018
Next Token : ;, Posbility: 0.0048
Next Token :  , Posbility: 0.0048
Next Token : 
, Posbility: 0.2637
Next Token : 

, Posbility: 0.7188
---------------------------
code:
 (* Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. *)
let rec is_equal_list_element x y =
  match x, y with
  | [], [] -> true
  | x::xs, y::ys -> is_equal_list_element xs ys
  | _, _ -> false


 score:True
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END and No Syntax Error--------

processing time : :31.042515516281128

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>