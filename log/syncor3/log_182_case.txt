code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0225
Next Token :  apply, Posbility: 0.0476
Next Token :  , Posbility: 0.1875
Next Token :  format, Posbility: 0.2734
Next Token :  rec, Posbility: 0.3516
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0283
Next Token :  fmt, Posbility: 0.0413
Next Token :  apply, Posbility: 0.1436
Next Token :  format, Posbility: 0.2676
Next Token :  , Posbility: 0.3457
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : map, Posbility: 0.0337
Next Token : sprintf, Posbility: 0.0432
Next Token : f, Posbility: 0.0713
Next Token : write, Posbility: 0.1709
Next Token : print, Posbility: 0.2812
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0104
Next Token : list, Posbility: 0.0152
Next Token :  =, Posbility: 0.0172
Next Token :  , Posbility: 0.0413
Next Token : _, Posbility: 0.8320
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : format, Posbility: 0.0374
Next Token : elements, Posbility: 0.0374
Next Token : fmt, Posbility: 0.0422
Next Token : all, Posbility: 0.1011
Next Token : list, Posbility: 0.4531
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0403
Next Token :  fmt, Posbility: 0.0664
Next Token :  =, Posbility: 0.0967
Next Token : _, Posbility: 0.2041
Next Token :  , Posbility: 0.4336
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0183
Next Token : lst, Posbility: 0.0266
Next Token : s, Posbility: 0.0723
Next Token : (, Posbility: 0.2236
Next Token : f, Posbility: 0.4727
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0452
Next Token :  str, Posbility: 0.0452
Next Token :  fmt, Posbility: 0.2021
Next Token :  , Posbility: 0.2295
Next Token :  =, Posbility: 0.2598
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0359
Next Token :  fun, Posbility: 0.0408
Next Token :  , Posbility: 0.0669
Next Token :  function, Posbility: 0.3418
Next Token : 
, Posbility: 0.4961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0045
Next Token : 	, Posbility: 0.0065
Next Token :    , Posbility: 0.0107
Next Token :     , Posbility: 0.1147
Next Token :   , Posbility: 0.8477
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fun, Posbility: 0.0159
Next Token : List, Posbility: 0.0630
Next Token : let, Posbility: 0.0806
Next Token : if, Posbility: 0.1328
Next Token : match, Posbility: 0.6758
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0039
Next Token :  l, Posbility: 0.0049
Next Token :  [], Posbility: 0.0251
Next Token :  String, Posbility: 0.0776
Next Token :  , Posbility: 0.8320
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Seq, Posbility: 0.0075
Next Token : (, Posbility: 0.0096
Next Token : L, Posbility: 0.0432
Next Token : f, Posbility: 0.4102
Next Token : List, Posbility: 0.4648
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  with, Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token : s, Posbility: 0.0010
Next Token : _, Posbility: 0.0052
Next Token : ., Posbility: 0.9883
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.1040
Next Token : iter, Posbility: 0.1182
Next Token : fold, Posbility: 0.1338
Next Token : rev, Posbility: 0.1943
Next Token : hd, Posbility: 0.2500
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0097
Next Token : (, Posbility: 0.0265
Next Token :  list, Posbility: 0.0559
Next Token :  with, Posbility: 0.1729
Next Token :  , Posbility: 0.6836
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : L, Posbility: 0.0879
Next Token : (, Posbility: 0.0996
Next Token : x, Posbility: 0.0996
Next Token : f, Posbility: 0.1641
Next Token : lst, Posbility: 0.1855
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0002
Next Token :  ~, Posbility: 0.0003
Next Token : _, Posbility: 0.0010
Next Token : ,, Posbility: 0.0012
Next Token :  with, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0005
Next Token :   , Posbility: 0.0006
Next Token : 

, Posbility: 0.0015
Next Token :  , Posbility: 0.0025
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0004
Next Token :       , Posbility: 0.0014
Next Token :    , Posbility: 0.0023
Next Token :     , Posbility: 0.0598
Next Token :   , Posbility: 0.9336
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Some, Posbility: 0.0003
Next Token : None, Posbility: 0.0005
Next Token : [, Posbility: 0.0015
Next Token : [], Posbility: 0.0032
Next Token : |, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0131
Next Token :  nil, Posbility: 0.0216
Next Token :  , Posbility: 0.0588
Next Token :  None, Posbility: 0.1592
Next Token :  [], Posbility: 0.7148
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0039
Next Token :    , Posbility: 0.0057
Next Token :  |, Posbility: 0.0057
Next Token :  =>, Posbility: 0.0065
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ::, Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token : -, Posbility: 0.0003
Next Token : â†’, Posbility: 0.0004
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0044
Next Token :   , Posbility: 0.0064
Next Token :  [], Posbility: 0.0417
Next Token : 
, Posbility: 0.0688
Next Token :  , Posbility: 0.8398
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0186
Next Token : ();, Posbility: 0.0270
Next Token : print, Posbility: 0.0347
Next Token : return, Posbility: 0.0444
Next Token : (), Posbility: 0.7852
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
 score:False
Error type: noerr
---------------------------
Next Token :  (*, Posbility: 0.0049
Next Token :   , Posbility: 0.0056
Next Token :  |, Posbility: 0.0119
Next Token :  , Posbility: 0.0153
Next Token : 
, Posbility: 0.9453
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : //, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  element, Posbility: 0.0048
Next Token :  l, Posbility: 0.0061
Next Token :  el, Posbility: 0.0129
Next Token :  [, Posbility: 0.0273
Next Token :  , Posbility: 0.9062
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : elt, Posbility: 0.0226
Next Token : h, Posbility: 0.0542
Next Token : _, Posbility: 0.0786
Next Token : hd, Posbility: 0.1670
Next Token : x, Posbility: 0.5820
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0039
Next Token : s, Posbility: 0.0074
Next Token : :, Posbility: 0.0121
Next Token : ::, Posbility: 0.1152
Next Token :  , Posbility: 0.8516
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0002
Next Token : â†’, Posbility: 0.0005
Next Token : :, Posbility: 0.0012
Next Token : ->, Posbility: 0.4668
Next Token : ::, Posbility: 0.5312
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  new, Posbility: 0.0020
Next Token :  list, Posbility: 0.0020
Next Token :  l, Posbility: 0.0071
Next Token :  rest, Posbility: 0.0522
Next Token :  , Posbility: 0.9258
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : ls, Posbility: 0.0208
Next Token : lst, Posbility: 0.0302
Next Token : tail, Posbility: 0.0342
Next Token : _, Posbility: 0.1533
Next Token : x, Posbility: 0.6875
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0005
Next Token :  , Posbility: 0.0012
Next Token : _, Posbility: 0.0015
Next Token : ', Posbility: 0.0067
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  @, Posbility: 0.0004
Next Token :   , Posbility: 0.0013
Next Token :  =>, Posbility: 0.0031
Next Token :  when, Posbility: 0.0066
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0001
Next Token : :, Posbility: 0.0001
Next Token : if, Posbility: 0.0001
Next Token : ::, Posbility: 0.0179
Next Token : ->, Posbility: 0.9805
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0025
Next Token :  String, Posbility: 0.0042
Next Token :  format, Posbility: 0.0069
Next Token : 
, Posbility: 0.1768
Next Token :  , Posbility: 0.7930
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0659
Next Token : printf, Posbility: 0.0747
Next Token : Printf, Posbility: 0.1084
Next Token : print, Posbility: 0.1787
Next Token : f, Posbility: 0.4277
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0015
Next Token : ;, Posbility: 0.0019
Next Token : st, Posbility: 0.0024
Next Token :  ", Posbility: 0.0028
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f 
 score:False
Error type: noerr
---------------------------
Next Token : (), Posbility: 0.0006
Next Token : ;, Posbility: 0.0013
Next Token : ();, Posbility: 0.0014
Next Token : (, Posbility: 0.0292
Next Token : x, Posbility: 0.9648
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x
 score:False
Error type: noerr
---------------------------
Next Token : ,, Posbility: 0.0070
Next Token :  >>, Posbility: 0.0116
Next Token :  &&, Posbility: 0.0854
Next Token : ;, Posbility: 0.3828
Next Token :  , Posbility: 0.4922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x 
 score:False
Error type: noerr
---------------------------
Next Token : @@, Posbility: 0.0208
Next Token : ^, Posbility: 0.0267
Next Token : ->, Posbility: 0.0342
Next Token : ::, Posbility: 0.3242
Next Token : ;, Posbility: 0.5352
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ;
 score:False
Error type: noerr
---------------------------
Next Token :  (*, Posbility: 0.0011
Next Token :   , Posbility: 0.0014
Next Token : ;, Posbility: 0.0747
Next Token : 
, Posbility: 0.1089
Next Token :  , Posbility: 0.8047
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; 
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0022
Next Token : (, Posbility: 0.0022
Next Token : List, Posbility: 0.0031
Next Token : println, Posbility: 0.0031
Next Token : print, Posbility: 0.9844
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token :  list, Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_
 score:False
Error type: noerr
---------------------------
Next Token : lst, Posbility: 0.0000
Next Token : all, Posbility: 0.0000
Next Token : rest, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : (, Posbility: 0.0013
Next Token :  ~, Posbility: 0.0041
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list 
 score:False
Error type: noerr
---------------------------
Next Token : print, Posbility: 0.0000
Next Token : x, Posbility: 0.0002
Next Token : lst, Posbility: 0.0009
Next Token : (, Posbility: 0.0293
Next Token : f, Posbility: 0.9688
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0003
Next Token :  >>, Posbility: 0.0006
Next Token :  ~, Posbility: 0.0006
Next Token : 
, Posbility: 0.0009
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0001
Next Token : lst, Posbility: 0.0002
Next Token : f, Posbility: 0.0019
Next Token : (, Posbility: 0.0052
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f x
 score:False
Error type: noerr
---------------------------
Next Token : ), Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
 score:False
Error type: noerr
---------------------------
Next Token :  *), Posbility: 0.0065
Next Token :  , Posbility: 0.0107
Next Token : ), Posbility: 0.0291
Next Token : 

, Posbility: 0.3555
Next Token : 
, Posbility: 0.5859
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs

 score:False
Error type: noerr
---------------------------
Next Token : [, Posbility: 0.0064
Next Token : (, Posbility: 0.0204
Next Token :   , Posbility: 0.0217
Next Token : end, Posbility: 0.0217
Next Token : let, Posbility: 0.6328
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0299
Next Token :  main, Posbility: 0.0559
Next Token :  format, Posbility: 0.0718
Next Token :  , Posbility: 0.2832
Next Token :  rec, Posbility: 0.4121
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fmt, Posbility: 0.0173
Next Token :  list, Posbility: 0.0251
Next Token :  apply, Posbility: 0.0603
Next Token :  format, Posbility: 0.0996
Next Token :  , Posbility: 0.6484
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : map, Posbility: 0.0127
Next Token : f, Posbility: 0.0184
Next Token : printf, Posbility: 0.0184
Next Token : write, Posbility: 0.0269
Next Token : print, Posbility: 0.7852
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0009
Next Token : 2, Posbility: 0.0018
Next Token :  =, Posbility: 0.0050
Next Token :  , Posbility: 0.0225
Next Token : _, Posbility: 0.9570
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : char, Posbility: 0.0150
Next Token : map, Posbility: 0.0193
Next Token : all, Posbility: 0.0247
Next Token : string, Posbility: 0.0408
Next Token : list, Posbility: 0.4961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0104
Next Token :  , Posbility: 0.0464
Next Token : 2, Posbility: 0.0464
Next Token : ', Posbility: 0.1260
Next Token : _, Posbility: 0.7266
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : string, Posbility: 0.0293
Next Token : f, Posbility: 0.0376
Next Token : with, Posbility: 0.0425
Next Token : rec, Posbility: 0.0547
Next Token : fmt, Posbility: 0.0796
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0303
Next Token :  str, Posbility: 0.0388
Next Token :  =, Posbility: 0.0498
Next Token :  fmt, Posbility: 0.1196
Next Token :  , Posbility: 0.6875
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0042
Next Token : lst, Posbility: 0.0145
Next Token : s, Posbility: 0.0187
Next Token : (, Posbility: 0.0308
Next Token : f, Posbility: 0.8984
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  format, Posbility: 0.0139
Next Token :  str, Posbility: 0.0201
Next Token :  , Posbility: 0.0903
Next Token :  =, Posbility: 0.3145
Next Token :  fmt, Posbility: 0.5195
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0029
Next Token : _, Posbility: 0.0054
Next Token :  str, Posbility: 0.0167
Next Token :  , Posbility: 0.0354
Next Token :  =, Posbility: 0.9141
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0006
Next Token :  function, Posbility: 0.0010
Next Token :  match, Posbility: 0.0055
Next Token :  , Posbility: 0.0669
Next Token : 
, Posbility: 0.9219
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0004
Next Token :    , Posbility: 0.0015
Next Token : let, Posbility: 0.0022
Next Token :     , Posbility: 0.0067
Next Token :   , Posbility: 0.9844
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0166
Next Token : List, Posbility: 0.0273
Next Token : print, Posbility: 0.0579
Next Token : let, Posbility: 0.0742
Next Token : match, Posbility: 0.7969
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  str, Posbility: 0.0002
Next Token :  format, Posbility: 0.0010
Next Token :  fmt, Posbility: 0.0035
Next Token :  String, Posbility: 0.0201
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0013
Next Token : Format, Posbility: 0.0022
Next Token : print, Posbility: 0.0022
Next Token : f, Posbility: 0.0046
Next Token : List, Posbility: 0.9883
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : first, Posbility: 0.0000
Next Token : fold, Posbility: 0.0000
Next Token : length, Posbility: 0.0001
Next Token : head, Posbility: 0.0004
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  str, Posbility: 0.0002
Next Token :  [, Posbility: 0.0002
Next Token : (, Posbility: 0.0004
Next Token :  fmt, Posbility: 0.0203
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0002
Next Token : ls, Posbility: 0.0002
Next Token : f, Posbility: 0.0009
Next Token : (, Posbility: 0.0032
Next Token : lst, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  avec, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token : ,, Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : {, Posbility: 0.0000
Next Token : case, Posbility: 0.0002
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [],, Posbility: 0.0000
Next Token :  nil, Posbility: 0.0001
Next Token :  [, Posbility: 0.0007
Next Token :  , Posbility: 0.0025
Next Token :  [], Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  =>, Posbility: 0.0003
Next Token :  |, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0000
Next Token : return, Posbility: 0.0000
Next Token : â†’, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fmt, Posbility: 0.0007
Next Token :  "", Posbility: 0.0009
Next Token :  {, Posbility: 0.0009
Next Token : 
, Posbility: 0.0052
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0024
Next Token : return, Posbility: 0.0028
Next Token : print, Posbility: 0.0028
Next Token : ();, Posbility: 0.0031
Next Token : (), Posbility: 0.9805
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
 score:False
Error type: noerr
---------------------------
Next Token :  (*, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  |, Posbility: 0.0002
Next Token :  , Posbility: 0.0012
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0002
Next Token :  i, Posbility: 0.0007
Next Token :  [], Posbility: 0.0008
Next Token :  [, Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : hd, Posbility: 0.0005
Next Token : head, Posbility: 0.0006
Next Token : (, Posbility: 0.0025
Next Token : _, Posbility: 0.0032
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0001
Next Token : :, Posbility: 0.0001
Next Token : s, Posbility: 0.0004
Next Token : ::, Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : :, Posbility: 0.0003
Next Token : ->, Posbility: 0.0076
Next Token : ::, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  [], Posbility: 0.0001
Next Token :  fmt, Posbility: 0.0001
Next Token :  rest, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : tail, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : y, Posbility: 0.0002
Next Token : _, Posbility: 0.0032
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : ', Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0004
Next Token :  =>, Posbility: 0.0004
Next Token :  when, Posbility: 0.0032
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ::, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  string, Posbility: 0.0094
Next Token :  String, Posbility: 0.0121
Next Token :  format, Posbility: 0.0422
Next Token : 
, Posbility: 0.0693
Next Token :  , Posbility: 0.8477
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : printf, Posbility: 0.0542
Next Token : Format, Posbility: 0.0894
Next Token : print, Posbility: 0.1147
Next Token : Printf, Posbility: 0.1299
Next Token : f, Posbility: 0.5117
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f
 score:False
Error type: noerr
---------------------------
Next Token :  ", Posbility: 0.0123
Next Token : fmt, Posbility: 0.0179
Next Token :  format, Posbility: 0.0806
Next Token :  , Posbility: 0.3613
Next Token :  fmt, Posbility: 0.4629
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt
 score:False
Error type: noerr
---------------------------
Next Token :  format, Posbility: 0.0044
Next Token :  %, Posbility: 0.0056
Next Token : ;, Posbility: 0.0118
Next Token :  "%, Posbility: 0.0134
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt 
 score:False
Error type: noerr
---------------------------
Next Token : print, Posbility: 0.0005
Next Token : List, Posbility: 0.0010
Next Token : ;, Posbility: 0.0137
Next Token : (, Posbility: 0.0199
Next Token : x, Posbility: 0.9609
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x
 score:False
Error type: noerr
---------------------------
Next Token :  &&, Posbility: 0.0007
Next Token : 
, Posbility: 0.0008
Next Token : ,, Posbility: 0.0008
Next Token : ;, Posbility: 0.0420
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x 
 score:False
Error type: noerr
---------------------------
Next Token : ";, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : :, Posbility: 0.0003
Next Token : ::, Posbility: 0.0003
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ;
 score:False
Error type: noerr
---------------------------
Next Token :  format, Posbility: 0.0001
Next Token :   , Posbility: 0.0003
Next Token : print, Posbility: 0.0003
Next Token : 
, Posbility: 0.0013
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; 
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : List, Posbility: 0.0001
Next Token : println, Posbility: 0.0002
Next Token : f, Posbility: 0.0003
Next Token : print, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0000
Next Token :  list, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : lista, Posbility: 0.0000
Next Token : format, Posbility: 0.0000
Next Token : fmt, Posbility: 0.0001
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list
 score:False
Error type: noerr
---------------------------
Next Token :  ~, Posbility: 0.0000
Next Token : fmt, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0135
Next Token :  , Posbility: 0.0369
Next Token : _, Posbility: 0.9492
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_
 score:False
Error type: noerr
---------------------------
Next Token : list, Posbility: 0.0000
Next Token : str, Posbility: 0.0001
Next Token : f, Posbility: 0.0001
Next Token :  fmt, Posbility: 0.0001
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt
 score:False
Error type: noerr
---------------------------
Next Token :  format, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  ~, Posbility: 0.0001
Next Token :  fmt, Posbility: 0.0052
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : lst, Posbility: 0.0000
Next Token : print, Posbility: 0.0000
Next Token : (, Posbility: 0.0017
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f
 score:False
Error type: noerr
---------------------------
Next Token :  %, Posbility: 0.0002
Next Token :  ~, Posbility: 0.0002
Next Token :  str, Posbility: 0.0004
Next Token :  , Posbility: 0.0124
Next Token :  fmt, Posbility: 0.9844
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : lst, Posbility: 0.0000
Next Token : (, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt x
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
 score:False
Error type: noerr
---------------------------
Next Token : ), Posbility: 0.0008
Next Token : , Posbility: 0.0026
Next Token :  , Posbility: 0.0037
Next Token : 

, Posbility: 0.4316
Next Token : 
, Posbility: 0.5547
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs

 score:False
Error type: noerr
---------------------------
Next Token : ```, Posbility: 0.0084
Next Token : 

, Posbility: 0.0137
Next Token : [, Posbility: 0.0352
Next Token : (, Posbility: 0.0579
Next Token : let, Posbility: 0.6641
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0187
Next Token :  fmt, Posbility: 0.0306
Next Token :  main, Posbility: 0.0393
Next Token :  , Posbility: 0.2002
Next Token :  rec, Posbility: 0.6172
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fmt, Posbility: 0.0159
Next Token :  list, Posbility: 0.0179
Next Token :  format, Posbility: 0.0381
Next Token :  apply, Posbility: 0.0432
Next Token :  , Posbility: 0.7656
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0074
Next Token : append, Posbility: 0.0074
Next Token : map, Posbility: 0.0139
Next Token : write, Posbility: 0.0178
Next Token : print, Posbility: 0.8633
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0003
Next Token : 2, Posbility: 0.0004
Next Token :  =, Posbility: 0.0010
Next Token :  , Posbility: 0.0041
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : map, Posbility: 0.0075
Next Token : all, Posbility: 0.0109
Next Token : string, Posbility: 0.0124
Next Token : fmt, Posbility: 0.0491
Next Token : list, Posbility: 0.7656
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fmt, Posbility: 0.0063
Next Token : ', Posbility: 0.0072
Next Token :  , Posbility: 0.0135
Next Token : 2, Posbility: 0.0173
Next Token : _, Posbility: 0.9453
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : nl, Posbility: 0.0132
Next Token : int, Posbility: 0.0170
Next Token : str, Posbility: 0.0317
Next Token : sep, Posbility: 0.0359
Next Token : fmt, Posbility: 0.4395
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fmt, Posbility: 0.0236
Next Token :  , Posbility: 0.0266
Next Token : 2, Posbility: 0.0723
Next Token : s, Posbility: 0.0820
Next Token : _, Posbility: 0.6875
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : str, Posbility: 0.0334
Next Token : list, Posbility: 0.0378
Next Token : sep, Posbility: 0.0708
Next Token : nl, Posbility: 0.0806
Next Token : fmt, Posbility: 0.1030
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0103
Next Token : _, Posbility: 0.0116
Next Token :  =, Posbility: 0.0405
Next Token :  fmt, Posbility: 0.0859
Next Token :  , Posbility: 0.8125
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0005
Next Token : x, Posbility: 0.0009
Next Token : lst, Posbility: 0.0010
Next Token : (, Posbility: 0.0036
Next Token : f, Posbility: 0.9883
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0035
Next Token :  =, Posbility: 0.0123
Next Token :  , Posbility: 0.0430
Next Token : 1, Posbility: 0.0549
Next Token :  fmt, Posbility: 0.8594
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0154
Next Token :  , Posbility: 0.0417
Next Token :  =, Posbility: 0.0688
Next Token : 1, Posbility: 0.3086
Next Token :  fmt, Posbility: 0.5078
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0070
Next Token : _, Posbility: 0.0101
Next Token :  fmt, Posbility: 0.0190
Next Token : 2, Posbility: 0.0215
Next Token :  =, Posbility: 0.9141
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  function, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  match, Posbility: 0.0012
Next Token :  , Posbility: 0.0067
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0001
Next Token : let, Posbility: 0.0003
Next Token :    , Posbility: 0.0005
Next Token :     , Posbility: 0.0019
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0009
Next Token : if, Posbility: 0.0012
Next Token : print, Posbility: 0.0022
Next Token : let, Posbility: 0.0075
Next Token : match, Posbility: 0.9844
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fmt, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  String, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Tuple, Posbility: 0.0000
Next Token : Pair, Posbility: 0.0001
Next Token : f, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : take, Posbility: 0.0000
Next Token : first, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : head, Posbility: 0.0007
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  with, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ls, Posbility: 0.0001
Next Token : f, Posbility: 0.0001
Next Token : x, Posbility: 0.0002
Next Token : (, Posbility: 0.0004
Next Token : lst, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  avec, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : {, Posbility: 0.0000
Next Token : case, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  nil, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token :  [], Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ::, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : return, Posbility: 0.0000
Next Token : â†’, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fmt, Posbility: 0.0001
Next Token :  "", Posbility: 0.0001
Next Token :  {, Posbility: 0.0001
Next Token : 
, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0001
Next Token : print, Posbility: 0.0002
Next Token : ();, Posbility: 0.0003
Next Token : f, Posbility: 0.0003
Next Token : (), Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
 score:False
Error type: noerr
---------------------------
Next Token :  (*, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : //, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token :  i, Posbility: 0.0001
Next Token :  [, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : f, Posbility: 0.0001
Next Token : _, Posbility: 0.0007
Next Token : (, Posbility: 0.0012
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : ::, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : ::{, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ->, Posbility: 0.0001
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  rest, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : y, Posbility: 0.0001
Next Token : _, Posbility: 0.0008
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  when, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : â†’, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0004
Next Token :  format, Posbility: 0.0008
Next Token :  fmt, Posbility: 0.0040
Next Token : 
, Posbility: 0.0067
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : printf, Posbility: 0.0012
Next Token : (, Posbility: 0.0015
Next Token : Printf, Posbility: 0.0015
Next Token : print, Posbility: 0.0085
Next Token : f, Posbility: 0.9844
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f
 score:False
Error type: noerr
---------------------------
Next Token :  ", Posbility: 0.0001
Next Token : fmt, Posbility: 0.0001
Next Token :  format, Posbility: 0.0003
Next Token :  , Posbility: 0.0022
Next Token :  fmt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0010
Next Token :  str, Posbility: 0.0010
Next Token :  ", Posbility: 0.0013
Next Token :  , Posbility: 0.3164
Next Token :  fmt, Posbility: 0.6680
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token : ., Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  fmt, Posbility: 0.0005
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt 
 score:False
Error type: noerr
---------------------------
Next Token : (), Posbility: 0.0001
Next Token : ;, Posbility: 0.0003
Next Token : (, Posbility: 0.0012
Next Token : f, Posbility: 0.0017
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token : s, Posbility: 0.0002
Next Token : ;, Posbility: 0.0013
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x 
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : ();, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ;
 score:False
Error type: noerr
---------------------------
Next Token :  fmt, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : print, Posbility: 0.0001
Next Token : 
, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; 
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : f, Posbility: 0.0002
Next Token : print, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :  list, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_
 score:False
Error type: noerr
---------------------------
Next Token :  list, Posbility: 0.0000
Next Token : lista, Posbility: 0.0000
Next Token : lists, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list
 score:False
Error type: noerr
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0017
Next Token :  fmt, Posbility: 0.0025
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_
 score:False
Error type: noerr
---------------------------
Next Token : f, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : format, Posbility: 0.0000
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt
 score:False
Error type: noerr
---------------------------
Next Token :  str, Posbility: 0.0000
Next Token :  msg, Posbility: 0.0000
Next Token :  , Posbility: 0.0107
Next Token :  fmt, Posbility: 0.0227
Next Token : _, Posbility: 0.9648
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_
 score:False
Error type: noerr
---------------------------
Next Token : txt, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : plt, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0001
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  fmt, Posbility: 0.0017
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt 
 score:False
Error type: noerr
---------------------------
Next Token : h, Posbility: 0.0000
Next Token : print, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f
 score:False
Error type: noerr
---------------------------
Next Token :  str, Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token : fmt, Posbility: 0.0000
Next Token :  , Posbility: 0.0006
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt
 score:False
Error type: noerr
---------------------------
Next Token :  format, Posbility: 0.0001
Next Token :  str, Posbility: 0.0002
Next Token : fmt, Posbility: 0.0003
Next Token :  , Posbility: 0.0229
Next Token :  fmt, Posbility: 0.9766
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : s, Posbility: 0.0002
Next Token : 

, Posbility: 0.0003
Next Token : 
, Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt 
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : lst, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt x
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0003
Next Token :  , Posbility: 0.0017
Next Token : , Posbility: 0.0047
Next Token : 

, Posbility: 0.3730
Next Token : 
, Posbility: 0.6172
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs

 score:False
Error type: noerr
---------------------------
Next Token : [, Posbility: 0.0110
Next Token : ```, Posbility: 0.0117
Next Token : 

, Posbility: 0.0141
Next Token : (, Posbility: 0.0522
Next Token : let, Posbility: 0.8164
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0085
Next Token :  apply, Posbility: 0.0124
Next Token :  main, Posbility: 0.0159
Next Token :  , Posbility: 0.1514
Next Token :  rec, Posbility: 0.7656
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fmt, Posbility: 0.0073
Next Token :  list, Posbility: 0.0120
Next Token :  format, Posbility: 0.0225
Next Token :  apply, Posbility: 0.0254
Next Token :  , Posbility: 0.8398
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : append, Posbility: 0.0053
Next Token : f, Posbility: 0.0060
Next Token : map, Posbility: 0.0100
Next Token : write, Posbility: 0.0128
Next Token : print, Posbility: 0.8984
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0004
Next Token : n, Posbility: 0.0004
Next Token :  =, Posbility: 0.0012
Next Token :  , Posbility: 0.0041
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : map, Posbility: 0.0072
Next Token : all, Posbility: 0.0072
Next Token : string, Posbility: 0.0093
Next Token : fmt, Posbility: 0.0153
Next Token : list, Posbility: 0.8359
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0021
Next Token :  fmt, Posbility: 0.0021
Next Token :  , Posbility: 0.0058
Next Token : 2, Posbility: 0.0066
Next Token : _, Posbility: 0.9766
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : int, Posbility: 0.0148
Next Token : sep, Posbility: 0.0148
Next Token : list, Posbility: 0.0167
Next Token : str, Posbility: 0.0312
Next Token : fmt, Posbility: 0.5547
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fmt, Posbility: 0.0077
Next Token :  , Posbility: 0.0143
Next Token : s, Posbility: 0.0237
Next Token : 2, Posbility: 0.0344
Next Token : _, Posbility: 0.8867
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0095
Next Token : f, Posbility: 0.0139
Next Token : list, Posbility: 0.0139
Next Token : str, Posbility: 0.0260
Next Token : fmt, Posbility: 0.7578
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fmt, Posbility: 0.0063
Next Token :  , Posbility: 0.0104
Next Token : s, Posbility: 0.0117
Next Token : 2, Posbility: 0.0133
Next Token : _, Posbility: 0.9336
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0085
Next Token : list, Posbility: 0.0097
Next Token : sep, Posbility: 0.0160
Next Token : str, Posbility: 0.0232
Next Token : fmt, Posbility: 0.7695
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0016
Next Token : _, Posbility: 0.0042
Next Token :  fmt, Posbility: 0.0277
Next Token :  =, Posbility: 0.0403
Next Token :  , Posbility: 0.9180
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0001
Next Token : x, Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token : (, Posbility: 0.0003
Next Token : f, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fmt, Posbility: 0.0007
Next Token :  format, Posbility: 0.0007
Next Token :  , Posbility: 0.0031
Next Token : 1, Posbility: 0.0031
Next Token :  fmt, Posbility: 0.9883
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0018
Next Token :  , Posbility: 0.0023
Next Token : 0, Posbility: 0.0023
Next Token : 1, Posbility: 0.0596
Next Token :  fmt, Posbility: 0.9297
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  str, Posbility: 0.0003
Next Token :  , Posbility: 0.0022
Next Token : 1, Posbility: 0.0025
Next Token :  =, Posbility: 0.0036
Next Token :  fmt, Posbility: 0.9883
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fmt, Posbility: 0.0006
Next Token :  str, Posbility: 0.0007
Next Token :  , Posbility: 0.0042
Next Token :  fmt, Posbility: 0.1807
Next Token :  =, Posbility: 0.8086
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  match, Posbility: 0.0005
Next Token :  ..., Posbility: 0.0006
Next Token :  , Posbility: 0.0032
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0001
Next Token : let, Posbility: 0.0002
Next Token :    , Posbility: 0.0003
Next Token :     , Posbility: 0.0015
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0003
Next Token : if, Posbility: 0.0003
Next Token : print, Posbility: 0.0003
Next Token : let, Posbility: 0.0017
Next Token : match, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  String, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : lst, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : first, Posbility: 0.0000
Next Token : ht, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : head, Posbility: 0.0008
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  with, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : rst, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : tst, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : lst, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  WITH, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  avec, Posbility: 0.0000
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : {, Posbility: 0.0000
Next Token : case, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  [], Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ->, Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ()->, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : return, Posbility: 0.0000
Next Token : â†’, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : print, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : ();, Posbility: 0.0002
Next Token : (), Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : ::{, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : xl, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0004
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0000
Next Token :  when, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : â†’, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  fmt, Posbility: 0.0001
Next Token :  {, Posbility: 0.0001
Next Token : 
, Posbility: 0.0036
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : print, Posbility: 0.0010
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f
 score:False
Error type: noerr
---------------------------
Next Token :  str, Posbility: 0.0000
Next Token : fmt, Posbility: 0.0000
Next Token :  format, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt
 score:False
Error type: noerr
---------------------------
Next Token :  str, Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token : fmt, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token : fmt, Posbility: 0.0001
Next Token :  str, Posbility: 0.0001
Next Token :  format, Posbility: 0.0001
Next Token :  , Posbility: 0.0025
Next Token :  fmt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  str, Posbility: 0.0000
Next Token :   , Posbility: 0.0002
Next Token :  fmt, Posbility: 0.0008
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt 
 score:False
Error type: noerr
---------------------------
Next Token : ->, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : f, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : s, Posbility: 0.0002
Next Token : ;, Posbility: 0.0003
Next Token : 
, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x 
 score:False
Error type: noerr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ();, Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ;
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : print, Posbility: 0.0003
Next Token : 
, Posbility: 0.0015
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : print, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :  list, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_
 score:False
Error type: noerr
---------------------------
Next Token : lists, Posbility: 0.0000
Next Token : lst, Posbility: 0.0000
Next Token :  list, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list
 score:False
Error type: noerr
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0002
Next Token :  , Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_
 score:False
Error type: noerr
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : format, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0001
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  cmd, Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token :  fmt, Posbility: 0.0017
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_
 score:False
Error type: noerr
---------------------------
Next Token : format, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : plt, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0001
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt
 score:False
Error type: noerr
---------------------------
Next Token :  str, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0017
Next Token :  fmt, Posbility: 0.0022
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_
 score:False
Error type: noerr
---------------------------
Next Token : zz, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : plt, Posbility: 0.0001
Next Token :  fmt, Posbility: 0.0002
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  fmt, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt 
 score:False
Error type: noerr
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : fmt, Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt
 score:False
Error type: noerr
---------------------------
Next Token :  str, Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token : fmt, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token : fmt, Posbility: 0.0000
Next Token :  format, Posbility: 0.0001
Next Token :  str, Posbility: 0.0001
Next Token :  , Posbility: 0.0076
Next Token :  fmt, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token :  fmt, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt 
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : lst, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt x
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : 

, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0013
Next Token : , Posbility: 0.0045
Next Token : 

, Posbility: 0.3184
Next Token : 
, Posbility: 0.6758
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs

 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0058
Next Token : ```, Posbility: 0.0069
Next Token : [, Posbility: 0.0084
Next Token : (, Posbility: 0.0242
Next Token : let, Posbility: 0.9102
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0046
Next Token :  main, Posbility: 0.0046
Next Token :  apply, Posbility: 0.0059
Next Token :  , Posbility: 0.0918
Next Token :  rec, Posbility: 0.8711
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fmt, Posbility: 0.0042
Next Token :  list, Posbility: 0.0088
Next Token :  format, Posbility: 0.0128
Next Token :  apply, Posbility: 0.0164
Next Token :  , Posbility: 0.8945
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : append, Posbility: 0.0030
Next Token : f, Posbility: 0.0039
Next Token : map, Posbility: 0.0049
Next Token : write, Posbility: 0.0063
Next Token : print, Posbility: 0.9414
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0002
Next Token : n, Posbility: 0.0003
Next Token :  =, Posbility: 0.0008
Next Token :  , Posbility: 0.0022
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : map, Posbility: 0.0029
Next Token : string, Posbility: 0.0048
Next Token : all, Posbility: 0.0048
Next Token : fmt, Posbility: 0.0079
Next Token : list, Posbility: 0.9141
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0004
Next Token :  fmt, Posbility: 0.0008
Next Token : 2, Posbility: 0.0022
Next Token :  , Posbility: 0.0032
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : int, Posbility: 0.0055
Next Token : sep, Posbility: 0.0055
Next Token : list, Posbility: 0.0080
Next Token : str, Posbility: 0.0132
Next Token : fmt, Posbility: 0.8164
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0011
Next Token :  , Posbility: 0.0045
Next Token : 2, Posbility: 0.0045
Next Token : s, Posbility: 0.0074
Next Token : _, Posbility: 0.9727
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0011
Next Token : s, Posbility: 0.0015
Next Token : f, Posbility: 0.0016
Next Token : str, Posbility: 0.0035
Next Token : fmt, Posbility: 0.9648
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0004
Next Token : 2, Posbility: 0.0006
Next Token :  fmt, Posbility: 0.0008
Next Token :  , Posbility: 0.0036
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : int, Posbility: 0.0002
Next Token : f, Posbility: 0.0002
Next Token :  fmt, Posbility: 0.0003
Next Token : str, Posbility: 0.0007
Next Token : fmt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0006
Next Token :  =, Posbility: 0.0007
Next Token :  fmt, Posbility: 0.0024
Next Token :  , Posbility: 0.0140
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0010
Next Token :  , Posbility: 0.0024
Next Token :  fmt, Posbility: 0.0031
Next Token : str, Posbility: 0.0051
Next Token : fmt, Posbility: 0.9688
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0007
Next Token : _, Posbility: 0.0034
Next Token :  fmt, Posbility: 0.0049
Next Token :  =, Posbility: 0.0593
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : (), Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0002
Next Token :  =, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token :  format, Posbility: 0.0003
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : fmt, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 1, Posbility: 0.0009
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  str, Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  str, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  =, Posbility: 0.0007
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0004
Next Token : =, Posbility: 0.0005
Next Token :  , Posbility: 0.0008
Next Token :  fmt, Posbility: 0.0059
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  match, Posbility: 0.0004
Next Token :  ..., Posbility: 0.0005
Next Token :  , Posbility: 0.0022
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token :    , Posbility: 0.0002
Next Token :     , Posbility: 0.0009
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0002
Next Token : f, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : let, Posbility: 0.0007
Next Token : match, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token :  String, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : lst, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : ht, Posbility: 0.0000
Next Token : head, Posbility: 0.0007
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  with, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : rst, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : tst, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : lst, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  WITH, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  avec, Posbility: 0.0000
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : {, Posbility: 0.0000
Next Token : case, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  [], Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : â†’, Posbility: 0.0000
Next Token : return, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : print, Posbility: 0.0000
Next Token : ();, Posbility: 0.0002
Next Token : (), Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
 score:False
Error type: noerr
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : @@, Posbility: 0.0000
Next Token : ::{, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : xl, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : â†’, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fmt, Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0017
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : print, Posbility: 0.0003
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f
 score:False
Error type: noerr
---------------------------
Next Token :  str, Posbility: 0.0000
Next Token : fmt, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt
 score:False
Error type: noerr
---------------------------
Next Token :  str, Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : fmt, Posbility: 0.0000
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token :  msg, Posbility: 0.0000
Next Token : fmt, Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token : fmt, Posbility: 0.0000
Next Token :  format, Posbility: 0.0001
Next Token :  str, Posbility: 0.0002
Next Token :  , Posbility: 0.0179
Next Token :  fmt, Posbility: 0.9805
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0002
Next Token :  fmt, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt 
 score:False
Error type: noerr
---------------------------
Next Token : xl, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token : ;, Posbility: 0.0003
Next Token : s, Posbility: 0.0003
Next Token : 
, Posbility: 0.0009
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x 
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token : ();, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ;
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : print, Posbility: 0.0003
Next Token : 
, Posbility: 0.0036
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; 
 score:False
Error type: noerr
---------------------------
Next Token : println, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : print, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  list, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_
 score:False
Error type: noerr
---------------------------
Next Token : lista, Posbility: 0.0000
Next Token : lst, Posbility: 0.0000
Next Token :  list, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list
 score:False
Error type: noerr
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_
 score:False
Error type: noerr
---------------------------
Next Token : plt, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : format, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0001
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt
 score:False
Error type: noerr
---------------------------
Next Token :  cmd, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_
 score:False
Error type: noerr
---------------------------
Next Token : format, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : plt, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0001
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt
 score:False
Error type: noerr
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_
 score:False
Error type: noerr
---------------------------
Next Token : err, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : plt, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0001
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0001
Next Token :  , Posbility: 0.0010
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_
 score:False
Error type: noerr
---------------------------
Next Token : zz, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : plt, Posbility: 0.0001
Next Token :  fmt, Posbility: 0.0002
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : 
, Posbility: 0.0008
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f
 score:False
Error type: noerr
---------------------------
Next Token : fmt, Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt
 score:False
Error type: noerr
---------------------------
Next Token : fmt, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token : fmt, Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token :  format, Posbility: 0.0001
Next Token :  str, Posbility: 0.0002
Next Token : 
, Posbility: 0.0014
Next Token :  , Posbility: 0.3477
Next Token :  fmt, Posbility: 0.6484
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : s, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0025
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt 
 score:False
Error type: noerr
---------------------------
Next Token : lst, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt x
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token : 

, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0010
Next Token : , Posbility: 0.0031
Next Token : 

, Posbility: 0.3184
Next Token : 
, Posbility: 0.6758
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs

 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0023
Next Token : ```, Posbility: 0.0038
Next Token : [, Posbility: 0.0063
Next Token : (, Posbility: 0.0183
Next Token : let, Posbility: 0.9414
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  main, Posbility: 0.0025
Next Token :  list, Posbility: 0.0037
Next Token :  apply, Posbility: 0.0037
Next Token :  , Posbility: 0.0737
Next Token :  rec, Posbility: 0.8984
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  loop, Posbility: 0.0033
Next Token :  list, Posbility: 0.0070
Next Token :  format, Posbility: 0.0090
Next Token :  apply, Posbility: 0.0131
Next Token :  , Posbility: 0.9180
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : append, Posbility: 0.0024
Next Token : map, Posbility: 0.0031
Next Token : f, Posbility: 0.0034
Next Token : write, Posbility: 0.0044
Next Token : print, Posbility: 0.9570
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0002
Next Token : n, Posbility: 0.0002
Next Token :  =, Posbility: 0.0007
Next Token :  , Posbility: 0.0017
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : map, Posbility: 0.0018
Next Token : string, Posbility: 0.0030
Next Token : all, Posbility: 0.0030
Next Token : fmt, Posbility: 0.0049
Next Token : list, Posbility: 0.9414
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0003
Next Token : 2, Posbility: 0.0012
Next Token :  fmt, Posbility: 0.0013
Next Token :  , Posbility: 0.0041
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0032
Next Token : int, Posbility: 0.0046
Next Token : list, Posbility: 0.0059
Next Token : str, Posbility: 0.0086
Next Token : fmt, Posbility: 0.8789
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fmt, Posbility: 0.0005
Next Token : 2, Posbility: 0.0015
Next Token :  , Posbility: 0.0036
Next Token : s, Posbility: 0.0046
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0007
Next Token : f, Posbility: 0.0008
Next Token : str, Posbility: 0.0012
Next Token :  fmt, Posbility: 0.0012
Next Token : fmt, Posbility: 0.9844
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0002
Next Token :  fmt, Posbility: 0.0002
Next Token :  =, Posbility: 0.0004
Next Token :  , Posbility: 0.0028
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0001
Next Token : str, Posbility: 0.0002
Next Token : _, Posbility: 0.0002
Next Token :  fmt, Posbility: 0.0006
Next Token : fmt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token :  =, Posbility: 0.0002
Next Token :  , Posbility: 0.0013
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : plt, Posbility: 0.0001
Next Token :  fmt, Posbility: 0.0001
Next Token : str, Posbility: 0.0002
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0002
Next Token :  fmt, Posbility: 0.0010
Next Token :  =, Posbility: 0.0013
Next Token :  , Posbility: 0.0140
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0005
Next Token : str, Posbility: 0.0024
Next Token :  , Posbility: 0.0035
Next Token :  fmt, Posbility: 0.0035
Next Token : fmt, Posbility: 0.9766
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token :  fmt, Posbility: 0.0004
Next Token : _, Posbility: 0.0023
Next Token :  =, Posbility: 0.0757
Next Token :  , Posbility: 0.9219
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : (), Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : _, Posbility: 0.0002
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fmt, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 0.0002
Next Token :  format, Posbility: 0.0002
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token : fmt, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : FMT, Posbility: 0.0000
Next Token : fmt, Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fmt, Posbility: 0.0000
Next Token :  str, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  str, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 0.0022
Next Token :  fmt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : =, Posbility: 0.0003
Next Token :   , Posbility: 0.0004
Next Token :  , Posbility: 0.0004
Next Token :  fmt, Posbility: 0.0017
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ..., Posbility: 0.0002
Next Token :  match, Posbility: 0.0003
Next Token :  , Posbility: 0.0017
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0006
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : f, Posbility: 0.0002
Next Token : let, Posbility: 0.0003
Next Token : print, Posbility: 0.0003
Next Token : match, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token :  String, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : lst, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : ht, Posbility: 0.0000
Next Token : head, Posbility: 0.0008
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  with, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ls, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : tst, Posbility: 0.0000
Next Token : lst, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  WITH, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  avec, Posbility: 0.0000
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : {, Posbility: 0.0000
Next Token : case, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  nil, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  [], Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ()->, Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Next Token : â†’, Posbility: 0.0000
Next Token : return, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : print, Posbility: 0.0000
Next Token : ();, Posbility: 0.0002
Next Token : (), Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
 score:False
Error type: noerr
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : @@, Posbility: 0.0000
Next Token : ::{, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : xl, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : â†’, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0015
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : print, Posbility: 0.0003
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f
 score:False
Error type: noerr
---------------------------
Next Token :  str, Posbility: 0.0000
Next Token : fmt, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt
 score:False
Error type: noerr
---------------------------
Next Token :  str, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token : fmt, Posbility: 0.0000
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token :  msg, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : fmt, Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token :  str, Posbility: 0.0000
Next Token : fmt, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token :  str, Posbility: 0.0000
Next Token : fmt, Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt 
 score:False
Error type: noerr
---------------------------
Next Token : xl, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token : ;, Posbility: 0.0003
Next Token : 
, Posbility: 0.0008
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x 
 score:False
Error type: noerr
---------------------------
Next Token : ->, Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token : ();, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ;
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : print, Posbility: 0.0005
Next Token : 
, Posbility: 0.0097
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; 
 score:False
Error type: noerr
---------------------------
Next Token : println, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token : print, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  list, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_
 score:False
Error type: noerr
---------------------------
Next Token : lista, Posbility: 0.0000
Next Token : lst, Posbility: 0.0000
Next Token :  list, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list
 score:False
Error type: noerr
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_
 score:False
Error type: noerr
---------------------------
Next Token : plt, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : format, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0001
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt
 score:False
Error type: noerr
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_
 score:False
Error type: noerr
---------------------------
Next Token : FMT, Posbility: 0.0000
Next Token : format, Posbility: 0.0000
Next Token : plt, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0001
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt
 score:False
Error type: noerr
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_
 score:False
Error type: noerr
---------------------------
Next Token : str, Posbility: 0.0000
Next Token : FMT, Posbility: 0.0000
Next Token : plt, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0001
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_
 score:False
Error type: noerr
---------------------------
Next Token : err, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : plt, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0001
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0002
Next Token :  , Posbility: 0.0179
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_
 score:False
Error type: noerr
---------------------------
Next Token : FMT, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : plt, Posbility: 0.0001
Next Token :  fmt, Posbility: 0.0002
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : 
, Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : \, Posbility: 0.0001
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0004
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt
 score:False
Error type: noerr
---------------------------
Next Token : fmt, Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token : fmt, Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token : fmt, Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token :  str, Posbility: 0.0001
Next Token :  format, Posbility: 0.0002
Next Token : 
, Posbility: 0.0011
Next Token :  , Posbility: 0.0757
Next Token :  fmt, Posbility: 0.9219
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :  fmt, Posbility: 0.0002
Next Token :   , Posbility: 0.0003
Next Token : 
, Posbility: 0.0028
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt 
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt x
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token : 

, Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0010
Next Token : , Posbility: 0.0018
Next Token : 

, Posbility: 0.3477
Next Token : 
, Posbility: 0.6484
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs

 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0021
Next Token : [, Posbility: 0.0034
Next Token : ```, Posbility: 0.0034
Next Token : (, Posbility: 0.0145
Next Token : let, Posbility: 0.9531
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  main, Posbility: 0.0014
Next Token :  list, Posbility: 0.0029
Next Token :  apply, Posbility: 0.0038
Next Token :  , Posbility: 0.0588
Next Token :  rec, Posbility: 0.9180
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  loop, Posbility: 0.0030
Next Token :  list, Posbility: 0.0044
Next Token :  format, Posbility: 0.0050
Next Token :  apply, Posbility: 0.0072
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : append, Posbility: 0.0019
Next Token : map, Posbility: 0.0021
Next Token : write, Posbility: 0.0027
Next Token : f, Posbility: 0.0031
Next Token : print, Posbility: 0.9688
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0001
Next Token : 0, Posbility: 0.0001
Next Token :  =, Posbility: 0.0006
Next Token :  , Posbility: 0.0013
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : map, Posbility: 0.0011
Next Token : string, Posbility: 0.0019
Next Token : all, Posbility: 0.0024
Next Token : fmt, Posbility: 0.0039
Next Token : list, Posbility: 0.9609
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0003
Next Token : 2, Posbility: 0.0007
Next Token :  fmt, Posbility: 0.0010
Next Token :  , Posbility: 0.0046
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0026
Next Token : int, Posbility: 0.0029
Next Token : list, Posbility: 0.0033
Next Token : str, Posbility: 0.0055
Next Token : fmt, Posbility: 0.9219
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0005
Next Token :  fmt, Posbility: 0.0007
Next Token : s, Posbility: 0.0019
Next Token :  , Posbility: 0.0123
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0003
Next Token : _, Posbility: 0.0004
Next Token : str, Posbility: 0.0004
Next Token :  fmt, Posbility: 0.0010
Next Token : fmt, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0001
Next Token :  fmt, Posbility: 0.0002
Next Token :  =, Posbility: 0.0004
Next Token :  , Posbility: 0.0032
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : str, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token :  fmt, Posbility: 0.0008
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token :  , Posbility: 0.0013
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : str, Posbility: 0.0000
Next Token : ..., Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  fmt, Posbility: 0.0001
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  ..., Posbility: 0.0000
Next Token :  =, Posbility: 0.0002
Next Token :  , Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : FMT, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : plt, Posbility: 0.0001
Next Token :  fmt, Posbility: 0.0001
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token :  fmt, Posbility: 0.0003
Next Token :  =, Posbility: 0.0013
Next Token :  , Posbility: 0.0124
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0003
Next Token : str, Posbility: 0.0006
Next Token :  , Posbility: 0.0013
Next Token :  fmt, Posbility: 0.0019
Next Token : fmt, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token :  fmt, Posbility: 0.0004
Next Token : _, Posbility: 0.0015
Next Token :  =, Posbility: 0.0952
Next Token :  , Posbility: 0.9023
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : (), Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : _, Posbility: 0.0002
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fmt, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token :  format, Posbility: 0.0001
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token : fmt, Posbility: 0.0001
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : FMT, Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : fmt, Posbility: 0.0000
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token : fmt, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token : fmt, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  format, Posbility: 0.0000
Next Token :  str, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0003
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token :   , Posbility: 0.0004
Next Token :  , Posbility: 0.0005
Next Token :  fmt, Posbility: 0.0028
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ..., Posbility: 0.0001
Next Token :  match, Posbility: 0.0002
Next Token :  , Posbility: 0.0013
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =

 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token :    , Posbility: 0.0002
Next Token :     , Posbility: 0.0005
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : let, Posbility: 0.0002
Next Token : f, Posbility: 0.0002
Next Token : print, Posbility: 0.0003
Next Token : match, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token :  String, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match 
 score:False
Error type: noerr
---------------------------
Next Token : L, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : hq, Posbility: 0.0000
Next Token : ht, Posbility: 0.0000
Next Token : head, Posbility: 0.0008
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  with, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd 
 score:False
Error type: noerr
---------------------------
Next Token : ls, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : tst, Posbility: 0.0000
Next Token : lst, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  WITH, Posbility: 0.0000
Next Token :  avec, Posbility: 0.0000
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
 score:False
Error type: noerr
---------------------------
Next Token :  [], Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  
 score:False
Error type: noerr
---------------------------
Next Token : [, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : {, Posbility: 0.0000
Next Token : case, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  |
 score:False
Error type: noerr
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  [], Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | []
 score:False
Error type: noerr
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] 
 score:False
Error type: noerr
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Next Token : â†’, Posbility: 0.0000
Next Token : return, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] ->
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> 
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : print, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : ();, Posbility: 0.0001
Next Token : (), Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
 score:False
Error type: noerr
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  |
 score:False
Error type: noerr
---------------------------
Next Token :  i, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x 
 score:False
Error type: noerr
---------------------------
Next Token : @@, Posbility: 0.0000
Next Token : ::{, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x ::
 score:False
Error type: noerr
---------------------------
Next Token :  rest, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : xl, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: x
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs 
 score:False
Error type: noerr
---------------------------
Next Token : :, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : â†’, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs ->
 score:False
Error type: noerr
---------------------------
Next Token : f, Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> 
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : print, Posbility: 0.0002
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f
 score:False
Error type: noerr
---------------------------
Next Token :  str, Posbility: 0.0000
Next Token : fmt, Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt
 score:False
Error type: noerr
---------------------------
Next Token :  str, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token : fmt, Posbility: 0.0000
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  msg, Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token : fmt, Posbility: 0.0000
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token :  msg, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token : fmt, Posbility: 0.0000
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token :  msg, Posbility: 0.0000
Next Token : fmt, Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token :  str, Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token : fmt, Posbility: 0.0001
Next Token :  , Posbility: 0.0036
Next Token :  fmt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0002
Next Token :  fmt, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt 
 score:False
Error type: noerr
---------------------------
Next Token : xl, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token : s, Posbility: 0.0001
Next Token : ;, Posbility: 0.0003
Next Token : 
, Posbility: 0.0008
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x 
 score:False
Error type: noerr
---------------------------
Next Token : ->, Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token : ();, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ;
 score:False
Error type: noerr
---------------------------
Next Token : \, Posbility: 0.0000
Next Token :   , Posbility: 0.0002
Next Token : print, Posbility: 0.0008
Next Token : 
, Posbility: 0.0179
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; 
 score:False
Error type: noerr
---------------------------
Next Token : println, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : 
, Posbility: 0.0003
Next Token : print, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  list, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_
 score:False
Error type: noerr
---------------------------
Next Token : lista, Posbility: 0.0000
Next Token : lst, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token :  list, Posbility: 0.0000
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list
 score:False
Error type: noerr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_
 score:False
Error type: noerr
---------------------------
Next Token : plt, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : format, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0002
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt
 score:False
Error type: noerr
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_
 score:False
Error type: noerr
---------------------------
Next Token : FMT, Posbility: 0.0000
Next Token : format, Posbility: 0.0000
Next Token : plt, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0001
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt
 score:False
Error type: noerr
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_
 score:False
Error type: noerr
---------------------------
Next Token : format, Posbility: 0.0000
Next Token : FMT, Posbility: 0.0000
Next Token : plt, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0001
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_
 score:False
Error type: noerr
---------------------------
Next Token : frm, Posbility: 0.0000
Next Token : FMT, Posbility: 0.0000
Next Token : plt, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0001
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_
 score:False
Error type: noerr
---------------------------
Next Token : frm, Posbility: 0.0000
Next Token : FMT, Posbility: 0.0000
Next Token : plt, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0001
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  fmt, Posbility: 0.0001
Next Token :  , Posbility: 0.0374
Next Token : _, Posbility: 0.9609
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_
 score:False
Error type: noerr
---------------------------
Next Token : FMT, Posbility: 0.0000
Next Token : ff, Posbility: 0.0000
Next Token : plt, Posbility: 0.0001
Next Token :  fmt, Posbility: 0.0003
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : 

, Posbility: 0.0001
Next Token : 
, Posbility: 0.0041
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : \, Posbility: 0.0001
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 0.0008
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt
 score:False
Error type: noerr
---------------------------
Next Token : fmt, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : fmt, Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : fmt, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token : fmt, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token :  str, Posbility: 0.0001
Next Token :  format, Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token :  , Posbility: 0.0110
Next Token :  fmt, Posbility: 0.9883
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token :   , Posbility: 0.0002
Next Token :  fmt, Posbility: 0.0007
Next Token : 
, Posbility: 0.0008
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt 
 score:False
Error type: noerr
---------------------------
Next Token : xl, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt x
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token : 

, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0007
Next Token : , Posbility: 0.0019
Next Token : 

, Posbility: 0.3203
Next Token : 
, Posbility: 0.6758
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs

 score:False
Error type: noerr
---------------------------
Next Token : module, Posbility: 0.0020
Next Token : in, Posbility: 0.0022
Next Token : ```, Posbility: 0.0024
Next Token : (, Posbility: 0.0186
Next Token : let, Posbility: 0.9531
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let
 score:False
Error type: noerr
---------------------------
Next Token :  main, Posbility: 0.0015
Next Token :  list, Posbility: 0.0033
Next Token :  apply, Posbility: 0.0033
Next Token :  , Posbility: 0.0659
Next Token :  rec, Posbility: 0.9102
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec
 score:False
Error type: noerr
---------------------------
Next Token :  loop, Posbility: 0.0021
Next Token :  list, Posbility: 0.0031
Next Token :  format, Posbility: 0.0031
Next Token :  apply, Posbility: 0.0039
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec 
 score:False
Error type: noerr
---------------------------
Next Token : write, Posbility: 0.0013
Next Token : append, Posbility: 0.0013
Next Token : map, Posbility: 0.0015
Next Token : f, Posbility: 0.0021
Next Token : print, Posbility: 0.9766
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print
 score:False
Error type: noerr
---------------------------
Next Token : n, Posbility: 0.0001
Next Token : 0, Posbility: 0.0001
Next Token :  =, Posbility: 0.0004
Next Token :  , Posbility: 0.0012
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_
 score:False
Error type: noerr
---------------------------
Next Token : tuple, Posbility: 0.0009
Next Token : string, Posbility: 0.0013
Next Token : all, Posbility: 0.0019
Next Token : fmt, Posbility: 0.0027
Next Token : list, Posbility: 0.9727
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0004
Next Token :  =, Posbility: 0.0004
Next Token :  fmt, Posbility: 0.0009
Next Token :  , Posbility: 0.0052
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_
 score:False
Error type: noerr
---------------------------
Next Token : int, Posbility: 0.0014
Next Token : n, Posbility: 0.0016
Next Token : list, Posbility: 0.0021
Next Token : str, Posbility: 0.0030
Next Token : fmt, Posbility: 0.9531
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt
 score:False
Error type: noerr
---------------------------
Next Token :  fmt, Posbility: 0.0002
Next Token : 2, Posbility: 0.0002
Next Token : s, Posbility: 0.0008
Next Token :  , Posbility: 0.0067
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0002
Next Token : str, Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token :  fmt, Posbility: 0.0012
Next Token : fmt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0001
Next Token :  fmt, Posbility: 0.0001
Next Token :  =, Posbility: 0.0004
Next Token :  , Posbility: 0.0032
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_
 score:False
Error type: noerr
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : str, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token :  fmt, Posbility: 0.0005
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0000
Next Token :  =, Posbility: 0.0003
Next Token :  , Posbility: 0.0013
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_
 score:False
Error type: noerr
---------------------------
Next Token : plt, Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  fmt, Posbility: 0.0002
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  ..., Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token :  , Posbility: 0.0007
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : plt, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0001
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt
 score:False
Error type: noerr
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  =, Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_
 score:False
Error type: noerr
---------------------------
Next Token : FMT, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token :  fmt, Posbility: 0.0001
Next Token : plt, Posbility: 0.0001
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt
 score:False
Error type: noerr
---------------------------
Next Token :  fmt, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token :  =, Posbility: 0.0024
Next Token :  , Posbility: 0.0229
Next Token : _, Posbility: 0.9727
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_
 score:False
Error type: noerr
---------------------------
Next Token : f, Posbility: 0.0003
Next Token : str, Posbility: 0.0004
Next Token :  , Posbility: 0.0009
Next Token :  fmt, Posbility: 0.0013
Next Token : fmt, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0002
Next Token :  fmt, Posbility: 0.0003
Next Token : _, Posbility: 0.0009
Next Token :  =, Posbility: 0.1475
Next Token :  , Posbility: 0.8516
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : (), Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f
 score:False
Error type: noerr
---------------------------
Next Token : fmt, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  format, Posbility: 0.0001
Next Token :  =, Posbility: 0.0002
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : fmt, Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token : FMT, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token : fmt, Posbility: 0.0000
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :  format, Posbility: 0.0000
Next Token : fmt, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token :  format, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : fmt, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token :  format, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token :  str, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0003
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0003
Next Token : 
, Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token :  fmt, Posbility: 0.0110
Next Token :  =, Posbility: 0.9883
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ..., Posbility: 0.0001
Next Token :  match, Posbility: 0.0002
Next Token :  , Posbility: 0.0010
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =

 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token :    , Posbility: 0.0002
Next Token :     , Posbility: 0.0004
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : print, Posbility: 0.0002
Next Token : f, Posbility: 0.0002
Next Token : match, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token :  String, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match 
 score:False
Error type: noerr
---------------------------
Next Token : L, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : ht, Posbility: 0.0000
Next Token : hq, Posbility: 0.0000
Next Token : head, Posbility: 0.0007
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd
 score:False
Error type: noerr
---------------------------
Next Token :  list, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  with, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd 
 score:False
Error type: noerr
---------------------------
Next Token : ls, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : tst, Posbility: 0.0000
Next Token : lst, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : with, Posbility: 0.0000
Next Token :  WITH, Posbility: 0.0000
Next Token :  avec, Posbility: 0.0000
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
 score:False
Error type: noerr
---------------------------
Next Token :  [], Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : {, Posbility: 0.0000
Next Token : case, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  |
 score:False
Error type: noerr
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  [], Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | []
 score:False
Error type: noerr
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] 
 score:False
Error type: noerr
---------------------------
Next Token : (), Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : â†’, Posbility: 0.0000
Next Token : return, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] ->
 score:False
Error type: noerr
---------------------------
Next Token :  "", Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> 
 score:False
Error type: noerr
---------------------------
Next Token : print, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : ();, Posbility: 0.0001
Next Token : (), Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
 score:False
Error type: noerr
---------------------------
Next Token :  (*, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  |
 score:False
Error type: noerr
---------------------------
Next Token :  i, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x 
 score:False
Error type: noerr
---------------------------
Next Token : @@, Posbility: 0.0000
Next Token : ::{, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x ::
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : xl, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: x
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs
 score:False
Error type: noerr
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs 
 score:False
Error type: noerr
---------------------------
Next Token : :, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : â†’, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs ->
 score:False
Error type: noerr
---------------------------
Next Token : f, Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0012
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> 
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : print, Posbility: 0.0002
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f
 score:False


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>