code:
 (* Write a function to convert a given string to a tuple of characters. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  convert, Posbility: 0.0500
Next Token :  to, Posbility: 0.1060
Next Token :  string, Posbility: 0.1060
Next Token :  rec, Posbility: 0.1357
Next Token :  , Posbility: 0.2891
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0459
Next Token : (, Posbility: 0.0522
Next Token : (), Posbility: 0.0522
Next Token : s, Posbility: 0.1416
Next Token : split, Posbility: 0.1816
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0234
Next Token :  str, Posbility: 0.0234
Next Token :  =, Posbility: 0.1348
Next Token :  , Posbility: 0.1729
Next Token : _, Posbility: 0.5352
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : to, Posbility: 0.0464
Next Token : at, Posbility: 0.0767
Next Token : str, Posbility: 0.0869
Next Token : char, Posbility: 0.1260
Next Token : string, Posbility: 0.3887
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0356
Next Token :  str, Posbility: 0.0588
Next Token : _, Posbility: 0.1602
Next Token :  =, Posbility: 0.1602
Next Token :  , Posbility: 0.4355
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : st, Posbility: 0.0030
Next Token : :, Posbility: 0.0038
Next Token : (, Posbility: 0.0118
Next Token : x, Posbility: 0.0250
Next Token : s, Posbility: 0.9414
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sep, Posbility: 0.0016
Next Token :  str, Posbility: 0.0027
Next Token :  ~, Posbility: 0.0031
Next Token :  , Posbility: 0.0138
Next Token :  =, Posbility: 0.9648
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  string, Posbility: 0.0083
Next Token :  match, Posbility: 0.0199
Next Token :  String, Posbility: 0.0371
Next Token :  , Posbility: 0.1660
Next Token : 
, Posbility: 0.7461
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0056
Next Token : 	, Posbility: 0.0072
Next Token :    , Posbility: 0.0153
Next Token :     , Posbility: 0.1279
Next Token :   , Posbility: 0.8320
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0270
Next Token : s, Posbility: 0.0393
Next Token : List, Posbility: 0.0503
Next Token : match, Posbility: 0.0942
Next Token : let, Posbility: 0.6953
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  len, Posbility: 0.0417
Next Token :  open, Posbility: 0.0535
Next Token :  chars, Posbility: 0.0535
Next Token :  rec, Posbility: 0.1875
Next Token :  , Posbility: 0.3965
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0452
Next Token : x, Posbility: 0.0452
Next Token : n, Posbility: 0.0659
Next Token : split, Posbility: 0.1084
Next Token : s, Posbility: 0.2295
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : len, Posbility: 0.0356
Next Token : 1, Posbility: 0.0664
Next Token : s, Posbility: 0.0854
Next Token : _, Posbility: 0.1807
Next Token :  =, Posbility: 0.4902
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0040
Next Token :  ", Posbility: 0.0040
Next Token :  string, Posbility: 0.0040
Next Token :  , Posbility: 0.3633
Next Token :  String, Posbility: 0.6016
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0010
Next Token :  , Posbility: 0.0017
Next Token : s, Posbility: 0.0017
Next Token : _, Posbility: 0.0028
Next Token : ., Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : down, Posbility: 0.0588
Next Token : sub, Posbility: 0.0669
Next Token : split, Posbility: 0.1099
Next Token : trim, Posbility: 0.1816
Next Token : to, Posbility: 0.2051
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : Char, Posbility: 0.0002
Next Token : List, Posbility: 0.0007
Next Token : list, Posbility: 0.0010
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : lowercase, Posbility: 0.0366
Next Token : string, Posbility: 0.0684
Next Token : char, Posbility: 0.1128
Next Token : array, Posbility: 0.1865
Next Token : list, Posbility: 0.5078
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0006
Next Token :  ~, Posbility: 0.0021
Next Token : (, Posbility: 0.0021
Next Token : _, Posbility: 0.0178
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : (, Posbility: 0.0059
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0006
Next Token :  , Posbility: 0.0012
Next Token :  |, Posbility: 0.0015
Next Token : 
, Posbility: 0.0085
Next Token :  in, Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0002
Next Token :   , Posbility: 0.0040
Next Token :  , Posbility: 0.0052
Next Token : 

, Posbility: 0.0059
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0005
Next Token :    , Posbility: 0.0005
Next Token : let, Posbility: 0.0005
Next Token :     , Posbility: 0.0028
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0400
Next Token : s, Posbility: 0.0452
Next Token : match, Posbility: 0.0513
Next Token : List, Posbility: 0.1230
Next Token : let, Posbility: 0.6250
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  first, Posbility: 0.0327
Next Token :  l, Posbility: 0.0371
Next Token :  len, Posbility: 0.0613
Next Token :  rec, Posbility: 0.2139
Next Token :  , Posbility: 0.3516
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0586
Next Token : split, Posbility: 0.0586
Next Token : (, Posbility: 0.0664
Next Token : n, Posbility: 0.1094
Next Token : s, Posbility: 0.1807
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0283
Next Token : 0, Posbility: 0.0364
Next Token : 1, Posbility: 0.0598
Next Token : _, Posbility: 0.0986
Next Token :  =, Posbility: 0.6445
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0027
Next Token :  [, Posbility: 0.0197
Next Token : 
, Posbility: 0.0532
Next Token :  String, Posbility: 0.2393
Next Token :  , Posbility: 0.6484
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Char, Posbility: 0.0208
Next Token : Seq, Posbility: 0.0303
Next Token : Array, Posbility: 0.1055
Next Token : s, Posbility: 0.1738
Next Token : List, Posbility: 0.5352
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : s, Posbility: 0.0002
Next Token : (, Posbility: 0.0004
Next Token : _, Posbility: 0.0015
Next Token : ., Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : of, Posbility: 0.0474
Next Token : iter, Posbility: 0.0608
Next Token : filter, Posbility: 0.1001
Next Token : map, Posbility: 0.1875
Next Token : rev, Posbility: 0.3496
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0013
Next Token : ., Posbility: 0.0021
Next Token :  ~, Posbility: 0.0021
Next Token : _, Posbility: 0.0327
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : <, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : List, Posbility: 0.0004
Next Token : (, Posbility: 0.0067
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0008
Next Token :  =, Posbility: 0.0012
Next Token :  , Posbility: 0.0013
Next Token : 
, Posbility: 0.0025
Next Token :  in, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0004
Next Token :   , Posbility: 0.0040
Next Token :  , Posbility: 0.0058
Next Token : 

, Posbility: 0.0096
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0001
Next Token :       , Posbility: 0.0003
Next Token :     , Posbility: 0.0008
Next Token :  , Posbility: 0.0013
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0209
Next Token : (, Posbility: 0.0442
Next Token : s, Posbility: 0.0569
Next Token : List, Posbility: 0.1060
Next Token : let, Posbility: 0.6914
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0221
Next Token :  first, Posbility: 0.0283
Next Token :  len, Posbility: 0.0283
Next Token :  rec, Posbility: 0.1436
Next Token :  , Posbility: 0.5703
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : split, Posbility: 0.0293
Next Token : (, Posbility: 0.0425
Next Token : x, Posbility: 0.0425
Next Token : n, Posbility: 0.0547
Next Token : s, Posbility: 0.5195
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0072
Next Token : 1, Posbility: 0.0081
Next Token : ', Posbility: 0.0092
Next Token : _, Posbility: 0.0118
Next Token :  =, Posbility: 0.9375
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0028
Next Token :  [, Posbility: 0.0125
Next Token : 
, Posbility: 0.0339
Next Token :  String, Posbility: 0.2500
Next Token :  , Posbility: 0.6797
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Char, Posbility: 0.0058
Next Token : (, Posbility: 0.0108
Next Token : Array, Posbility: 0.0201
Next Token : s, Posbility: 0.0483
Next Token : List, Posbility: 0.8555
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : init, Posbility: 0.0320
Next Token : take, Posbility: 0.0466
Next Token : filter, Posbility: 0.0869
Next Token : rev, Posbility: 0.2080
Next Token : map, Posbility: 0.3887
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0217
Next Token :  ~, Posbility: 0.0247
Next Token : i, Posbility: 0.0280
Next Token :  string, Posbility: 0.0669
Next Token :  , Posbility: 0.7188
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0128
Next Token : f, Posbility: 0.0211
Next Token : Char, Posbility: 0.0447
Next Token : s, Posbility: 0.0649
Next Token : (, Posbility: 0.7930
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : Fun, Posbility: 0.0153
Next Token : Char, Posbility: 0.0222
Next Token : function, Posbility: 0.0879
Next Token : String, Posbility: 0.1445
Next Token : fun, Posbility: 0.6484
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0161
Next Token :  char, Posbility: 0.0161
Next Token :  l, Posbility: 0.0234
Next Token :  i, Posbility: 0.0342
Next Token :  , Posbility: 0.8789
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0166
Next Token : s, Posbility: 0.0275
Next Token : ch, Posbility: 0.0275
Next Token : x, Posbility: 0.3340
Next Token : c, Posbility: 0.5508
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  when, Posbility: 0.0003
Next Token :  =>, Posbility: 0.0004
Next Token : ->, Posbility: 0.0004
Next Token : 1, Posbility: 0.0006
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : →, Posbility: 0.0001
Next Token : -, Posbility: 0.0001
Next Token : ::, Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Some, Posbility: 0.0222
Next Token :  [, Posbility: 0.0366
Next Token :  char, Posbility: 0.0605
Next Token :  String, Posbility: 0.0996
Next Token :  , Posbility: 0.7383
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (', Posbility: 0.0160
Next Token : List, Posbility: 0.0386
Next Token : (, Posbility: 0.1523
Next Token : Char, Posbility: 0.2217
Next Token : c, Posbility: 0.4688
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  |, Posbility: 0.0339
Next Token : ::, Posbility: 0.0635
Next Token : ,, Posbility: 0.1187
Next Token : ), Posbility: 0.2500
Next Token :  , Posbility: 0.3652
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ), Posbility: 0.0023
Next Token : ,, Posbility: 0.0092
Next Token : :, Posbility: 0.0679
Next Token : ^, Posbility: 0.3438
Next Token : ::, Posbility: 0.5664
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0182
Next Token :  nil, Posbility: 0.0182
Next Token :  String, Posbility: 0.0493
Next Token :  ', Posbility: 0.1729
Next Token :  , Posbility: 0.6016
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0159
Next Token : [', Posbility: 0.0204
Next Token : Nil, Posbility: 0.0261
Next Token : []), Posbility: 0.1709
Next Token : s, Posbility: 0.6758
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : @, Posbility: 0.0015
Next Token :  |, Posbility: 0.0024
Next Token :  @, Posbility: 0.0035
Next Token :  , Posbility: 0.0139
Next Token : ), Posbility: 0.9727
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ', Posbility: 0.0030
Next Token :  in, Posbility: 0.0039
Next Token :  String, Posbility: 0.0039
Next Token :  [], Posbility: 0.0175
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0008
Next Token : [', Posbility: 0.0010
Next Token : Char, Posbility: 0.0013
Next Token : (, Posbility: 0.0031
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0023
Next Token :  |, Posbility: 0.0104
Next Token : 
, Posbility: 0.0152
Next Token :  =, Posbility: 0.0250
Next Token :  in, Posbility: 0.9414
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0002
Next Token :   , Posbility: 0.0013
Next Token :  , Posbility: 0.0040
Next Token : 

, Posbility: 0.0052
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0002
Next Token : let, Posbility: 0.0002
Next Token :     , Posbility: 0.0007
Next Token :  , Posbility: 0.0022
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0190
Next Token : List, Posbility: 0.0588
Next Token : (, Posbility: 0.0757
Next Token : s, Posbility: 0.2051
Next Token : let, Posbility: 0.5586
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0134
Next Token :  first, Posbility: 0.0152
Next Token :  len, Posbility: 0.0250
Next Token :  rec, Posbility: 0.0322
Next Token :  , Posbility: 0.8320
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0110
Next Token : x, Posbility: 0.0110
Next Token : n, Posbility: 0.0125
Next Token : c, Posbility: 0.0142
Next Token : s, Posbility: 0.8789
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0019
Next Token : _, Posbility: 0.0024
Next Token : 1, Posbility: 0.0028
Next Token : ,, Posbility: 0.0031
Next Token :  =, Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0022
Next Token : 
, Posbility: 0.0035
Next Token :  [, Posbility: 0.0035
Next Token :  String, Posbility: 0.1172
Next Token :  , Posbility: 0.8672
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Char, Posbility: 0.0023
Next Token : Array, Posbility: 0.0026
Next Token : (, Posbility: 0.0071
Next Token : s, Posbility: 0.0361
Next Token : List, Posbility: 0.9297
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : to, Posbility: 0.0141
Next Token : filter, Posbility: 0.0181
Next Token : reverse, Posbility: 0.0232
Next Token : map, Posbility: 0.0630
Next Token : rev, Posbility: 0.7695
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0001
Next Token :  ~, Posbility: 0.0002
Next Token : ., Posbility: 0.0003
Next Token : _, Posbility: 0.0097
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : <, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : List, Posbility: 0.0002
Next Token : (, Posbility: 0.0025
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token :  =, Posbility: 0.0003
Next Token : 
, Posbility: 0.0005
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0002
Next Token :   , Posbility: 0.0015
Next Token :  , Posbility: 0.0036
Next Token : 

, Posbility: 0.0052
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0170
Next Token : List, Posbility: 0.0408
Next Token : (, Posbility: 0.1104
Next Token : s, Posbility: 0.3008
Next Token : let, Posbility: 0.4375
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0139
Next Token :  first, Posbility: 0.0139
Next Token :  rec, Posbility: 0.0139
Next Token :  len, Posbility: 0.0157
Next Token :  , Posbility: 0.8594
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0167
Next Token : n, Posbility: 0.0189
Next Token : (, Posbility: 0.0243
Next Token : c, Posbility: 0.0311
Next Token : s, Posbility: 0.8047
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0028
Next Token : ,, Posbility: 0.0028
Next Token : 0, Posbility: 0.0028
Next Token : 1, Posbility: 0.0031
Next Token :  =, Posbility: 0.9805
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0053
Next Token :  ", Posbility: 0.0053
Next Token :  [, Posbility: 0.0088
Next Token :  String, Posbility: 0.1768
Next Token :  , Posbility: 0.7930
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Array, Posbility: 0.0026
Next Token : Char, Posbility: 0.0034
Next Token : (, Posbility: 0.0092
Next Token : s, Posbility: 0.0249
Next Token : List, Posbility: 0.9336
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0002
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : take, Posbility: 0.0234
Next Token : to, Posbility: 0.0265
Next Token : filter, Posbility: 0.0265
Next Token : rev, Posbility: 0.0815
Next Token : map, Posbility: 0.6836
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : i, Posbility: 0.0050
Next Token : _, Posbility: 0.0064
Next Token :  string, Posbility: 0.0072
Next Token :  String, Posbility: 0.0082
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0030
Next Token : c, Posbility: 0.0043
Next Token : List, Posbility: 0.0092
Next Token : Char, Posbility: 0.0195
Next Token : (, Posbility: 0.9375
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : List, Posbility: 0.0009
Next Token : let, Posbility: 0.0009
Next Token : function, Posbility: 0.0035
Next Token : String, Posbility: 0.0066
Next Token : fun, Posbility: 0.9805
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0044
Next Token :  v, Posbility: 0.0056
Next Token :  i, Posbility: 0.0106
Next Token :  l, Posbility: 0.0135
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0154
Next Token : _, Posbility: 0.0254
Next Token : (, Posbility: 0.0254
Next Token : x, Posbility: 0.0688
Next Token : c, Posbility: 0.8398
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token :  =>, Posbility: 0.0005
Next Token : 1, Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : s, Posbility: 0.0001
Next Token : c, Posbility: 0.0001
Next Token : ::, Posbility: 0.0028
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0152
Next Token :  ', Posbility: 0.0195
Next Token :  char, Posbility: 0.0250
Next Token :  String, Posbility: 0.0679
Next Token :  , Posbility: 0.8281
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (', Posbility: 0.0168
Next Token : List, Posbility: 0.0277
Next Token : Char, Posbility: 0.0403
Next Token : (, Posbility: 0.1406
Next Token : c, Posbility: 0.7148
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  |, Posbility: 0.0084
Next Token :  +, Posbility: 0.0156
Next Token : ::, Posbility: 0.0330
Next Token : ), Posbility: 0.1299
Next Token :  , Posbility: 0.7500
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ), Posbility: 0.0008
Next Token : -, Posbility: 0.0015
Next Token : :, Posbility: 0.0178
Next Token : ^, Posbility: 0.2168
Next Token : ::, Posbility: 0.7578
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0106
Next Token :  [, Posbility: 0.0369
Next Token :  String, Posbility: 0.0476
Next Token :  ', Posbility: 0.0781
Next Token :  , Posbility: 0.7422
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [', Posbility: 0.0398
Next Token : List, Posbility: 0.0398
Next Token : c, Posbility: 0.0510
Next Token : []), Posbility: 0.1572
Next Token : s, Posbility: 0.6211
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  |, Posbility: 0.0010
Next Token : @, Posbility: 0.0013
Next Token :  @, Posbility: 0.0015
Next Token :  , Posbility: 0.0059
Next Token : ), Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0012
Next Token :  [, Posbility: 0.0019
Next Token :  [], Posbility: 0.0022
Next Token :  in, Posbility: 0.0036
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (', Posbility: 0.0003
Next Token : List, Posbility: 0.0004
Next Token : [', Posbility: 0.0009
Next Token : (, Posbility: 0.0046
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0017
Next Token :  =, Posbility: 0.0019
Next Token :  |, Posbility: 0.0035
Next Token : 
, Posbility: 0.0123
Next Token :  in, Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0001
Next Token :   , Posbility: 0.0013
Next Token :  , Posbility: 0.0036
Next Token : 

, Posbility: 0.0096
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0002
Next Token :     , Posbility: 0.0005
Next Token : let, Posbility: 0.0005
Next Token :  , Posbility: 0.0032
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Tuple, Posbility: 0.0132
Next Token : List, Posbility: 0.0408
Next Token : (, Posbility: 0.0864
Next Token : s, Posbility: 0.3027
Next Token : let, Posbility: 0.4980
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  first, Posbility: 0.0069
Next Token :  l, Posbility: 0.0078
Next Token :  len, Posbility: 0.0089
Next Token :  rec, Posbility: 0.0166
Next Token :  , Posbility: 0.9062
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0062
Next Token : x, Posbility: 0.0070
Next Token : (, Posbility: 0.0079
Next Token : c, Posbility: 0.0131
Next Token : s, Posbility: 0.9180
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0012
Next Token : ,, Posbility: 0.0012
Next Token : 0, Posbility: 0.0012
Next Token : 1, Posbility: 0.0019
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0021
Next Token :  ", Posbility: 0.0035
Next Token :  [, Posbility: 0.0058
Next Token :  String, Posbility: 0.1167
Next Token :  , Posbility: 0.8633
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Map, Posbility: 0.0011
Next Token : Char, Posbility: 0.0013
Next Token : (, Posbility: 0.0065
Next Token : s, Posbility: 0.0176
Next Token : List, Posbility: 0.9609
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : filter, Posbility: 0.0067
Next Token : to, Posbility: 0.0110
Next Token : reverse, Posbility: 0.0142
Next Token : map, Posbility: 0.1338
Next Token : rev, Posbility: 0.7734
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0000
Next Token :  ~, Posbility: 0.0000
Next Token : ., Posbility: 0.0001
Next Token : _, Posbility: 0.0013
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0005
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0003
Next Token : 
, Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0001
Next Token :   , Posbility: 0.0005
Next Token :  , Posbility: 0.0019
Next Token : 

, Posbility: 0.0028
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0000
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0015
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Tuple, Posbility: 0.0117
Next Token : List, Posbility: 0.0410
Next Token : (, Posbility: 0.0864
Next Token : s, Posbility: 0.2354
Next Token : let, Posbility: 0.5664
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  len, Posbility: 0.0043
Next Token :  first, Posbility: 0.0049
Next Token :  rec, Posbility: 0.0056
Next Token :  l, Posbility: 0.0063
Next Token :  , Posbility: 0.9375
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0062
Next Token : n, Posbility: 0.0062
Next Token : (, Posbility: 0.0079
Next Token : c, Posbility: 0.0148
Next Token : s, Posbility: 0.9180
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0008
Next Token : 0, Posbility: 0.0009
Next Token : _, Posbility: 0.0010
Next Token : 1, Posbility: 0.0013
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0018
Next Token : 
, Posbility: 0.0030
Next Token :  [, Posbility: 0.0063
Next Token :  String, Posbility: 0.0466
Next Token :  , Posbility: 0.9336
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Map, Posbility: 0.0008
Next Token : Char, Posbility: 0.0009
Next Token : (, Posbility: 0.0058
Next Token : s, Posbility: 0.0074
Next Token : List, Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fold, Posbility: 0.0033
Next Token : to, Posbility: 0.0070
Next Token : filter, Posbility: 0.0090
Next Token : rev, Posbility: 0.0217
Next Token : map, Posbility: 0.9219
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0012
Next Token :  string, Posbility: 0.0013
Next Token :  ((, Posbility: 0.0022
Next Token : i, Posbility: 0.0045
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0006
Next Token : List, Posbility: 0.0013
Next Token : c, Posbility: 0.0017
Next Token : Char, Posbility: 0.0022
Next Token : (, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : List, Posbility: 0.0001
Next Token : let, Posbility: 0.0003
Next Token : String, Posbility: 0.0006
Next Token : function, Posbility: 0.0007
Next Token : fun, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0010
Next Token :  v, Posbility: 0.0010
Next Token :  i, Posbility: 0.0017
Next Token :  l, Posbility: 0.0031
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0064
Next Token : (, Posbility: 0.0082
Next Token : s, Posbility: 0.0082
Next Token : x, Posbility: 0.0136
Next Token : c, Posbility: 0.9570
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token :  |, Posbility: 0.0001
Next Token : 1, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : c, Posbility: 0.0001
Next Token : ::, Posbility: 0.0006
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ', Posbility: 0.0040
Next Token :  [, Posbility: 0.0040
Next Token :  char, Posbility: 0.0040
Next Token :  String, Posbility: 0.0065
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0030
Next Token : Char, Posbility: 0.0034
Next Token : (', Posbility: 0.0038
Next Token : (, Posbility: 0.0413
Next Token : c, Posbility: 0.9375
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  +, Posbility: 0.0010
Next Token :  |, Posbility: 0.0013
Next Token : ::, Posbility: 0.0019
Next Token : ), Posbility: 0.0059
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0001
Next Token : ;, Posbility: 0.0001
Next Token : :, Posbility: 0.0013
Next Token : ^, Posbility: 0.0110
Next Token : ::, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  nil, Posbility: 0.0004
Next Token :  [, Posbility: 0.0010
Next Token :  String, Posbility: 0.0012
Next Token :  ', Posbility: 0.0013
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0006
Next Token : List, Posbility: 0.0013
Next Token : []), Posbility: 0.0022
Next Token : c, Posbility: 0.0032
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  +, Posbility: 0.0001
Next Token :  |, Posbility: 0.0001
Next Token :  @, Posbility: 0.0001
Next Token :  , Posbility: 0.0010
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  [, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token :  in, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (', Posbility: 0.0000
Next Token : [', Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0006
Next Token : 

, Posbility: 0.0009
Next Token :  =, Posbility: 0.0015
Next Token : 
, Posbility: 0.0109
Next Token :  in, Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0001
Next Token :   , Posbility: 0.0005
Next Token :  , Posbility: 0.0028
Next Token : 

, Posbility: 0.0067
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0001
Next Token : let, Posbility: 0.0004
Next Token :     , Posbility: 0.0005
Next Token :  , Posbility: 0.0041
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Tuple, Posbility: 0.0070
Next Token : List, Posbility: 0.0311
Next Token : (, Posbility: 0.0583
Next Token : s, Posbility: 0.1582
Next Token : let, Posbility: 0.7109
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  first, Posbility: 0.0021
Next Token :  len, Posbility: 0.0027
Next Token :  l, Posbility: 0.0031
Next Token :  rec, Posbility: 0.0039
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0027
Next Token : (), Posbility: 0.0027
Next Token : (, Posbility: 0.0031
Next Token : c, Posbility: 0.0045
Next Token : s, Posbility: 0.9688
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0003
Next Token : 0, Posbility: 0.0003
Next Token : _, Posbility: 0.0004
Next Token : 1, Posbility: 0.0006
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0009
Next Token :  ", Posbility: 0.0009
Next Token :  [, Posbility: 0.0024
Next Token :  String, Posbility: 0.0291
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Char, Posbility: 0.0003
Next Token : Tuple, Posbility: 0.0003
Next Token : (, Posbility: 0.0025
Next Token : s, Posbility: 0.0046
Next Token : List, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : concat, Posbility: 0.0014
Next Token : to, Posbility: 0.0023
Next Token : reverse, Posbility: 0.0105
Next Token : map, Posbility: 0.0286
Next Token : rev, Posbility: 0.9453
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ?, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : _, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :   , Posbility: 0.0003
Next Token :  , Posbility: 0.0012
Next Token : 

, Posbility: 0.0022
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0010
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0064
Next Token : List, Posbility: 0.0417
Next Token : (, Posbility: 0.0474
Next Token : s, Posbility: 0.1289
Next Token : let, Posbility: 0.7422
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  first, Posbility: 0.0024
Next Token :  res, Posbility: 0.0024
Next Token :  rec, Posbility: 0.0024
Next Token :  l, Posbility: 0.0031
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0027
Next Token : n, Posbility: 0.0027
Next Token : (, Posbility: 0.0035
Next Token : c, Posbility: 0.0065
Next Token : s, Posbility: 0.9648
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0002
Next Token : 0, Posbility: 0.0003
Next Token : _, Posbility: 0.0004
Next Token : 1, Posbility: 0.0006
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0007
Next Token : 
, Posbility: 0.0015
Next Token :  [, Posbility: 0.0027
Next Token :  String, Posbility: 0.0178
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Map, Posbility: 0.0003
Next Token : Tuple, Posbility: 0.0003
Next Token : s, Posbility: 0.0025
Next Token : (, Posbility: 0.0028
Next Token : List, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fold, Posbility: 0.0014
Next Token : to, Posbility: 0.0024
Next Token : filter, Posbility: 0.0039
Next Token : rev, Posbility: 0.0084
Next Token : map, Posbility: 0.9648
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  string, Posbility: 0.0004
Next Token :  String, Posbility: 0.0004
Next Token :  ((, Posbility: 0.0010
Next Token : i, Posbility: 0.0015
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0003
Next Token : List, Posbility: 0.0004
Next Token : c, Posbility: 0.0006
Next Token : Char, Posbility: 0.0006
Next Token : (, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : fn, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : String, Posbility: 0.0002
Next Token : function, Posbility: 0.0004
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0003
Next Token :  v, Posbility: 0.0003
Next Token :  i, Posbility: 0.0006
Next Token :  l, Posbility: 0.0009
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0015
Next Token : s, Posbility: 0.0017
Next Token : (, Posbility: 0.0022
Next Token : x, Posbility: 0.0031
Next Token : c, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : →, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : ::, Posbility: 0.0005
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  char, Posbility: 0.0013
Next Token :  ', Posbility: 0.0015
Next Token :  [, Posbility: 0.0017
Next Token :  String, Posbility: 0.0019
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0007
Next Token : Char, Posbility: 0.0008
Next Token : (', Posbility: 0.0010
Next Token : (, Posbility: 0.0140
Next Token : c, Posbility: 0.9805
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  +, Posbility: 0.0003
Next Token : ::, Posbility: 0.0003
Next Token :  |, Posbility: 0.0004
Next Token : ), Posbility: 0.0009
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : :, Posbility: 0.0004
Next Token : ^, Posbility: 0.0025
Next Token : ::, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  nil, Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  ', Posbility: 0.0002
Next Token :  String, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : List, Posbility: 0.0003
Next Token : []), Posbility: 0.0004
Next Token : c, Posbility: 0.0008
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : split, Posbility: 0.0000
Next Token : [', Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0007
Next Token :  =, Posbility: 0.0017
Next Token : 
, Posbility: 0.0096
Next Token :  in, Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0003
Next Token :  , Posbility: 0.0019
Next Token : 

, Posbility: 0.0046
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0001
Next Token : let, Posbility: 0.0002
Next Token :     , Posbility: 0.0004
Next Token :  , Posbility: 0.0032
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0047
Next Token : List, Posbility: 0.0271
Next Token : (, Posbility: 0.0447
Next Token : s, Posbility: 0.1069
Next Token : let, Posbility: 0.7930
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0009
Next Token :  len, Posbility: 0.0010
Next Token :  l, Posbility: 0.0012
Next Token :  rec, Posbility: 0.0013
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0013
Next Token : (), Posbility: 0.0015
Next Token : (, Posbility: 0.0017
Next Token : c, Posbility: 0.0022
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0001
Next Token : 0, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : 1, Posbility: 0.0003
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token :  ", Posbility: 0.0003
Next Token :  [, Posbility: 0.0008
Next Token :  String, Posbility: 0.0110
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Map, Posbility: 0.0001
Next Token : Tuple, Posbility: 0.0001
Next Token : (, Posbility: 0.0013
Next Token : s, Posbility: 0.0019
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : concat, Posbility: 0.0009
Next Token : to, Posbility: 0.0014
Next Token : reverse, Posbility: 0.0107
Next Token : map, Posbility: 0.0176
Next Token : rev, Posbility: 0.9609
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ?, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0010
Next Token : 

, Posbility: 0.0019
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0007
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0043
Next Token : List, Posbility: 0.0315
Next Token : (, Posbility: 0.0405
Next Token : s, Posbility: 0.0854
Next Token : let, Posbility: 0.8125
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  first, Posbility: 0.0010
Next Token :  rec, Posbility: 0.0013
Next Token :  res, Posbility: 0.0013
Next Token :  l, Posbility: 0.0017
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0013
Next Token : n, Posbility: 0.0015
Next Token : (, Posbility: 0.0017
Next Token : c, Posbility: 0.0028
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : 0, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : 1, Posbility: 0.0003
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0003
Next Token : 
, Posbility: 0.0008
Next Token :  [, Posbility: 0.0015
Next Token :  String, Posbility: 0.0096
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Map, Posbility: 0.0002
Next Token : Tuple, Posbility: 0.0002
Next Token : s, Posbility: 0.0015
Next Token : (, Posbility: 0.0019
Next Token : List, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fold, Posbility: 0.0007
Next Token : to, Posbility: 0.0012
Next Token : filter, Posbility: 0.0019
Next Token : rev, Posbility: 0.0040
Next Token : map, Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token : _, Posbility: 0.0002
Next Token : i, Posbility: 0.0007
Next Token :  ((, Posbility: 0.0007
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0002
Next Token : List, Posbility: 0.0002
Next Token : Char, Posbility: 0.0003
Next Token : c, Posbility: 0.0004
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : fn, Posbility: 0.0000
Next Token : String, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : function, Posbility: 0.0002
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0002
Next Token :  a, Posbility: 0.0002
Next Token :  i, Posbility: 0.0003
Next Token :  l, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0007
Next Token : _, Posbility: 0.0008
Next Token : (, Posbility: 0.0010
Next Token : x, Posbility: 0.0015
Next Token : c, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : ::, Posbility: 0.0003
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  char, Posbility: 0.0005
Next Token :  ', Posbility: 0.0006
Next Token :  [, Posbility: 0.0007
Next Token :  String, Posbility: 0.0007
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0003
Next Token : Char, Posbility: 0.0003
Next Token : (', Posbility: 0.0005
Next Token : (, Posbility: 0.0076
Next Token : c, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  +, Posbility: 0.0001
Next Token : ::, Posbility: 0.0002
Next Token :  |, Posbility: 0.0002
Next Token : ), Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : :, Posbility: 0.0002
Next Token : ^, Posbility: 0.0007
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  nil, Posbility: 0.0000
Next Token :  ', Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token :  String, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : List, Posbility: 0.0001
Next Token : []), Posbility: 0.0002
Next Token : c, Posbility: 0.0004
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : split, Posbility: 0.0000
Next Token : [', Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token : 

, Posbility: 0.0005
Next Token :  =, Posbility: 0.0015
Next Token : 
, Posbility: 0.0067
Next Token :  in, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0015
Next Token : 

, Posbility: 0.0046
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0001
Next Token : let, Posbility: 0.0002
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0025
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0031
Next Token : List, Posbility: 0.0227
Next Token : (, Posbility: 0.0332
Next Token : s, Posbility: 0.0698
Next Token : let, Posbility: 0.8516
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0005
Next Token :  len, Posbility: 0.0005
Next Token :  rec, Posbility: 0.0006
Next Token :  l, Posbility: 0.0007
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0009
Next Token : (), Posbility: 0.0009
Next Token : (, Posbility: 0.0010
Next Token : c, Posbility: 0.0012
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : s, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : 1, Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token :  [, Posbility: 0.0004
Next Token :  String, Posbility: 0.0076
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Map, Posbility: 0.0001
Next Token : Tuple, Posbility: 0.0001
Next Token : (, Posbility: 0.0008
Next Token : s, Posbility: 0.0010
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : concat, Posbility: 0.0005
Next Token : to, Posbility: 0.0009
Next Token : map, Posbility: 0.0108
Next Token : reverse, Posbility: 0.0108
Next Token : rev, Posbility: 0.9727
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0008
Next Token : 

, Posbility: 0.0017
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0006
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0028
Next Token : (, Posbility: 0.0267
Next Token : List, Posbility: 0.0267
Next Token : s, Posbility: 0.0439
Next Token : let, Posbility: 0.8867
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  len, Posbility: 0.0005
Next Token :  rec, Posbility: 0.0007
Next Token :  res, Posbility: 0.0007
Next Token :  l, Posbility: 0.0009
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0009
Next Token : n, Posbility: 0.0009
Next Token : (, Posbility: 0.0012
Next Token : c, Posbility: 0.0017
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : s, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : 1, Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0002
Next Token : 
, Posbility: 0.0005
Next Token :  [, Posbility: 0.0008
Next Token :  String, Posbility: 0.0059
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Tuple, Posbility: 0.0001
Next Token : Map, Posbility: 0.0001
Next Token : s, Posbility: 0.0008
Next Token : (, Posbility: 0.0012
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : reverse, Posbility: 0.0004
Next Token : to, Posbility: 0.0005
Next Token : filter, Posbility: 0.0009
Next Token : rev, Posbility: 0.0031
Next Token : map, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : i, Posbility: 0.0003
Next Token :  ((, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0001
Next Token : Char, Posbility: 0.0001
Next Token : f, Posbility: 0.0001
Next Token : c, Posbility: 0.0002
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : fn, Posbility: 0.0000
Next Token : String, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : function, Posbility: 0.0002
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  i, Posbility: 0.0002
Next Token :  l, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0004
Next Token : _, Posbility: 0.0004
Next Token : (, Posbility: 0.0006
Next Token : x, Posbility: 0.0009
Next Token : c, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : ::, Posbility: 0.0003
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  char, Posbility: 0.0003
Next Token :  ', Posbility: 0.0004
Next Token :  [, Posbility: 0.0005
Next Token :  String, Posbility: 0.0005
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Char, Posbility: 0.0001
Next Token : List, Posbility: 0.0002
Next Token : (', Posbility: 0.0003
Next Token : (, Posbility: 0.0046
Next Token : c, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ::, Posbility: 0.0001
Next Token :  +, Posbility: 0.0001
Next Token :  |, Posbility: 0.0001
Next Token : ), Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : :, Posbility: 0.0001
Next Token : ^, Posbility: 0.0003
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  nil, Posbility: 0.0000
Next Token :  ', Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  String, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : List, Posbility: 0.0001
Next Token : []), Posbility: 0.0001
Next Token : c, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : split, Posbility: 0.0000
Next Token : [', Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token : 

, Posbility: 0.0005
Next Token :  =, Posbility: 0.0015
Next Token : 
, Posbility: 0.0059
Next Token :  in, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0012
Next Token : 

, Posbility: 0.0041
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0017
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0028
Next Token : List, Posbility: 0.0209
Next Token : (, Posbility: 0.0237
Next Token : s, Posbility: 0.0500
Next Token : let, Posbility: 0.8906
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0003
Next Token :  len, Posbility: 0.0003
Next Token :  rec, Posbility: 0.0004
Next Token :  l, Posbility: 0.0005
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0005
Next Token : c, Posbility: 0.0006
Next Token : (, Posbility: 0.0006
Next Token : (), Posbility: 0.0006
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0003
Next Token :  String, Posbility: 0.0052
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Tuple, Posbility: 0.0000
Next Token : Map, Posbility: 0.0000
Next Token : (, Posbility: 0.0006
Next Token : s, Posbility: 0.0007
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : concat, Posbility: 0.0003
Next Token : to, Posbility: 0.0007
Next Token : map, Posbility: 0.0085
Next Token : reverse, Posbility: 0.0085
Next Token : rev, Posbility: 0.9805
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token : 

, Posbility: 0.0013
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0005
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0022
Next Token : (, Posbility: 0.0212
Next Token : List, Posbility: 0.0272
Next Token : s, Posbility: 0.0349
Next Token : let, Posbility: 0.9023
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  len, Posbility: 0.0003
Next Token :  rec, Posbility: 0.0004
Next Token :  res, Posbility: 0.0004
Next Token :  l, Posbility: 0.0006
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0008
Next Token : (, Posbility: 0.0009
Next Token : n, Posbility: 0.0009
Next Token : c, Posbility: 0.0015
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  [, Posbility: 0.0006
Next Token :  String, Posbility: 0.0041
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Tuple, Posbility: 0.0001
Next Token : Map, Posbility: 0.0001
Next Token : s, Posbility: 0.0006
Next Token : (, Posbility: 0.0009
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : to, Posbility: 0.0004
Next Token : reverse, Posbility: 0.0004
Next Token : filter, Posbility: 0.0007
Next Token : rev, Posbility: 0.0025
Next Token : map, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : i, Posbility: 0.0002
Next Token :  ((, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Char, Posbility: 0.0001
Next Token : List, Posbility: 0.0001
Next Token : f, Posbility: 0.0001
Next Token : c, Posbility: 0.0001
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : fn, Posbility: 0.0000
Next Token :  fun, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : function, Posbility: 0.0001
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  i, Posbility: 0.0001
Next Token :  l, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token : (, Posbility: 0.0004
Next Token : x, Posbility: 0.0006
Next Token : c, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : ::, Posbility: 0.0002
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  char, Posbility: 0.0001
Next Token :  ', Posbility: 0.0002
Next Token :  [, Posbility: 0.0003
Next Token :  String, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0001
Next Token : List, Posbility: 0.0001
Next Token : (', Posbility: 0.0001
Next Token : (, Posbility: 0.0028
Next Token : c, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ::, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token :  |, Posbility: 0.0001
Next Token : ), Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : :, Posbility: 0.0001
Next Token : ^, Posbility: 0.0002
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  nil, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  ', Posbility: 0.0000
Next Token :  String, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : []), Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : c, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [', Posbility: 0.0000
Next Token : split, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token : 

, Posbility: 0.0005
Next Token :  =, Posbility: 0.0012
Next Token : 
, Posbility: 0.0059
Next Token :  in, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0009
Next Token : 

, Posbility: 0.0036
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0017
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0025
Next Token : (, Posbility: 0.0166
Next Token : List, Posbility: 0.0214
Next Token : s, Posbility: 0.0400
Next Token : let, Posbility: 0.9102
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0002
Next Token :  len, Posbility: 0.0003
Next Token :  rec, Posbility: 0.0003
Next Token :  l, Posbility: 0.0004
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0004
Next Token : c, Posbility: 0.0004
Next Token : (, Posbility: 0.0005
Next Token : n, Posbility: 0.0005
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  ", Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  String, Posbility: 0.0032
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Tuple, Posbility: 0.0000
Next Token : Map, Posbility: 0.0000
Next Token : (, Posbility: 0.0004
Next Token : s, Posbility: 0.0005
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : concat, Posbility: 0.0003
Next Token : to, Posbility: 0.0004
Next Token : reverse, Posbility: 0.0066
Next Token : map, Posbility: 0.0085
Next Token : rev, Posbility: 0.9805
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token : 

, Posbility: 0.0013
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0018
Next Token : (, Posbility: 0.0190
Next Token : List, Posbility: 0.0244
Next Token : s, Posbility: 0.0277
Next Token : let, Posbility: 0.9180
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  len, Posbility: 0.0003
Next Token :  rec, Posbility: 0.0003
Next Token :  res, Posbility: 0.0003
Next Token :  l, Posbility: 0.0005
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0005
Next Token : (, Posbility: 0.0005
Next Token : n, Posbility: 0.0005
Next Token : c, Posbility: 0.0007
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  [, Posbility: 0.0003
Next Token :  String, Posbility: 0.0022
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Tuple, Posbility: 0.0000
Next Token : Map, Posbility: 0.0001
Next Token : s, Posbility: 0.0005
Next Token : (, Posbility: 0.0008
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : reverse, Posbility: 0.0002
Next Token : fold, Posbility: 0.0002
Next Token : filter, Posbility: 0.0004
Next Token : rev, Posbility: 0.0017
Next Token : map, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : i, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Char, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : f, Posbility: 0.0001
Next Token : c, Posbility: 0.0001
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : fn, Posbility: 0.0000
Next Token :  fun, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : function, Posbility: 0.0001
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  i, Posbility: 0.0001
Next Token :  l, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 0.0004
Next Token : c, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ::, Posbility: 0.0002
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  char, Posbility: 0.0001
Next Token :  ', Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  String, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : List, Posbility: 0.0001
Next Token : (', Posbility: 0.0001
Next Token : (, Posbility: 0.0022
Next Token : c, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ::, Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token : ), Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ->, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : :, Posbility: 0.0001
Next Token : ^, Posbility: 0.0001
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  nil, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  ', Posbility: 0.0000
Next Token :  String, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : []), Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : c, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [', Posbility: 0.0000
Next Token : split, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 

, Posbility: 0.0005
Next Token :  =, Posbility: 0.0010
Next Token : 
, Posbility: 0.0059
Next Token :  in, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0008
Next Token : 

, Posbility: 0.0032
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0001
Next Token : let, Posbility: 0.0002
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0013
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0023
Next Token : (, Posbility: 0.0192
Next Token : List, Posbility: 0.0192
Next Token : s, Posbility: 0.0278
Next Token : let, Posbility: 0.9219
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0002
Next Token :  len, Posbility: 0.0002
Next Token :  l, Posbility: 0.0003
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : c, Posbility: 0.0004
Next Token : n, Posbility: 0.0004
Next Token : x, Posbility: 0.0004
Next Token : (, Posbility: 0.0005
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  ", Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token :  String, Posbility: 0.0025
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : Map, Posbility: 0.0000
Next Token : (, Posbility: 0.0004
Next Token : s, Posbility: 0.0004
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : concat, Posbility: 0.0002
Next Token : to, Posbility: 0.0003
Next Token : reverse, Posbility: 0.0052
Next Token : map, Posbility: 0.0067
Next Token : rev, Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : st, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0012
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0016
Next Token : (, Posbility: 0.0170
Next Token : s, Posbility: 0.0219
Next Token : List, Posbility: 0.0247
Next Token : let, Posbility: 0.9258
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  len, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0002
Next Token :  res, Posbility: 0.0002
Next Token :  l, Posbility: 0.0004
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0005
Next Token : (, Posbility: 0.0005
Next Token : n, Posbility: 0.0005
Next Token : c, Posbility: 0.0006
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  [, Posbility: 0.0003
Next Token :  String, Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Tuple, Posbility: 0.0000
Next Token : Map, Posbility: 0.0001
Next Token : s, Posbility: 0.0003
Next Token : (, Posbility: 0.0006
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : reverse, Posbility: 0.0002
Next Token : fold, Posbility: 0.0002
Next Token : filter, Posbility: 0.0003
Next Token : rev, Posbility: 0.0013
Next Token : map, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : i, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Char, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : f, Posbility: 0.0001
Next Token : c, Posbility: 0.0001
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  fun, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token : function, Posbility: 0.0001
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :  a, Posbility: 0.0000
Next Token :  i, Posbility: 0.0001
Next Token :  l, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 0.0003
Next Token : c, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ::, Posbility: 0.0002
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  char, Posbility: 0.0000
Next Token :  ', Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token :  String, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (', Posbility: 0.0001
Next Token : (, Posbility: 0.0015
Next Token : c, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ::, Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ^, Posbility: 0.0001
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  ', Posbility: 0.0000
Next Token :  String, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : []), Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : c, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [', Posbility: 0.0000
Next Token : split, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 

, Posbility: 0.0004
Next Token :  =, Posbility: 0.0008
Next Token : 
, Posbility: 0.0041
Next Token :  in, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0032
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0001
Next Token : let, Posbility: 0.0002
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0012
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0023
Next Token : (, Posbility: 0.0151
Next Token : List, Posbility: 0.0171
Next Token : s, Posbility: 0.0220
Next Token : let, Posbility: 0.9336
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  len, Posbility: 0.0001
Next Token :  l, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0004
Next Token : x, Posbility: 0.0004
Next Token : c, Posbility: 0.0004
Next Token : n, Posbility: 0.0004
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token :  [, Posbility: 0.0001
Next Token :  String, Posbility: 0.0025
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : Map, Posbility: 0.0000
Next Token : s, Posbility: 0.0003
Next Token : (, Posbility: 0.0003
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : concat, Posbility: 0.0002
Next Token : to, Posbility: 0.0003
Next Token : reverse, Posbility: 0.0046
Next Token : map, Posbility: 0.0059
Next Token : rev, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0009
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0014
Next Token : (, Posbility: 0.0118
Next Token : s, Posbility: 0.0172
Next Token : List, Posbility: 0.0250
Next Token : let, Posbility: 0.9375
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  len, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0002
Next Token :  res, Posbility: 0.0002
Next Token :  l, Posbility: 0.0004
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0004
Next Token : (, Posbility: 0.0004
Next Token : n, Posbility: 0.0004
Next Token : c, Posbility: 0.0005
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  String, Posbility: 0.0013
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Array, Posbility: 0.0000
Next Token : Map, Posbility: 0.0000
Next Token : s, Posbility: 0.0002
Next Token : (, Posbility: 0.0004
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : reverse, Posbility: 0.0001
Next Token : fold, Posbility: 0.0001
Next Token : filter, Posbility: 0.0002
Next Token : rev, Posbility: 0.0013
Next Token : map, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : i, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : f, Posbility: 0.0001
Next Token : c, Posbility: 0.0001
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token :  fun, Posbility: 0.0000
Next Token : function, Posbility: 0.0001
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :  a, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  l, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 0.0002
Next Token : c, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ::, Posbility: 0.0002
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  char, Posbility: 0.0000
Next Token :  ', Posbility: 0.0000
Next Token :  [, Posbility: 0.0001
Next Token :  String, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : (', Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0013
Next Token : c, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ::, Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ^, Posbility: 0.0001
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  ', Posbility: 0.0000
Next Token :  String, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : []), Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [', Posbility: 0.0000
Next Token : split, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0001
Next Token : 

, Posbility: 0.0005
Next Token :  =, Posbility: 0.0005
Next Token : 
, Posbility: 0.0041
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : ;, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token : 

, Posbility: 0.0028
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0012
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0021
Next Token : (, Posbility: 0.0135
Next Token : List, Posbility: 0.0153
Next Token : s, Posbility: 0.0173
Next Token : let, Posbility: 0.9453
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  len, Posbility: 0.0001
Next Token :  l, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : c, Posbility: 0.0003
Next Token : x, Posbility: 0.0003
Next Token : (, Posbility: 0.0003
Next Token : n, Posbility: 0.0003
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token :  [, Posbility: 0.0001
Next Token :  String, Posbility: 0.0015
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : Map, Posbility: 0.0000
Next Token : s, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : concat, Posbility: 0.0001
Next Token : to, Posbility: 0.0002
Next Token : reverse, Posbility: 0.0040
Next Token : map, Posbility: 0.0059
Next Token : rev, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0008
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0013
Next Token : (, Posbility: 0.0106
Next Token : s, Posbility: 0.0135
Next Token : List, Posbility: 0.0197
Next Token : let, Posbility: 0.9492
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  len, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0002
Next Token :  l, Posbility: 0.0003
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0003
Next Token : (, Posbility: 0.0004
Next Token : n, Posbility: 0.0004
Next Token : c, Posbility: 0.0005
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  String, Posbility: 0.0010
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : Map, Posbility: 0.0000
Next Token : s, Posbility: 0.0002
Next Token : (, Posbility: 0.0004
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : reverse, Posbility: 0.0001
Next Token : fold, Posbility: 0.0001
Next Token : filter, Posbility: 0.0002
Next Token : rev, Posbility: 0.0012
Next Token : map, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : i, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : c, Posbility: 0.0001
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token :  fun, Posbility: 0.0000
Next Token : function, Posbility: 0.0001
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  l, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token : c, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ::, Posbility: 0.0002
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  char, Posbility: 0.0000
Next Token :  ', Posbility: 0.0000
Next Token :  [, Posbility: 0.0001
Next Token :  String, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (', Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0010
Next Token : c, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ', Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  String, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : []), Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : split, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0001
Next Token :  =, Posbility: 0.0005
Next Token : 

, Posbility: 0.0006
Next Token : 
, Posbility: 0.0046
Next Token :  in, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ;, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0025
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0009
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0021
Next Token : (, Posbility: 0.0120
Next Token : s, Posbility: 0.0153
Next Token : List, Posbility: 0.0153
Next Token : let, Posbility: 0.9492
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  len, Posbility: 0.0001
Next Token :  l, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : c, Posbility: 0.0003
Next Token : x, Posbility: 0.0003
Next Token : (, Posbility: 0.0003
Next Token : n, Posbility: 0.0004
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token :  [, Posbility: 0.0001
Next Token :  String, Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : Map, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : s, Posbility: 0.0002
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : sort, Posbility: 0.0001
Next Token : to, Posbility: 0.0002
Next Token : reverse, Posbility: 0.0028
Next Token : map, Posbility: 0.0041
Next Token : rev, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0008
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0013
Next Token : (, Posbility: 0.0106
Next Token : s, Posbility: 0.0120
Next Token : List, Posbility: 0.0198
Next Token : let, Posbility: 0.9531
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  len, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  l, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0003
Next Token : (, Posbility: 0.0003
Next Token : n, Posbility: 0.0003
Next Token : c, Posbility: 0.0004
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token :  String, Posbility: 0.0010
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Array, Posbility: 0.0000
Next Token : Map, Posbility: 0.0000
Next Token : s, Posbility: 0.0002
Next Token : (, Posbility: 0.0004
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : reverse, Posbility: 0.0001
Next Token : fold, Posbility: 0.0001
Next Token : filter, Posbility: 0.0002
Next Token : rev, Posbility: 0.0013
Next Token : map, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : i, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token :  fun, Posbility: 0.0000
Next Token : function, Posbility: 0.0001
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  l, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token : c, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ::, Posbility: 0.0001
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  char, Posbility: 0.0000
Next Token :  ', Posbility: 0.0000
Next Token :  [, Posbility: 0.0001
Next Token :  String, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (', Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0008
Next Token : c, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  String, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  ', Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : []), Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : split, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0001
Next Token :  =, Posbility: 0.0004
Next Token : 

, Posbility: 0.0005
Next Token : 
, Posbility: 0.0041
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ;, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0025
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0001
Next Token : let, Posbility: 0.0002
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0010
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0018
Next Token : (, Posbility: 0.0153
Next Token : List, Posbility: 0.0153
Next Token : s, Posbility: 0.0173
Next Token : let, Posbility: 0.9453
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0001
Next Token :  len, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  l, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : c, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : x, Posbility: 0.0003
Next Token : n, Posbility: 0.0003
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token :  [, Posbility: 0.0001
Next Token :  String, Posbility: 0.0015
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : Map, Posbility: 0.0000
Next Token : s, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : concat, Posbility: 0.0001
Next Token : to, Posbility: 0.0001
Next Token : reverse, Posbility: 0.0028
Next Token : map, Posbility: 0.0041
Next Token : rev, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0007
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0014
Next Token : (, Posbility: 0.0093
Next Token : s, Posbility: 0.0120
Next Token : List, Posbility: 0.0198
Next Token : let, Posbility: 0.9531
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  len, Posbility: 0.0001
Next Token :  l, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0003
Next Token : (, Posbility: 0.0003
Next Token : c, Posbility: 0.0004
Next Token : n, Posbility: 0.0004
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token :  String, Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Tuple, Posbility: 0.0000
Next Token : Map, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : reverse, Posbility: 0.0001
Next Token : fold, Posbility: 0.0001
Next Token : filter, Posbility: 0.0002
Next Token : rev, Posbility: 0.0012
Next Token : map, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token :  fun, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token : function, Posbility: 0.0001
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :  a, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token : c, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ::, Posbility: 0.0001
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  char, Posbility: 0.0000
Next Token :  ', Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  String, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (', Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0007
Next Token : c, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  ', Posbility: 0.0000
Next Token :  String, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : []), Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : split, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0001
Next Token :  =, Posbility: 0.0004
Next Token : 

, Posbility: 0.0004
Next Token : 
, Posbility: 0.0036
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ;, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0025
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0001
Next Token : let, Posbility: 0.0002
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0012
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0018
Next Token : (, Posbility: 0.0120
Next Token : s, Posbility: 0.0136
Next Token : List, Posbility: 0.0136
Next Token : let, Posbility: 0.9531
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  len, Posbility: 0.0001
Next Token :  l, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : c, Posbility: 0.0002
Next Token : x, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : n, Posbility: 0.0003
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0001
Next Token :  String, Posbility: 0.0013
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : Map, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : s, Posbility: 0.0002
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : sort, Posbility: 0.0001
Next Token : to, Posbility: 0.0002
Next Token : reverse, Posbility: 0.0032
Next Token : map, Posbility: 0.0046
Next Token : rev, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  
 score:False
Error type: noerr
---------------------------
Next Token : String, Posbility: 0.0013
Next Token : (, Posbility: 0.0083
Next Token : s, Posbility: 0.0094
Next Token : List, Posbility: 0.0176
Next Token : let, Posbility: 0.9609
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let
 score:False
Error type: noerr
---------------------------
Next Token :  res, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  len, Posbility: 0.0001
Next Token :  l, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0003
Next Token : (, Posbility: 0.0003
Next Token : c, Posbility: 0.0003
Next Token : n, Posbility: 0.0003
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s =
 score:False
Error type: noerr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token :  String, Posbility: 0.0009
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = 
 score:False
Error type: noerr
---------------------------
Next Token : Array, Posbility: 0.0000
Next Token : Map, Posbility: 0.0000
Next Token : s, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.
 score:False
Error type: noerr
---------------------------
Next Token : reverse, Posbility: 0.0001
Next Token : fold, Posbility: 0.0001
Next Token : filter, Posbility: 0.0001
Next Token : rev, Posbility: 0.0008
Next Token : map, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : i, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map 
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0000
Next Token :  fun, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token : function, Posbility: 0.0001
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun
 score:False
Error type: noerr
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :  a, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun 
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token : c, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c 
 score:False
Error type: noerr
---------------------------
Next Token : :, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ::, Posbility: 0.0001
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c ->
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  ', Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  String, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> 
 score:False
Error type: noerr
---------------------------
Next Token : (', Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0005
Next Token : c, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c
 score:False
Error type: noerr
---------------------------
Next Token : ), Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c 
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c ::
 score:False
Error type: noerr
---------------------------
Next Token :  nil, Posbility: 0.0000
Next Token :  ', Posbility: 0.0000
Next Token :  String, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: 
 score:False
Error type: noerr
---------------------------
Next Token : []), Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s
 score:False
Error type: noerr
---------------------------
Next Token : ),, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s)
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) 
 score:False
Error type: noerr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : split, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0001
Next Token :  =, Posbility: 0.0003
Next Token : 

, Posbility: 0.0004
Next Token : 
, Posbility: 0.0025
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ;, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0017
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in

 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :  , Posbility: 0.0009
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  
 score:False
Error type: noerr
---------------------------
Next Token : String, Posbility: 0.0013
Next Token : s, Posbility: 0.0094
Next Token : (, Posbility: 0.0121
Next Token : List, Posbility: 0.0121
Next Token : let, Posbility: 0.9609
---------------------------
code:
 (* Write a function to convert a given string to a tuple of characters. *)
let split_string s =
  let s = String.to_list s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let s = List.rev s in
  let s = List.map (fun c -> c :: s) s in
  let
 score:False


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>