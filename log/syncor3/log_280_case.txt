code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  get, Posbility: 0.0091
Next Token :  list, Posbility: 0.0117
Next Token :  unique, Posbility: 0.1108
Next Token :  , Posbility: 0.2070
Next Token :  rec, Posbility: 0.5625
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  factor, Posbility: 0.0204
Next Token :  find, Posbility: 0.0381
Next Token :  unique, Posbility: 0.0432
Next Token :  loop, Posbility: 0.0554
Next Token :  , Posbility: 0.5938
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : mul, Posbility: 0.0125
Next Token : p, Posbility: 0.0141
Next Token : f, Posbility: 0.0205
Next Token : prod, Posbility: 0.3633
Next Token : product, Posbility: 0.4121
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0104
Next Token : -, Posbility: 0.0283
Next Token :  =, Posbility: 0.2090
Next Token :  , Posbility: 0.3047
Next Token : _, Posbility: 0.3438
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : helper, Posbility: 0.0305
Next Token : rec, Posbility: 0.0305
Next Token : list, Posbility: 0.0830
Next Token : of, Posbility: 0.2891
Next Token : unique, Posbility: 0.3711
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0142
Next Token : s, Posbility: 0.1050
Next Token :  =, Posbility: 0.1348
Next Token : _, Posbility: 0.2852
Next Token :  , Posbility: 0.3652
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0742
Next Token : (, Posbility: 0.0840
Next Token : lst, Posbility: 0.1079
Next Token : :, Posbility: 0.1226
Next Token : x, Posbility: 0.2930
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0089
Next Token :  acc, Posbility: 0.0089
Next Token :  , Posbility: 0.0957
Next Token :  =, Posbility: 0.4277
Next Token : s, Posbility: 0.4277
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0025
Next Token :  a, Posbility: 0.0033
Next Token :  acc, Posbility: 0.0101
Next Token :  , Posbility: 0.0581
Next Token :  =, Posbility: 0.9062
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0034
Next Token :  function, Posbility: 0.0063
Next Token :  match, Posbility: 0.0603
Next Token :  , Posbility: 0.0879
Next Token : 
, Posbility: 0.8320
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0059
Next Token :    , Posbility: 0.0142
Next Token : 	, Posbility: 0.0142
Next Token :     , Posbility: 0.1719
Next Token :   , Posbility: 0.7734
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0053
Next Token : List, Posbility: 0.0165
Next Token : if, Posbility: 0.1562
Next Token : let, Posbility: 0.1768
Next Token : match, Posbility: 0.6172
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0008
Next Token :  !, Posbility: 0.0010
Next Token : 
, Posbility: 0.0013
Next Token :  String, Posbility: 0.0085
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0067
Next Token : Seq, Posbility: 0.0076
Next Token : Set, Posbility: 0.0161
Next Token : List, Posbility: 0.1738
Next Token : x, Posbility: 0.7773
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token : ::, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  with, Posbility: 0.0013
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0003
Next Token : 
, Posbility: 0.0005
Next Token :  @, Posbility: 0.0005
Next Token :  , Posbility: 0.0009
Next Token :  with, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0030
Next Token :  , Posbility: 0.0049
Next Token :  [, Posbility: 0.0056
Next Token :  [], Posbility: 0.0413
Next Token : 
, Posbility: 0.9375
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0005
Next Token :       , Posbility: 0.0018
Next Token :    , Posbility: 0.0025
Next Token :     , Posbility: 0.0845
Next Token :   , Posbility: 0.9102
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : [, Posbility: 0.0153
Next Token : [], Posbility: 0.0366
Next Token : |, Posbility: 0.9453
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0009
Next Token :  nil, Posbility: 0.0064
Next Token :  , Posbility: 0.0175
Next Token :  [, Posbility: 0.0175
Next Token :  [], Posbility: 0.9531
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0050
Next Token :    , Posbility: 0.0064
Next Token :  |, Posbility: 0.0064
Next Token :  =>, Posbility: 0.0106
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0002
Next Token : â†’, Posbility: 0.0003
Next Token : -, Posbility: 0.0003
Next Token : ::, Posbility: 0.0012
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0146
Next Token :  [], Posbility: 0.0146
Next Token :  , Posbility: 0.0398
Next Token :  0, Posbility: 0.1084
Next Token :  1, Posbility: 0.8008
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
 score:False
Error type: noerr
---------------------------
Next Token :  (*, Posbility: 0.0038
Next Token :   , Posbility: 0.0044
Next Token :  |, Posbility: 0.0118
Next Token :  , Posbility: 0.0195
Next Token : 
, Posbility: 0.9414
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1

 score:False
Error type: noerr
---------------------------
Next Token :      , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :     , Posbility: 0.0004
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  
 score:False
Error type: noerr
---------------------------
Next Token : |[, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : //, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0034
Next Token :  a, Posbility: 0.0105
Next Token :  [], Posbility: 0.0135
Next Token :  [, Posbility: 0.2109
Next Token :  , Posbility: 0.7344
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0154
Next Token : h, Posbility: 0.0198
Next Token : hd, Posbility: 0.0254
Next Token : _, Posbility: 0.1455
Next Token : x, Posbility: 0.7422
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0031
Next Token : :, Posbility: 0.0137
Next Token : s, Posbility: 0.0371
Next Token : ::, Posbility: 0.3516
Next Token :  , Posbility: 0.5820
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0002
Next Token : if, Posbility: 0.0002
Next Token : ->, Posbility: 0.0010
Next Token : :, Posbility: 0.0032
Next Token : ::, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  new, Posbility: 0.0017
Next Token :  acc, Posbility: 0.0017
Next Token :  [], Posbility: 0.0066
Next Token :  rest, Posbility: 0.1167
Next Token :  , Posbility: 0.8633
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : t, Posbility: 0.0094
Next Token : tail, Posbility: 0.0176
Next Token : _, Posbility: 0.0542
Next Token : y, Posbility: 0.0542
Next Token : x, Posbility: 0.8477
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0005
Next Token : _, Posbility: 0.0005
Next Token : x, Posbility: 0.0007
Next Token : ', Posbility: 0.0067
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0317
Next Token : _, Posbility: 0.0361
Next Token : 1, Posbility: 0.0464
Next Token : ', Posbility: 0.0981
Next Token :  , Posbility: 0.7227
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0002
Next Token : -, Posbility: 0.0004
Next Token : if, Posbility: 0.0025
Next Token : ::, Posbility: 0.0028
Next Token : ->, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0070
Next Token :  (1, Posbility: 0.0115
Next Token :  1, Posbility: 0.0513
Next Token : 
, Posbility: 0.1084
Next Token :  , Posbility: 0.8047
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0069
Next Token : prod, Posbility: 0.0101
Next Token : (, Posbility: 0.0747
Next Token : product, Posbility: 0.0845
Next Token : x, Posbility: 0.8008
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0027
Next Token : *, Posbility: 0.0040
Next Token : s, Posbility: 0.0045
Next Token :  , Posbility: 0.0108
Next Token :  *, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x *
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  (1, Posbility: 0.0004
Next Token : !, Posbility: 0.0007
Next Token :  !, Posbility: 0.0022
Next Token :  rec, Posbility: 0.0025
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0003
Next Token : prod, Posbility: 0.0009
Next Token : x, Posbility: 0.0104
Next Token : (, Posbility: 0.0469
Next Token : product, Posbility: 0.9414
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token :  unique, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 0.0022
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_
 score:False
Error type: noerr
---------------------------
Next Token :  unique, Posbility: 0.0001
Next Token : un, Posbility: 0.0001
Next Token : uniq, Posbility: 0.0001
Next Token : non, Posbility: 0.0002
Next Token : unique, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  ~, Posbility: 0.0003
Next Token : _, Posbility: 0.0003
Next Token : (, Posbility: 0.0067
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique 
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : tail, Posbility: 0.0000
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0179
Next Token : x, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique x
 score:False
Error type: noerr
---------------------------
Next Token : ), Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0033
Next Token : ), Posbility: 0.0054
Next Token :  , Posbility: 0.0089
Next Token : 

, Posbility: 0.4844
Next Token : 
, Posbility: 0.4844
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs

 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0247
Next Token : (, Posbility: 0.0262
Next Token : in, Posbility: 0.0757
Next Token :   , Posbility: 0.1709
Next Token : let, Posbility: 0.2988
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  result, Posbility: 0.0124
Next Token :  unique, Posbility: 0.0337
Next Token :  main, Posbility: 0.1040
Next Token :  , Posbility: 0.2197
Next Token :  rec, Posbility: 0.5273
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  rec, Posbility: 0.0199
Next Token :  count, Posbility: 0.0255
Next Token :  loop, Posbility: 0.0255
Next Token :  factor, Posbility: 0.0371
Next Token :  , Posbility: 0.6602
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fi, Posbility: 0.0054
Next Token : fold, Posbility: 0.0089
Next Token : f, Posbility: 0.0114
Next Token : prod, Posbility: 0.0452
Next Token : product, Posbility: 0.7969
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0039
Next Token :  unique, Posbility: 0.0039
Next Token :  =, Posbility: 0.0120
Next Token :  , Posbility: 0.1289
Next Token : _, Posbility: 0.8398
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0096
Next Token : of, Posbility: 0.0123
Next Token : non, Posbility: 0.0203
Next Token : all, Posbility: 0.0708
Next Token : unique, Posbility: 0.7617
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0212
Next Token : ', Posbility: 0.0508
Next Token : 2, Posbility: 0.0654
Next Token :  , Posbility: 0.1387
Next Token : _, Posbility: 0.6211
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : tail, Posbility: 0.0286
Next Token : iter, Posbility: 0.0684
Next Token : opt, Posbility: 0.0776
Next Token : rec, Posbility: 0.0879
Next Token : list, Posbility: 0.0879
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0113
Next Token :  l, Posbility: 0.0271
Next Token : _, Posbility: 0.0396
Next Token :  =, Posbility: 0.1562
Next Token :  , Posbility: 0.6992
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : nums, Posbility: 0.0095
Next Token : lst, Posbility: 0.0203
Next Token : ls, Posbility: 0.0203
Next Token : (, Posbility: 0.0332
Next Token : x, Posbility: 0.8594
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token : sl, Posbility: 0.0004
Next Token : list, Posbility: 0.0012
Next Token :  =, Posbility: 0.0140
Next Token : s, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0019
Next Token : _, Posbility: 0.0040
Next Token : s, Posbility: 0.0051
Next Token :  , Posbility: 0.0066
Next Token :  =, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0023
Next Token :  [, Posbility: 0.0023
Next Token :  match, Posbility: 0.0055
Next Token :  , Posbility: 0.3418
Next Token : 
, Posbility: 0.6367
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0011
Next Token : let, Posbility: 0.0021
Next Token :    , Posbility: 0.0027
Next Token :     , Posbility: 0.0139
Next Token :   , Posbility: 0.9727
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0542
Next Token : if, Posbility: 0.0615
Next Token : product, Posbility: 0.1475
Next Token : let, Posbility: 0.1670
Next Token : match, Posbility: 0.5156
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token :  [, Posbility: 0.0004
Next Token :  String, Posbility: 0.0005
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Product, Posbility: 0.0020
Next Token : (, Posbility: 0.0042
Next Token : product, Posbility: 0.0277
Next Token : List, Posbility: 0.0403
Next Token : x, Posbility: 0.9141
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  with, Posbility: 0.0009
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token : ., Posbility: 0.0004
Next Token :  with, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0002
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 0.0012
Next Token :  [], Posbility: 0.0012
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :    , Posbility: 0.0002
Next Token :     , Posbility: 0.0003
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : case, Posbility: 0.0001
Next Token : {, Posbility: 0.0001
Next Token : [, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0003
Next Token :  nil, Posbility: 0.0023
Next Token :  [, Posbility: 0.0170
Next Token :  , Posbility: 0.0461
Next Token :  [], Posbility: 0.9297
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0006
Next Token :  =>, Posbility: 0.0006
Next Token :  as, Posbility: 0.0015
Next Token :  |, Posbility: 0.0025
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : â†’, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ::, Posbility: 0.0001
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0055
Next Token :  0, Posbility: 0.0149
Next Token :  , Posbility: 0.0405
Next Token :  [], Posbility: 0.1104
Next Token :  1, Posbility: 0.8164
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  | [] -> 1
 score:False
Error type: noerr
---------------------------
Next Token :  |, Posbility: 0.0005
Next Token :   , Posbility: 0.0006
Next Token :  *, Posbility: 0.0008
Next Token :  , Posbility: 0.0052
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  | [] -> 1

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  | [] -> 1
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  | [] -> 1
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0022
Next Token :  0, Posbility: 0.0037
Next Token :  [], Posbility: 0.0273
Next Token :  [, Posbility: 0.0452
Next Token :  , Posbility: 0.9062
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  | [] -> 1
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0052
Next Token : (, Posbility: 0.0126
Next Token : head, Posbility: 0.0126
Next Token : _, Posbility: 0.0564
Next Token : x, Posbility: 0.8828
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  | [] -> 1
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0008
Next Token : :, Posbility: 0.0015
Next Token : s, Posbility: 0.0349
Next Token : ::, Posbility: 0.0574
Next Token :  , Posbility: 0.8984
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  | [] -> 1
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : <, Posbility: 0.0001
Next Token : x, Posbility: 0.0002
Next Token : ->, Posbility: 0.0013
Next Token : :, Posbility: 0.0041
Next Token : ::, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  | [] -> 1
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  acc, Posbility: 0.0006
Next Token :  [, Posbility: 0.0024
Next Token :  rest, Posbility: 0.0045
Next Token :  [], Posbility: 0.0096
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  | [] -> 1
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : (, Posbility: 0.0009
Next Token : tail, Posbility: 0.0019
Next Token : y, Posbility: 0.0058
Next Token : _, Posbility: 0.0177
Next Token : x, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  | [] -> 1
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : ::, Posbility: 0.0002
Next Token : ', Posbility: 0.0003
Next Token :  , Posbility: 0.0009
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  | [] -> 1
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0007
Next Token : 
, Posbility: 0.0009
Next Token : ', Posbility: 0.0024
Next Token :  when, Posbility: 0.0123
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  | [] -> 1
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : â†’, Posbility: 0.0000
Next Token : ::, Posbility: 0.0003
Next Token : if, Posbility: 0.0004
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  | [] -> 1
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0018
Next Token :  match, Posbility: 0.0029
Next Token :  1, Posbility: 0.0168
Next Token : 
, Posbility: 0.0459
Next Token :  , Posbility: 0.9219
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  | [] -> 1
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0034
Next Token : let, Posbility: 0.0044
Next Token : (, Posbility: 0.0154
Next Token : product, Posbility: 0.3105
Next Token : x, Posbility: 0.6562
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  | [] -> 1
  | x :: xs -> x
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0006
Next Token :  , Posbility: 0.0022
Next Token :  +, Posbility: 0.0031
Next Token : s, Posbility: 0.0052
Next Token :  *, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  | [] -> 1
  | x :: xs -> x *
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token :   , Posbility: 0.0002
Next Token :  !, Posbility: 0.0004
Next Token :  rec, Posbility: 0.0022
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Product, Posbility: 0.0002
Next Token : prod, Posbility: 0.0008
Next Token : (, Posbility: 0.0052
Next Token : x, Posbility: 0.0052
Next Token : product, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product
 score:False
Error type: noerr
---------------------------
Next Token :  unique, Posbility: 0.0000
Next Token :  (*, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token :  , Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_
 score:False
Error type: noerr
---------------------------
Next Token : un, Posbility: 0.0000
Next Token : uniq, Posbility: 0.0001
Next Token : recursive, Posbility: 0.0002
Next Token : list, Posbility: 0.0002
Next Token : unique, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique
 score:False
Error type: noerr
---------------------------
Next Token :  ((, Posbility: 0.0003
Next Token : (, Posbility: 0.0011
Next Token :  list, Posbility: 0.0014
Next Token :  , Posbility: 0.0757
Next Token : _, Posbility: 0.9219
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique_
 score:False
Error type: noerr
---------------------------
Next Token : next, Posbility: 0.0000
Next Token : rec, Posbility: 0.0000
Next Token : tail, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique_list
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0002
Next Token :  [, Posbility: 0.0003
Next Token :  rest, Posbility: 0.0004
Next Token : (, Posbility: 0.0025
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique_list 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0001
Next Token : List, Posbility: 0.0001
Next Token : tail, Posbility: 0.0004
Next Token : (, Posbility: 0.0601
Next Token : x, Posbility: 0.9375
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique_list x
 score:False
Error type: noerr
---------------------------
Next Token : :, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique_list xs
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0032
Next Token :  +, Posbility: 0.0047
Next Token :  , Posbility: 0.0099
Next Token : 
, Posbility: 0.4219
Next Token : 

, Posbility: 0.5430
---------------------------
code:
 (* Write a  function to calculate the product of the unique numbers in a given list. *)
let rec product_unique xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique xs
let rec product_unique_list xs =
  match xs with
  | [] -> 1
  | x :: xs -> x * product_unique_list xs


 score:True
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END and No Syntax Error--------

processing time : :41.8025918006897

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>