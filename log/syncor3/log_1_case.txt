code:
 (* Write a  function to identify non-prime numbers. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  check, Posbility: 0.0178
Next Token :  non, Posbility: 0.1025
Next Token :  rec, Posbility: 0.1689
Next Token :  , Posbility: 0.2793
Next Token :  is, Posbility: 0.2793
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Not, Posbility: 0.0060
Next Token : prime, Posbility: 0.0099
Next Token : Non, Posbility: 0.0165
Next Token : Prime, Posbility: 0.0447
Next Token : _, Posbility: 0.8984
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : composite, Posbility: 0.0190
Next Token : odd, Posbility: 0.0245
Next Token : not, Posbility: 0.1406
Next Token : non, Posbility: 0.2324
Next Token : prime, Posbility: 0.4922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0277
Next Token : _, Posbility: 0.0586
Next Token :  num, Posbility: 0.0586
Next Token :  =, Posbility: 0.2051
Next Token :  , Posbility: 0.5547
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : m, Posbility: 0.0052
Next Token : (, Posbility: 0.0233
Next Token : p, Posbility: 0.0635
Next Token : x, Posbility: 0.2832
Next Token : n, Posbility: 0.6016
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0006
Next Token : 
, Posbility: 0.0013
Next Token :   , Posbility: 0.0019
Next Token :  , Posbility: 0.0067
Next Token :  =, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  for, Posbility: 0.0043
Next Token :  !, Posbility: 0.0070
Next Token :  match, Posbility: 0.0170
Next Token :  , Posbility: 0.1250
Next Token : 
, Posbility: 0.8164
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0073
Next Token : 	, Posbility: 0.0082
Next Token :    , Posbility: 0.0327
Next Token :     , Posbility: 0.1885
Next Token :   , Posbility: 0.7422
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0211
Next Token : for, Posbility: 0.0649
Next Token : match, Posbility: 0.1069
Next Token : if, Posbility: 0.2910
Next Token : let, Posbility: 0.4238
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  one, Posbility: 0.0243
Next Token :  i, Posbility: 0.0276
Next Token :  is, Posbility: 0.0454
Next Token :  rec, Posbility: 0.2031
Next Token :  , Posbility: 0.4883
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : d, Posbility: 0.0786
Next Token : s, Posbility: 0.0889
Next Token : p, Posbility: 0.1006
Next Token : n, Posbility: 0.1465
Next Token : m, Posbility: 0.1465
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0015
Next Token : 1, Posbility: 0.0019
Next Token : ,, Posbility: 0.0035
Next Token : 2, Posbility: 0.0084
Next Token :  =, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0075
Next Token :  int, Posbility: 0.0109
Next Token :  1, Posbility: 0.0262
Next Token :  Math, Posbility: 0.0262
Next Token :  , Posbility: 0.8672
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : sqrt, Posbility: 0.0151
Next Token : 2, Posbility: 0.0864
Next Token : (, Posbility: 0.0981
Next Token : Int, Posbility: 0.1113
Next Token : n, Posbility: 0.5664
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0201
Next Token :  in, Posbility: 0.0376
Next Token :  +, Posbility: 0.0481
Next Token :  %, Posbility: 0.0481
Next Token :  , Posbility: 0.7539
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : <, Posbility: 0.0033
Next Token : >, Posbility: 0.0037
Next Token : //, Posbility: 0.0089
Next Token : /, Posbility: 0.1777
Next Token : -, Posbility: 0.7969
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  10, Posbility: 0.0005
Next Token :  2;, Posbility: 0.0005
Next Token :  1;, Posbility: 0.0136
Next Token :  , Posbility: 0.0288
Next Token :  1, Posbility: 0.9531
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >>, Posbility: 0.0030
Next Token :  |, Posbility: 0.0063
Next Token :  while, Posbility: 0.0092
Next Token : 
, Posbility: 0.2373
Next Token :  in, Posbility: 0.7305
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  while, Posbility: 0.0006
Next Token :   , Posbility: 0.0031
Next Token : 

, Posbility: 0.0066
Next Token :  , Posbility: 0.0075
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0005
Next Token :       , Posbility: 0.0008
Next Token :    , Posbility: 0.0009
Next Token :     , Posbility: 0.0075
Next Token :   , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : while, Posbility: 0.0496
Next Token : (, Posbility: 0.0562
Next Token : for, Posbility: 0.0723
Next Token : let, Posbility: 0.2520
Next Token : if, Posbility: 0.4160
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0019
Next Token :  0, Posbility: 0.0019
Next Token :  not, Posbility: 0.0035
Next Token :  !, Posbility: 0.0040
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : !(, Posbility: 0.0015
Next Token : Int, Posbility: 0.0020
Next Token : (, Posbility: 0.0659
Next Token : n, Posbility: 0.2949
Next Token : m, Posbility: 0.6250
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0476
Next Token :  >=, Posbility: 0.0476
Next Token :  =, Posbility: 0.0781
Next Token :  <=, Posbility: 0.2129
Next Token :  , Posbility: 0.5781
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : â‰¤, Posbility: 0.0004
Next Token : /, Posbility: 0.0013
Next Token : %%, Posbility: 0.0013
Next Token : >, Posbility: 0.0532
Next Token : <, Posbility: 0.9414
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0014
Next Token :   , Posbility: 0.0038
Next Token :  0, Posbility: 0.2090
Next Token :  1, Posbility: 0.2090
Next Token :  , Posbility: 0.5664
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : m, Posbility: 0.0009
Next Token : n, Posbility: 0.0013
Next Token : 5, Posbility: 0.0021
Next Token : 3, Posbility: 0.0228
Next Token : 2, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0033
Next Token :  or, Posbility: 0.0037
Next Token : 
, Posbility: 0.0101
Next Token :  ||, Posbility: 0.0583
Next Token :  then, Posbility: 0.9141
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  False, Posbility: 0.0096
Next Token : 
, Posbility: 0.1177
Next Token :  , Posbility: 0.1943
Next Token :  false, Posbility: 0.3203
Next Token :  true, Posbility: 0.3203
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true
 score:False
Error type: noerr
---------------------------
Next Token :  |, Posbility: 0.0033
Next Token :  , Posbility: 0.0055
Next Token : ;, Posbility: 0.0280
Next Token : 
, Posbility: 0.3867
Next Token :  else, Posbility: 0.5625
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  false, Posbility: 0.0260
Next Token :  not, Posbility: 0.0549
Next Token :  !, Posbility: 0.0703
Next Token : 
, Posbility: 0.2793
Next Token :  , Posbility: 0.5195
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0713
Next Token : m, Posbility: 0.1177
Next Token : n, Posbility: 0.1514
Next Token : (, Posbility: 0.1943
Next Token : if, Posbility: 0.2197
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0046
Next Token :  ((, Posbility: 0.0111
Next Token :  !, Posbility: 0.0266
Next Token :  not, Posbility: 0.0388
Next Token :  , Posbility: 0.8828
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0100
Next Token : !(, Posbility: 0.0114
Next Token : (, Posbility: 0.1387
Next Token : m, Posbility: 0.3320
Next Token : n, Posbility: 0.4277
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0408
Next Token :  mod, Posbility: 0.0525
Next Token :  , Posbility: 0.2080
Next Token :  ==, Posbility: 0.2080
Next Token :  %, Posbility: 0.4395
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : m, Posbility: 0.0001
Next Token :  1, Posbility: 0.0002
Next Token :  4, Posbility: 0.0003
Next Token :  ((, Posbility: 0.0003
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0012
Next Token : 3, Posbility: 0.0025
Next Token : (, Posbility: 0.0143
Next Token : m, Posbility: 0.3691
Next Token : 2, Posbility: 0.6094
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ===, Posbility: 0.0084
Next Token :  then, Posbility: 0.0096
Next Token :  , Posbility: 0.0203
Next Token :  =, Posbility: 0.3594
Next Token :  ==, Posbility: 0.5938
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 0, Posbility: 0.0009
Next Token :  1, Posbility: 0.0025
Next Token :  0, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0015
Next Token : 
, Posbility: 0.0019
Next Token :  &&, Posbility: 0.0065
Next Token :  ||, Posbility: 0.0177
Next Token :  then, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0061
Next Token :  true, Posbility: 0.0061
Next Token :  , Posbility: 0.0275
Next Token :  is, Posbility: 0.0452
Next Token :  false, Posbility: 0.9102
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0014
Next Token :  , Posbility: 0.0016
Next Token :  |, Posbility: 0.0055
Next Token : 
, Posbility: 0.0669
Next Token :  else, Posbility: 0.9219
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0146
Next Token :  true, Posbility: 0.0214
Next Token : 
, Posbility: 0.1230
Next Token :  is, Posbility: 0.3340
Next Token :  , Posbility: 0.4863
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0859
Next Token : let, Posbility: 0.1250
Next Token : n, Posbility: 0.1602
Next Token : m, Posbility: 0.2061
Next Token : if, Posbility: 0.2637
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0017
Next Token :  not, Posbility: 0.0022
Next Token :  !, Posbility: 0.0040
Next Token : 
, Posbility: 0.0052
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : !(, Posbility: 0.0015
Next Token : let, Posbility: 0.0099
Next Token : (, Posbility: 0.0239
Next Token : m, Posbility: 0.2559
Next Token : n, Posbility: 0.6992
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0057
Next Token :  <=, Posbility: 0.0176
Next Token :  ==, Posbility: 0.0889
Next Token :  , Posbility: 0.2139
Next Token :  %, Posbility: 0.6602
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  13, Posbility: 0.0002
Next Token :  1, Posbility: 0.0004
Next Token :  4, Posbility: 0.0032
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0008
Next Token : 5, Posbility: 0.0011
Next Token : 2, Posbility: 0.0132
Next Token : m, Posbility: 0.0591
Next Token : 3, Posbility: 0.9258
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0002
Next Token : d, Posbility: 0.0005
Next Token :  !=, Posbility: 0.0012
Next Token :  =, Posbility: 0.0017
Next Token :  ==, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token : 0, Posbility: 0.0009
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ||, Posbility: 0.0003
Next Token :  , Posbility: 0.0005
Next Token :  &&, Posbility: 0.0017
Next Token : 
, Posbility: 0.0085
Next Token :  then, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0265
Next Token :  , Posbility: 0.0342
Next Token :  is, Posbility: 0.0928
Next Token :  true, Posbility: 0.1523
Next Token :  false, Posbility: 0.6836
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token :  otherwise, Posbility: 0.0012
Next Token :  |, Posbility: 0.0017
Next Token :  , Posbility: 0.0053
Next Token : 
, Posbility: 0.1992
Next Token :  else, Posbility: 0.7891
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0031
Next Token :  true, Posbility: 0.0894
Next Token : 
, Posbility: 0.1147
Next Token :  is, Posbility: 0.1895
Next Token :  , Posbility: 0.5820
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0439
Next Token : m, Posbility: 0.0439
Next Token : let, Posbility: 0.0640
Next Token : n, Posbility: 0.0723
Next Token : if, Posbility: 0.6875
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0005
Next Token :  !, Posbility: 0.0006
Next Token :   , Posbility: 0.0008
Next Token : 
, Posbility: 0.0124
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0006
Next Token : let, Posbility: 0.0008
Next Token : (, Posbility: 0.0166
Next Token : m, Posbility: 0.0742
Next Token : n, Posbility: 0.9023
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  *, Posbility: 0.0002
Next Token :  ==, Posbility: 0.0003
Next Token :  , Posbility: 0.0036
Next Token :  %, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  13, Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token : 5, Posbility: 0.0015
Next Token :  4, Posbility: 0.0052
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0007
Next Token : 2, Posbility: 0.0009
Next Token : m, Posbility: 0.0058
Next Token : 7, Posbility: 0.0109
Next Token : 5, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !=, Posbility: 0.0001
Next Token : ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 0.0004
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : 0, Posbility: 0.0007
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ?, Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token :  &&, Posbility: 0.0005
Next Token : 
, Posbility: 0.0032
Next Token :  then, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0019
Next Token :  , Posbility: 0.0019
Next Token :  true, Posbility: 0.0179
Next Token :  false, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0007
Next Token :  |, Posbility: 0.0013
Next Token :  , Posbility: 0.0027
Next Token : 
, Posbility: 0.0471
Next Token :  else, Posbility: 0.9453
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  false, Posbility: 0.0046
Next Token : 
, Posbility: 0.0630
Next Token :  is, Posbility: 0.1338
Next Token :  true, Posbility: 0.1719
Next Token :  , Posbility: 0.6016
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0278
Next Token : begin, Posbility: 0.0315
Next Token : (, Posbility: 0.0405
Next Token : let, Posbility: 0.0859
Next Token : if, Posbility: 0.7188
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Math, Posbility: 0.0007
Next Token :   , Posbility: 0.0008
Next Token :  is, Posbility: 0.0017
Next Token : 
, Posbility: 0.0046
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0006
Next Token : let, Posbility: 0.0029
Next Token : (, Posbility: 0.0166
Next Token : m, Posbility: 0.0659
Next Token : n, Posbility: 0.9062
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0006
Next Token :  *, Posbility: 0.0009
Next Token :  ==, Posbility: 0.0031
Next Token :  , Posbility: 0.0157
Next Token :  %, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 7, Posbility: 0.0002
Next Token :  13, Posbility: 0.0008
Next Token :  11, Posbility: 0.0019
Next Token :  17, Posbility: 0.0025
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0001
Next Token : 2, Posbility: 0.0003
Next Token : m, Posbility: 0.0006
Next Token : 6, Posbility: 0.0012
Next Token : 7, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token : ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 0.0006
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : 0, Posbility: 0.0006
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  &&, Posbility: 0.0001
Next Token : 
, Posbility: 0.0009
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0004
Next Token :  , Posbility: 0.0007
Next Token :  true, Posbility: 0.0059
Next Token :  false, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token :  |, Posbility: 0.0008
Next Token :  then, Posbility: 0.0011
Next Token :  , Posbility: 0.0017
Next Token : 
, Posbility: 0.0140
Next Token :  else, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  false, Posbility: 0.0080
Next Token : 
, Posbility: 0.0317
Next Token :  is, Posbility: 0.0591
Next Token :  true, Posbility: 0.1611
Next Token :  , Posbility: 0.7188
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0109
Next Token : begin, Posbility: 0.0124
Next Token : (, Posbility: 0.0262
Next Token : let, Posbility: 0.0488
Next Token : if, Posbility: 0.8672
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0002
Next Token :   , Posbility: 0.0003
Next Token :  is, Posbility: 0.0005
Next Token : 
, Posbility: 0.0012
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : GC, Posbility: 0.0004
Next Token : let, Posbility: 0.0010
Next Token : (, Posbility: 0.0074
Next Token : m, Posbility: 0.0201
Next Token : n, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0002
Next Token :  >=, Posbility: 0.0002
Next Token :  ==, Posbility: 0.0008
Next Token :  , Posbility: 0.0059
Next Token :  %, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  19, Posbility: 0.0009
Next Token :  17, Posbility: 0.0023
Next Token :  13, Posbility: 0.0105
Next Token :  , Posbility: 0.0366
Next Token :  11, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !=, Posbility: 0.0001
Next Token :  then, Posbility: 0.0001
Next Token : ==, Posbility: 0.0001
Next Token :  =, Posbility: 0.0002
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : 0, Posbility: 0.0004
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  &&, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0004
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token :  true, Posbility: 0.0041
Next Token :  false, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0006
Next Token :  then, Posbility: 0.0012
Next Token :  , Posbility: 0.0013
Next Token : 
, Posbility: 0.0096
Next Token :  else, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  false, Posbility: 0.0096
Next Token :  is, Posbility: 0.0179
Next Token : 
, Posbility: 0.0261
Next Token :  true, Posbility: 0.1699
Next Token :  , Posbility: 0.7617
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0078
Next Token : begin, Posbility: 0.0078
Next Token : (, Posbility: 0.0308
Next Token : let, Posbility: 0.0349
Next Token : if, Posbility: 0.8984
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Math, Posbility: 0.0002
Next Token :   , Posbility: 0.0003
Next Token :  is, Posbility: 0.0005
Next Token : 
, Posbility: 0.0013
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token : let, Posbility: 0.0006
Next Token : (, Posbility: 0.0066
Next Token : m, Posbility: 0.0157
Next Token : n, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0002
Next Token :  <=, Posbility: 0.0002
Next Token :  ==, Posbility: 0.0007
Next Token :  , Posbility: 0.0032
Next Token :  %, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 13, Posbility: 0.0003
Next Token :  23, Posbility: 0.0004
Next Token :  17, Posbility: 0.0004
Next Token :  , Posbility: 0.0052
Next Token :  13, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  then, Posbility: 0.0000
Next Token : ==, Posbility: 0.0001
Next Token :  =, Posbility: 0.0002
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0004
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  ||, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  true, Posbility: 0.0015
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token :  then, Posbility: 0.0003
Next Token :   , Posbility: 0.0004
Next Token :  , Posbility: 0.0005
Next Token : 
, Posbility: 0.0036
Next Token :  else, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0011
Next Token : 
, Posbility: 0.0050
Next Token :  false, Posbility: 0.0050
Next Token :  true, Posbility: 0.0369
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : begin, Posbility: 0.0009
Next Token : n, Posbility: 0.0017
Next Token : let, Posbility: 0.0095
Next Token : (, Posbility: 0.0123
Next Token : if, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0000
Next Token :  is, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : !(, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : m, Posbility: 0.0022
Next Token : (, Posbility: 0.0028
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : %, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0001
Next Token :  &, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token :  %, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  29, Posbility: 0.0020
Next Token :  19, Posbility: 0.0030
Next Token :  , Posbility: 0.0249
Next Token :  15, Posbility: 0.0320
Next Token :  17, Posbility: 0.9336
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ==, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  =, Posbility: 0.0002
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0003
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  else, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token :  true, Posbility: 0.0036
Next Token :  false, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0011
Next Token :  |, Posbility: 0.0011
Next Token :  then, Posbility: 0.0031
Next Token : 
, Posbility: 0.0157
Next Token :  else, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0029
Next Token : 
, Posbility: 0.0146
Next Token :  false, Posbility: 0.0310
Next Token :  true, Posbility: 0.1387
Next Token :  , Posbility: 0.8008
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0086
Next Token : begin, Posbility: 0.0098
Next Token : let, Posbility: 0.0342
Next Token : (, Posbility: 0.0386
Next Token : if, Posbility: 0.8789
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0002
Next Token :  Math, Posbility: 0.0003
Next Token :   , Posbility: 0.0004
Next Token : 
, Posbility: 0.0004
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : GC, Posbility: 0.0004
Next Token : let, Posbility: 0.0010
Next Token : m, Posbility: 0.0095
Next Token : (, Posbility: 0.0108
Next Token : n, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  &, Posbility: 0.0002
Next Token :  *, Posbility: 0.0003
Next Token :  ==, Posbility: 0.0004
Next Token :  , Posbility: 0.0041
Next Token :  %, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  21, Posbility: 0.0002
Next Token :  29, Posbility: 0.0003
Next Token :  23, Posbility: 0.0019
Next Token :  , Posbility: 0.0025
Next Token :  19, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ==, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token :  then, Posbility: 0.0002
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token : 0, Posbility: 0.0002
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token :  true, Posbility: 0.0036
Next Token :  false, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token :  |, Posbility: 0.0010
Next Token :  , Posbility: 0.0011
Next Token :  then, Posbility: 0.0017
Next Token : 
, Posbility: 0.0123
Next Token :  else, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0012
Next Token : 
, Posbility: 0.0096
Next Token :  false, Posbility: 0.0232
Next Token :  true, Posbility: 0.0913
Next Token :  , Posbility: 0.8672
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0043
Next Token : begin, Posbility: 0.0043
Next Token : (, Posbility: 0.0248
Next Token : let, Posbility: 0.0248
Next Token : if, Posbility: 0.9297
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : !(, Posbility: 0.0001
Next Token : let, Posbility: 0.0004
Next Token : m, Posbility: 0.0036
Next Token : (, Posbility: 0.0075
Next Token : n, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0002
Next Token :  &, Posbility: 0.0002
Next Token :  *, Posbility: 0.0004
Next Token :  , Posbility: 0.0017
Next Token :  %, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  13, Posbility: 0.0013
Next Token :  27, Posbility: 0.0015
Next Token :  , Posbility: 0.0383
Next Token :  21, Posbility: 0.0811
Next Token :  23, Posbility: 0.8711
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ===, Posbility: 0.0000
Next Token : ==, Posbility: 0.0000
Next Token :  then, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0006
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ||, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  true, Posbility: 0.0022
Next Token :  false, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token :  |, Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token :  then, Posbility: 0.0008
Next Token : 
, Posbility: 0.0036
Next Token :  else, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0004
Next Token : 
, Posbility: 0.0027
Next Token :  false, Posbility: 0.0120
Next Token :  true, Posbility: 0.0288
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : begin, Posbility: 0.0011
Next Token : n, Posbility: 0.0021
Next Token : let, Posbility: 0.0084
Next Token : (, Posbility: 0.0123
Next Token : if, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0000
Next Token :  !, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0002
Next Token : m, Posbility: 0.0003
Next Token : let, Posbility: 0.0004
Next Token : (, Posbility: 0.0036
Next Token : n, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  &, Posbility: 0.0001
Next Token :  >=, Posbility: 0.0001
Next Token :  *, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token :  %, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  17, Posbility: 0.0076
Next Token :  25, Posbility: 0.0182
Next Token :  , Posbility: 0.1187
Next Token :  27, Posbility: 0.1523
Next Token :  29, Posbility: 0.6836
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  then, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  ===, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  0), Posbility: 0.0000
Next Token : 0, Posbility: 0.0002
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  true, Posbility: 0.0008
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0009
Next Token :  otherwise, Posbility: 0.0011
Next Token : 

, Posbility: 0.0015
Next Token : 
, Posbility: 0.0123
Next Token :  else, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  for, Posbility: 0.0007
Next Token : 
, Posbility: 0.0053
Next Token :  false, Posbility: 0.0186
Next Token :  true, Posbility: 0.0737
Next Token :  , Posbility: 0.8984
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0092
Next Token : begin, Posbility: 0.0104
Next Token : (, Posbility: 0.0171
Next Token : let, Posbility: 0.0171
Next Token : if, Posbility: 0.9336
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  not, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : m, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : (, Posbility: 0.0006
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0001
Next Token :  >=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0013
Next Token :  %, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  63, Posbility: 0.0000
Next Token :  29, Posbility: 0.0001
Next Token :  27, Posbility: 0.0001
Next Token :  17, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 35, Posbility: 0.0004
Next Token : 97, Posbility: 0.0010
Next Token : 33, Posbility: 0.0021
Next Token : 37, Posbility: 0.0159
Next Token : 31, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ==, Posbility: 0.0000
Next Token :  !=, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  ===, Posbility: 0.0000
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0002
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  true, Posbility: 0.0019
Next Token :  false, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0008
Next Token :  otherwise, Posbility: 0.0008
Next Token :  , Posbility: 0.0015
Next Token : 
, Posbility: 0.0109
Next Token :  else, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0010
Next Token : 
, Posbility: 0.0068
Next Token :  false, Posbility: 0.0098
Next Token :  true, Posbility: 0.0933
Next Token :  , Posbility: 0.8867
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : begin, Posbility: 0.0072
Next Token : n, Posbility: 0.0092
Next Token : let, Posbility: 0.0105
Next Token : (, Posbility: 0.0222
Next Token : if, Posbility: 0.9414
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  not, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : m, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : (, Posbility: 0.0008
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0001
Next Token :  >=, Posbility: 0.0003
Next Token :  ==, Posbility: 0.0004
Next Token :  , Posbility: 0.0019
Next Token :  %, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  40, Posbility: 0.0000
Next Token :  23, Posbility: 0.0000
Next Token :  63, Posbility: 0.0001
Next Token :  17, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 41, Posbility: 0.0024
Next Token : 34, Posbility: 0.0031
Next Token : 35, Posbility: 0.0051
Next Token : 33, Posbility: 0.0139
Next Token : 37, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ===, Posbility: 0.0000
Next Token : ==, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  then, Posbility: 0.0001
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0001
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  true, Posbility: 0.0015
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token :  otherwise, Posbility: 0.0005
Next Token : 

, Posbility: 0.0006
Next Token :  , Posbility: 0.0015
Next Token : 
, Posbility: 0.0109
Next Token :  else, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0007
Next Token : 
, Posbility: 0.0047
Next Token :  false, Posbility: 0.0164
Next Token :  true, Posbility: 0.0830
Next Token :  , Posbility: 0.8906
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : begin, Posbility: 0.0063
Next Token : n, Posbility: 0.0072
Next Token : let, Posbility: 0.0092
Next Token : (, Posbility: 0.0251
Next Token : if, Posbility: 0.9414
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : m, Posbility: 0.0001
Next Token : (, Posbility: 0.0010
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0002
Next Token :  >=, Posbility: 0.0003
Next Token :  , Posbility: 0.0019
Next Token :  %, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  13, Posbility: 0.0000
Next Token :  4, Posbility: 0.0001
Next Token :  63, Posbility: 0.0001
Next Token :  40, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 39, Posbility: 0.0008
Next Token : 53, Posbility: 0.0009
Next Token : 47, Posbility: 0.0019
Next Token : 43, Posbility: 0.0178
Next Token : 41, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token : ==, Posbility: 0.0000
Next Token :  ===, Posbility: 0.0000
Next Token :  then, Posbility: 0.0001
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0001
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  true, Posbility: 0.0013
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token :  then, Posbility: 0.0004
Next Token :  otherwise, Posbility: 0.0004
Next Token :  , Posbility: 0.0012
Next Token : 
, Posbility: 0.0067
Next Token :  else, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0003
Next Token : 
, Posbility: 0.0030
Next Token :  false, Posbility: 0.0104
Next Token :  true, Posbility: 0.0525
Next Token :  , Posbility: 0.9336
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : begin, Posbility: 0.0019
Next Token : let, Posbility: 0.0040
Next Token : n, Posbility: 0.0045
Next Token : (, Posbility: 0.0177
Next Token : if, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : !(, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : m, Posbility: 0.0012
Next Token : (, Posbility: 0.0032
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0001
Next Token :  >=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0002
Next Token :  , Posbility: 0.0008
Next Token :  %, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  437, Posbility: 0.0000
Next Token :  4, Posbility: 0.0001
Next Token :  23, Posbility: 0.0001
Next Token :  63, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 67, Posbility: 0.0004
Next Token : 49, Posbility: 0.0013
Next Token : 53, Posbility: 0.0027
Next Token : 47, Posbility: 0.0178
Next Token : 43, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token : ==, Posbility: 0.0000
Next Token :  ===, Posbility: 0.0000
Next Token :  then, Posbility: 0.0000
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 0, Posbility: 0.0003
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ||, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  true, Posbility: 0.0008
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token :  otherwise, Posbility: 0.0001
Next Token :  then, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token : 
, Posbility: 0.0022
Next Token :  else, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0002
Next Token : 
, Posbility: 0.0013
Next Token :  false, Posbility: 0.0045
Next Token :  true, Posbility: 0.0157
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : begin, Posbility: 0.0004
Next Token : n, Posbility: 0.0010
Next Token : let, Posbility: 0.0017
Next Token : (, Posbility: 0.0075
Next Token : if, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : try, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : m, Posbility: 0.0009
Next Token : (, Posbility: 0.0013
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : %, Posbility: 0.0000
Next Token :  >=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  %, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  13, Posbility: 0.0000
Next Token :  50, Posbility: 0.0000
Next Token :  29, Posbility: 0.0006
Next Token :  17, Posbility: 0.0009
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 53, Posbility: 0.0003
Next Token : 46, Posbility: 0.0003
Next Token : 49, Posbility: 0.0008
Next Token : 97, Posbility: 0.0013
Next Token : 47, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  ===, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  then, Posbility: 0.0000
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 0, Posbility: 0.0001
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Then, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  true, Posbility: 0.0012
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0005
Next Token :  then, Posbility: 0.0010
Next Token :  , Posbility: 0.0024
Next Token : 
, Posbility: 0.0140
Next Token :  else, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0004
Next Token : 
, Posbility: 0.0033
Next Token :  false, Posbility: 0.0215
Next Token :  true, Posbility: 0.0583
Next Token :  , Posbility: 0.9141
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0030
Next Token : n, Posbility: 0.0057
Next Token : let, Posbility: 0.0073
Next Token : (, Posbility: 0.0198
Next Token : if, Posbility: 0.9531
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0001
Next Token : m, Posbility: 0.0001
Next Token : c, Posbility: 0.0002
Next Token : (, Posbility: 0.0015
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0001
Next Token :  >=, Posbility: 0.0002
Next Token :  ==, Posbility: 0.0003
Next Token :  , Posbility: 0.0010
Next Token :  %, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  13, Posbility: 0.0001
Next Token :  17, Posbility: 0.0001
Next Token :  63, Posbility: 0.0003
Next Token :  29, Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 57, Posbility: 0.0035
Next Token : 61, Posbility: 0.0058
Next Token : 97, Posbility: 0.0130
Next Token : 49, Posbility: 0.0513
Next Token : 53, Posbility: 0.9102
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ==, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  ===, Posbility: 0.0000
Next Token :  then, Posbility: 0.0001
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0001
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  true, Posbility: 0.0006
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token :  otherwise, Posbility: 0.0001
Next Token :  then, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token : 
, Posbility: 0.0017
Next Token :  else, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0007
Next Token :  false, Posbility: 0.0036
Next Token :  true, Posbility: 0.0085
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : begin, Posbility: 0.0003
Next Token : let, Posbility: 0.0008
Next Token : n, Posbility: 0.0012
Next Token : (, Posbility: 0.0052
Next Token : if, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : m, Posbility: 0.0003
Next Token : (, Posbility: 0.0006
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token :  mod, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  %, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  63, Posbility: 0.0000
Next Token :  11, Posbility: 0.0000
Next Token :  29, Posbility: 0.0000
Next Token :  17, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 97, Posbility: 0.0024
Next Token : 67, Posbility: 0.0029
Next Token : 61, Posbility: 0.0069
Next Token : 57, Posbility: 0.0742
Next Token : 59, Posbility: 0.9023
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ==, Posbility: 0.0000
Next Token :  ===, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  then, Posbility: 0.0002
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0002
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  true, Posbility: 0.0009
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0004
Next Token :  then, Posbility: 0.0005
Next Token :  , Posbility: 0.0013
Next Token : 
, Posbility: 0.0109
Next Token :  else, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0004
Next Token : 
, Posbility: 0.0023
Next Token :  false, Posbility: 0.0220
Next Token :  true, Posbility: 0.0410
Next Token :  , Posbility: 0.9336
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0013
Next Token : let, Posbility: 0.0035
Next Token : n, Posbility: 0.0051
Next Token : (, Posbility: 0.0156
Next Token : if, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0001
Next Token :  *, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0002
Next Token :  , Posbility: 0.0006
Next Token :  %, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  11, Posbility: 0.0001
Next Token :  17, Posbility: 0.0002
Next Token :  63, Posbility: 0.0025
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 97, Posbility: 0.0070
Next Token : 7, Posbility: 0.0079
Next Token : 71, Posbility: 0.0216
Next Token : 67, Posbility: 0.1406
Next Token : 61, Posbility: 0.8125
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  ===, Posbility: 0.0001
Next Token :  then, Posbility: 0.0007
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  0), Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 0, Posbility: 0.0002
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  true, Posbility: 0.0010
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0002
Next Token :  , Posbility: 0.0007
Next Token :  then, Posbility: 0.0013
Next Token : 
, Posbility: 0.0059
Next Token :  else, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0003
Next Token : 
, Posbility: 0.0027
Next Token :  false, Posbility: 0.0093
Next Token :  true, Posbility: 0.0327
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : begin, Posbility: 0.0010
Next Token : let, Posbility: 0.0031
Next Token : n, Posbility: 0.0051
Next Token : (, Posbility: 0.0139
Next Token : if, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Math, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : (, Posbility: 0.0005
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0001
Next Token :  >=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token :  %, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  27, Posbility: 0.0001
Next Token :  17, Posbility: 0.0001
Next Token :  63, Posbility: 0.0757
Next Token :  , Posbility: 0.9219
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 97, Posbility: 0.0013
Next Token : 7, Posbility: 0.0019
Next Token : 127, Posbility: 0.0028
Next Token : 65, Posbility: 0.0031
Next Token : 67, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0000
Next Token :  ===, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  then, Posbility: 0.0002
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  0), Posbility: 0.0000
Next Token : 0, Posbility: 0.0001
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  true, Posbility: 0.0009
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0002
Next Token :  , Posbility: 0.0005
Next Token :  then, Posbility: 0.0005
Next Token : 
, Posbility: 0.0046
Next Token :  else, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0002
Next Token : 
, Posbility: 0.0016
Next Token :  false, Posbility: 0.0107
Next Token :  true, Posbility: 0.0200
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0011
Next Token : let, Posbility: 0.0035
Next Token : n, Posbility: 0.0040
Next Token : (, Posbility: 0.0123
Next Token : if, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : m, Posbility: 0.0001
Next Token : c, Posbility: 0.0001
Next Token : (, Posbility: 0.0006
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0000
Next Token :  >=, Posbility: 0.0000
Next Token :  <=, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  %, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :  11, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  63, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 69, Posbility: 0.0008
Next Token : 7, Posbility: 0.0010
Next Token : 70, Posbility: 0.0031
Next Token : 73, Posbility: 0.0109
Next Token : 71, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  ===, Posbility: 0.0000
Next Token :  then, Posbility: 0.0006
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0001
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  true, Posbility: 0.0009
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token :  then, Posbility: 0.0006
Next Token : 
, Posbility: 0.0041
Next Token :  else, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0002
Next Token : 
, Posbility: 0.0019
Next Token :  false, Posbility: 0.0108
Next Token :  true, Posbility: 0.0156
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0009
Next Token : let, Posbility: 0.0021
Next Token : n, Posbility: 0.0040
Next Token : (, Posbility: 0.0123
Next Token : if, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : m, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0001
Next Token :  >=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token :  %, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  27, Posbility: 0.0000
Next Token :  17, Posbility: 0.0000
Next Token :  23, Posbility: 0.0000
Next Token :  13, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 72, Posbility: 0.0003
Next Token : 83, Posbility: 0.0004
Next Token : 79, Posbility: 0.0012
Next Token : 74, Posbility: 0.0019
Next Token : 73, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :  the, Posbility: 0.0000
Next Token : ==, Posbility: 0.0000
Next Token :  then, Posbility: 0.0000
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 0, Posbility: 0.0001
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  ||, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  true, Posbility: 0.0006
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token :  otherwise, Posbility: 0.0001
Next Token :  then, Posbility: 0.0004
Next Token :  , Posbility: 0.0005
Next Token : 
, Posbility: 0.0022
Next Token :  else, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0009
Next Token :  false, Posbility: 0.0059
Next Token :  true, Posbility: 0.0096
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : begin, Posbility: 0.0003
Next Token : let, Posbility: 0.0009
Next Token : n, Posbility: 0.0013
Next Token : (, Posbility: 0.0067
Next Token : if, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  %, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  11, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  17, Posbility: 0.0000
Next Token :  19, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 89, Posbility: 0.0010
Next Token : 77, Posbility: 0.0013
Next Token : 83, Posbility: 0.0015
Next Token : 97, Posbility: 0.0022
Next Token : 79, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token : ==, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  then, Posbility: 0.0000
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0), Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0001
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Then, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  true, Posbility: 0.0012
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0010
Next Token :  then, Posbility: 0.0013
Next Token :  , Posbility: 0.0035
Next Token : 
, Posbility: 0.0258
Next Token :  else, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fail, Posbility: 0.0010
Next Token : 
, Posbility: 0.0081
Next Token :  false, Posbility: 0.0977
Next Token :  true, Posbility: 0.1611
Next Token :  , Posbility: 0.7227
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0123
Next Token : return, Posbility: 0.0179
Next Token : n, Posbility: 0.0231
Next Token : (, Posbility: 0.0430
Next Token : if, Posbility: 0.8633
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  int, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  not, Posbility: 0.0010
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : !(, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : m, Posbility: 0.0007
Next Token : (, Posbility: 0.0046
Next Token : n, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0015
Next Token :  =, Posbility: 0.0017
Next Token :  ==, Posbility: 0.0031
Next Token :  , Posbility: 0.0052
Next Token :  %, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  27, Posbility: 0.0001
Next Token :  13, Posbility: 0.0002
Next Token :  11, Posbility: 0.0002
Next Token :  17, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 82, Posbility: 0.0135
Next Token : 87, Posbility: 0.0254
Next Token : 81, Posbility: 0.1138
Next Token : 83, Posbility: 0.3496
Next Token : 97, Posbility: 0.4492
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  then, Posbility: 0.0005
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0), Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 0, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  ||, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  true, Posbility: 0.0085
Next Token :  false, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0010
Next Token :  then, Posbility: 0.0019
Next Token :  , Posbility: 0.0039
Next Token : 
, Posbility: 0.0256
Next Token :  else, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fail, Posbility: 0.0011
Next Token : 
, Posbility: 0.0090
Next Token :  false, Posbility: 0.0659
Next Token :  true, Posbility: 0.2041
Next Token :  , Posbility: 0.7109
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : begin, Posbility: 0.0124
Next Token : let, Posbility: 0.0140
Next Token : n, Posbility: 0.0140
Next Token : (, Posbility: 0.0432
Next Token : if, Posbility: 0.8711
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token :  ((, Posbility: 0.0003
Next Token :  not, Posbility: 0.0022
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0003
Next Token : let, Posbility: 0.0009
Next Token : m, Posbility: 0.0066
Next Token : (, Posbility: 0.0096
Next Token : n, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0017
Next Token :  =, Posbility: 0.0024
Next Token :  ==, Posbility: 0.0027
Next Token :  , Posbility: 0.0096
Next Token :  %, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  101), Posbility: 0.0002
Next Token :  121, Posbility: 0.0007
Next Token :  100, Posbility: 0.0012
Next Token :  11, Posbility: 0.0028
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 111, Posbility: 0.0112
Next Token : 131, Posbility: 0.0162
Next Token : 99, Posbility: 0.0366
Next Token : 103, Posbility: 0.1865
Next Token : 101, Posbility: 0.6523
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ===, Posbility: 0.0000
Next Token : ==, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token :  then, Posbility: 0.0009
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0002
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  true, Posbility: 0.0019
Next Token :  false, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0004
Next Token :  then, Posbility: 0.0022
Next Token :  , Posbility: 0.0024
Next Token : 
, Posbility: 0.0109
Next Token :  else, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0006
Next Token : 
, Posbility: 0.0033
Next Token :  false, Posbility: 0.0272
Next Token :  true, Posbility: 0.0654
Next Token :  , Posbility: 0.9023
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0021
Next Token : let, Posbility: 0.0031
Next Token : n, Posbility: 0.0065
Next Token : (, Posbility: 0.0177
Next Token : if, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  not, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : m, Posbility: 0.0002
Next Token : y, Posbility: 0.0003
Next Token : c, Posbility: 0.0006
Next Token : (, Posbility: 0.0041
Next Token : n, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0002
Next Token :  >=, Posbility: 0.0003
Next Token :  ==, Posbility: 0.0005
Next Token :  , Posbility: 0.0015
Next Token :  %, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  11, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  121, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 113, Posbility: 0.0008
Next Token : 127, Posbility: 0.0021
Next Token : 109, Posbility: 0.0031
Next Token : 107, Posbility: 0.0291
Next Token : 103, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ==, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  ===, Posbility: 0.0000
Next Token :  then, Posbility: 0.0000
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0002
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  &&, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  true, Posbility: 0.0006
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token :  then, Posbility: 0.0004
Next Token : 
, Posbility: 0.0046
Next Token :  else, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0013
Next Token :  false, Posbility: 0.0074
Next Token :  true, Posbility: 0.0201
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0004
Next Token : let, Posbility: 0.0010
Next Token : n, Posbility: 0.0040
Next Token : (, Posbility: 0.0085
Next Token : if, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : m, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : c, Posbility: 0.0001
Next Token : (, Posbility: 0.0004
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0001
Next Token :  mod, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token :  %, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 107, Posbility: 0.0000
Next Token :  11, Posbility: 0.0000
Next Token :  112, Posbility: 0.0000
Next Token :  121, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 106, Posbility: 0.0014
Next Token : 107,, Posbility: 0.0051
Next Token : 127, Posbility: 0.0115
Next Token : 109, Posbility: 0.0583
Next Token : 107, Posbility: 0.9141
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ===, Posbility: 0.0000
Next Token : ==, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  then, Posbility: 0.0001
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0001
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  true, Posbility: 0.0007
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0003
Next Token :  then, Posbility: 0.0004
Next Token :  , Posbility: 0.0005
Next Token : 
, Posbility: 0.0059
Next Token :  else, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0013
Next Token :  false, Posbility: 0.0122
Next Token :  true, Posbility: 0.0177
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0008
Next Token : let, Posbility: 0.0013
Next Token : n, Posbility: 0.0066
Next Token : (, Posbility: 0.0109
Next Token : if, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : c, Posbility: 0.0002
Next Token : (, Posbility: 0.0007
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token :  %, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  112, Posbility: 0.0000
Next Token :  121, Posbility: 0.0000
Next Token :  11, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 111, Posbility: 0.0007
Next Token : 107, Posbility: 0.0008
Next Token : 113, Posbility: 0.0019
Next Token : 1091, Posbility: 0.0019
Next Token : 109, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ==, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  then, Posbility: 0.0000
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0001
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  true, Posbility: 0.0006
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0003
Next Token :  , Posbility: 0.0005
Next Token :  then, Posbility: 0.0007
Next Token : 
, Posbility: 0.0052
Next Token :  else, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0014
Next Token :  false, Posbility: 0.0121
Next Token :  true, Posbility: 0.0256
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0005
Next Token : let, Posbility: 0.0010
Next Token : n, Posbility: 0.0075
Next Token : (, Posbility: 0.0096
Next Token : if, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : c, Posbility: 0.0001
Next Token : (, Posbility: 0.0006
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token :  %, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2011, Posbility: 0.0000
Next Token :  11, Posbility: 0.0001
Next Token :  121, Posbility: 0.0003
Next Token :  112, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 119, Posbility: 0.0041
Next Token : 211, Posbility: 0.0044
Next Token : 127, Posbility: 0.0063
Next Token : 111, Posbility: 0.0173
Next Token : 113, Posbility: 0.9453
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  then, Posbility: 0.0000
Next Token : ==, Posbility: 0.0000
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0001
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  true, Posbility: 0.0004
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  then, Posbility: 0.0006
Next Token : 
, Posbility: 0.0012
Next Token :  else, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0005
Next Token :  false, Posbility: 0.0040
Next Token :  true, Posbility: 0.0059
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0002
Next Token : let, Posbility: 0.0004
Next Token : n, Posbility: 0.0031
Next Token : (, Posbility: 0.0067
Next Token : if, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : m, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  %, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Ga, Posbility: 0.0000
Next Token :  17, Posbility: 0.0000
Next Token :  122, Posbility: 0.0002
Next Token :  121, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 119, Posbility: 0.0028
Next Token : 137, Posbility: 0.0040
Next Token : 131, Posbility: 0.0103
Next Token : 117, Posbility: 0.0461
Next Token : 127, Posbility: 0.9258
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ==, Posbility: 0.0000
Next Token :  ===, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  then, Posbility: 0.0000
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0), Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0001
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Then, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  true, Posbility: 0.0013
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token :  then, Posbility: 0.0005
Next Token : 

, Posbility: 0.0006
Next Token :  , Posbility: 0.0015
Next Token : 
, Posbility: 0.0124
Next Token :  else, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0003
Next Token : 
, Posbility: 0.0024
Next Token :  true, Posbility: 0.0623
Next Token :  false, Posbility: 0.0708
Next Token :  , Posbility: 0.8594
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0043
Next Token : let, Posbility: 0.0043
Next Token : n, Posbility: 0.0172
Next Token : (, Posbility: 0.0250
Next Token : if, Posbility: 0.9375
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  int, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  not, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : !(, Posbility: 0.0001
Next Token : m, Posbility: 0.0001
Next Token : (, Posbility: 0.0028
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0003
Next Token :  ==, Posbility: 0.0003
Next Token :  =, Posbility: 0.0006
Next Token :  , Posbility: 0.0013
Next Token :  %, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  29, Posbility: 0.0000
Next Token :  121, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  13, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 139, Posbility: 0.0069
Next Token : 129, Posbility: 0.0107
Next Token : 137, Posbility: 0.0374
Next Token : 133, Posbility: 0.0479
Next Token : 131, Posbility: 0.8516
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ==, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  ===, Posbility: 0.0001
Next Token :  then, Posbility: 0.0003
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0001
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Then, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  true, Posbility: 0.0007
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0002
Next Token :  , Posbility: 0.0005
Next Token :  then, Posbility: 0.0013
Next Token : 
, Posbility: 0.0041
Next Token :  else, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0003
Next Token : 
, Posbility: 0.0014
Next Token :  false, Posbility: 0.0137
Next Token :  true, Posbility: 0.0226
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0012
Next Token : let, Posbility: 0.0012
Next Token : n, Posbility: 0.0035
Next Token : (, Posbility: 0.0109
Next Token : if, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  not, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0001
Next Token : val, Posbility: 0.0001
Next Token : c, Posbility: 0.0003
Next Token : (, Posbility: 0.0019
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0002
Next Token :  =, Posbility: 0.0002
Next Token :  , Posbility: 0.0006
Next Token :  %, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ArrayList, Posbility: 0.0000
Next Token :  2013, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  13, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 138, Posbility: 0.0003
Next Token : 134, Posbility: 0.0003
Next Token : 139, Posbility: 0.0277
Next Token : 133, Posbility: 0.0518
Next Token : 137, Posbility: 0.9180
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token : ==, Posbility: 0.0000
Next Token :  ===, Posbility: 0.0000
Next Token :  then, Posbility: 0.0008
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  0), Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0001
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : then, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  true, Posbility: 0.0006
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token :  then, Posbility: 0.0005
Next Token : 
, Posbility: 0.0046
Next Token :  else, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0006
Next Token :  false, Posbility: 0.0096
Next Token :  true, Posbility: 0.0123
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0010
Next Token : let, Posbility: 0.0015
Next Token : n, Posbility: 0.0045
Next Token : (, Posbility: 0.0096
Next Token : if, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : m, Posbility: 0.0001
Next Token : val, Posbility: 0.0001
Next Token : c, Posbility: 0.0003
Next Token : (, Posbility: 0.0012
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  %, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  14, Posbility: 0.0000
Next Token :  13, Posbility: 0.0000
Next Token : 139, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 149, Posbility: 0.0027
Next Token : 143, Posbility: 0.0031
Next Token : 151, Posbility: 0.0045
Next Token : 141, Posbility: 0.0051
Next Token : 139, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :  ===, Posbility: 0.0000
Next Token : ==, Posbility: 0.0000
Next Token :  then, Posbility: 0.0000
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0001
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  &&, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  true, Posbility: 0.0007
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  then, Posbility: 0.0005
Next Token : 
, Posbility: 0.0032
Next Token :  else, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0006
Next Token :  false, Posbility: 0.0066
Next Token :  true, Posbility: 0.0085
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0003
Next Token : let, Posbility: 0.0005
Next Token : n, Posbility: 0.0028
Next Token : (, Posbility: 0.0085
Next Token : if, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  %, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  29, Posbility: 0.0000
Next Token :  17, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  14, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 147, Posbility: 0.0042
Next Token : 141, Posbility: 0.0053
Next Token : 143, Posbility: 0.0060
Next Token : 151, Posbility: 0.0737
Next Token : 149, Posbility: 0.8945
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ==, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  ===, Posbility: 0.0000
Next Token :  then, Posbility: 0.0000
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0), Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  true, Posbility: 0.0006
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token :  otherwise, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  then, Posbility: 0.0003
Next Token : 
, Posbility: 0.0008
Next Token :  else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  true, Posbility: 0.0036
Next Token :  false, Posbility: 0.0036
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0002
Next Token : let, Posbility: 0.0002
Next Token : n, Posbility: 0.0012
Next Token : (, Posbility: 0.0041
Next Token : if, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  %, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  121, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  17, Posbility: 0.0000
Next Token :  15, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 161, Posbility: 0.0017
Next Token : 163, Posbility: 0.0027
Next Token : 153, Posbility: 0.0153
Next Token : 157, Posbility: 0.0253
Next Token : 151, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  ===, Posbility: 0.0000
Next Token :  then, Posbility: 0.0002
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  else, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  true, Posbility: 0.0006
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token :  then, Posbility: 0.0013
Next Token : 
, Posbility: 0.0036
Next Token :  else, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0009
Next Token :  false, Posbility: 0.0120
Next Token :  true, Posbility: 0.0289
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0005
Next Token : return, Posbility: 0.0008
Next Token : n, Posbility: 0.0024
Next Token : (, Posbility: 0.0096
Next Token : if, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  not, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : !(, Posbility: 0.0000
Next Token : m, Posbility: 0.0001
Next Token : (, Posbility: 0.0017
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0003
Next Token :  , Posbility: 0.0006
Next Token :  %, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  17, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 173, Posbility: 0.0137
Next Token : 167, Posbility: 0.0226
Next Token : 163, Posbility: 0.0693
Next Token : 153, Posbility: 0.1147
Next Token : 157, Posbility: 0.7461
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  ===, Posbility: 0.0000
Next Token :  then, Posbility: 0.0001
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  0), Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0001
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  true, Posbility: 0.0010
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0008
Next Token : 

, Posbility: 0.0010
Next Token :  then, Posbility: 0.0022
Next Token : 
, Posbility: 0.0123
Next Token :  else, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0003
Next Token : 
, Posbility: 0.0014
Next Token :  false, Posbility: 0.0315
Next Token :  true, Posbility: 0.0405
Next Token :  , Posbility: 0.9219
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0015
Next Token : return, Posbility: 0.0027
Next Token : n, Posbility: 0.0035
Next Token : (, Posbility: 0.0123
Next Token : if, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  Math, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  not, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0003
Next Token : y, Posbility: 0.0005
Next Token : c, Posbility: 0.0009
Next Token : (, Posbility: 0.0025
Next Token : n, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0003
Next Token :  , Posbility: 0.0010
Next Token :  %, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  19, Posbility: 0.0000
Next Token :  17, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 173, Posbility: 0.0059
Next Token : 159, Posbility: 0.0124
Next Token : 167, Posbility: 0.0140
Next Token : 161, Posbility: 0.0713
Next Token : 163, Posbility: 0.8711
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token :  !=, Posbility: 0.0000
Next Token :  ===, Posbility: 0.0000
Next Token :  then, Posbility: 0.0046
Next Token :  ==, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  0), Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ||, Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  true, Posbility: 0.0006
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  then, Posbility: 0.0004
Next Token : 
, Posbility: 0.0022
Next Token :  else, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0005
Next Token :  false, Posbility: 0.0046
Next Token :  true, Posbility: 0.0085
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0003
Next Token : let, Posbility: 0.0004
Next Token : n, Posbility: 0.0040
Next Token : (, Posbility: 0.0109
Next Token : if, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :  >=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  %, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0000
Next Token : 167, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  17, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 166, Posbility: 0.0008
Next Token : 171, Posbility: 0.0016
Next Token : 165, Posbility: 0.0045
Next Token : 169, Posbility: 0.0258
Next Token : 167, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token : ==, Posbility: 0.0000
Next Token :  ===, Posbility: 0.0000
Next Token :  then, Posbility: 0.0005
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0), Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  true, Posbility: 0.0009
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0004
Next Token : 

, Posbility: 0.0005
Next Token :  then, Posbility: 0.0007
Next Token : 
, Posbility: 0.0076
Next Token :  else, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0001
Next Token : 
, Posbility: 0.0007
Next Token :  false, Posbility: 0.0107
Next Token :  true, Posbility: 0.0227
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0009
Next Token : return, Posbility: 0.0017
Next Token : n, Posbility: 0.0035
Next Token : (, Posbility: 0.0140
Next Token : if, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0001
Next Token : y, Posbility: 0.0002
Next Token : c, Posbility: 0.0003
Next Token : (, Posbility: 0.0017
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  %, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 173, Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  17, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 181, Posbility: 0.0049
Next Token : 179, Posbility: 0.0110
Next Token : 171, Posbility: 0.0815
Next Token : 169, Posbility: 0.1050
Next Token : 173, Posbility: 0.7773
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0000
Next Token :  ===, Posbility: 0.0000
Next Token : ==, Posbility: 0.0000
Next Token :  then, Posbility: 0.0001
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : then, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  true, Posbility: 0.0004
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  then, Posbility: 0.0002
Next Token : 
, Posbility: 0.0012
Next Token :  else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  false, Posbility: 0.0032
Next Token :  true, Posbility: 0.0046
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0002
Next Token : let, Posbility: 0.0002
Next Token : n, Posbility: 0.0015
Next Token : (, Posbility: 0.0036
Next Token : if, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : m, Posbility: 0.0001
Next Token : h, Posbility: 0.0001
Next Token : c, Posbility: 0.0002
Next Token : (, Posbility: 0.0009
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  %, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  19, Posbility: 0.0000
Next Token :  17, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 191, Posbility: 0.0011
Next Token : 181, Posbility: 0.0027
Next Token : 177, Posbility: 0.0051
Next Token : 187, Posbility: 0.0123
Next Token : 179, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  ===, Posbility: 0.0000
Next Token :  then, Posbility: 0.0004
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  0), Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  true, Posbility: 0.0007
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0011
Next Token :  then, Posbility: 0.0011
Next Token : 

, Posbility: 0.0031
Next Token : 
, Posbility: 0.0228
Next Token :  else, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0005
Next Token : 
, Posbility: 0.0028
Next Token :  false, Posbility: 0.0554
Next Token :  true, Posbility: 0.0713
Next Token :  , Posbility: 0.8672
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0030
Next Token : return, Posbility: 0.0056
Next Token : n, Posbility: 0.0194
Next Token : (, Posbility: 0.0282
Next Token : if, Posbility: 0.9336
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  Math, Posbility: 0.0001
Next Token :  not, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : !(, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : (, Posbility: 0.0028
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0003
Next Token :  =, Posbility: 0.0005
Next Token :  ==, Posbility: 0.0012
Next Token :  , Posbility: 0.0013
Next Token :  %, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  18, Posbility: 0.0000
Next Token :  23, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  19, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 183, Posbility: 0.0031
Next Token : 193, Posbility: 0.0054
Next Token : 187, Posbility: 0.0107
Next Token : 191, Posbility: 0.0449
Next Token : 181, Posbility: 0.9023
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !=, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  ===, Posbility: 0.0001
Next Token :  then, Posbility: 0.0001
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0), Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  &&, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  true, Posbility: 0.0009
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0003
Next Token :  , Posbility: 0.0005
Next Token :  then, Posbility: 0.0019
Next Token : 
, Posbility: 0.0059
Next Token :  else, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0001
Next Token : 
, Posbility: 0.0007
Next Token :  false, Posbility: 0.0107
Next Token :  true, Posbility: 0.0256
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0007
Next Token : let, Posbility: 0.0007
Next Token : n, Posbility: 0.0040
Next Token : (, Posbility: 0.0085
Next Token : if, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Math, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : o, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : (, Posbility: 0.0006
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0004
Next Token :  , Posbility: 0.0005
Next Token :  %, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  200, Posbility: 0.0000
Next Token :  238, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  19, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 190, Posbility: 0.0038
Next Token : 223, Posbility: 0.0046
Next Token : 187, Posbility: 0.0067
Next Token : 193, Posbility: 0.0247
Next Token : 191, Posbility: 0.9258
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !=, Posbility: 0.0000
Next Token :  is, Posbility: 0.0000
Next Token :  ===, Posbility: 0.0000
Next Token :  then, Posbility: 0.0001
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  true, Posbility: 0.0013
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0009
Next Token : 

, Posbility: 0.0011
Next Token :  then, Posbility: 0.0027
Next Token : 
, Posbility: 0.0157
Next Token :  else, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0003
Next Token : 
, Posbility: 0.0020
Next Token :  false, Posbility: 0.0400
Next Token :  true, Posbility: 0.0454
Next Token :  , Posbility: 0.9102
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0021
Next Token : return, Posbility: 0.0024
Next Token : n, Posbility: 0.0065
Next Token : (, Posbility: 0.0139
Next Token : if, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  not, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : p, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : m, Posbility: 0.0001
Next Token : (, Posbility: 0.0019
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0002
Next Token :  >=, Posbility: 0.0003
Next Token :  ==, Posbility: 0.0007
Next Token :  , Posbility: 0.0009
Next Token :  %, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  23, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  19, Posbility: 0.0001
Next Token :  200, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 253, Posbility: 0.0012
Next Token : 199, Posbility: 0.0024
Next Token : 223, Posbility: 0.0035
Next Token : 197, Posbility: 0.0095
Next Token : 193, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ==, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  ===, Posbility: 0.0000
Next Token :  then, Posbility: 0.0001
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Then, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  true, Posbility: 0.0005
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0005
Next Token :  then, Posbility: 0.0009
Next Token : 
, Posbility: 0.0032
Next Token :  else, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0001
Next Token : 
, Posbility: 0.0004
Next Token :  false, Posbility: 0.0075
Next Token :  true, Posbility: 0.0139
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0002
Next Token : let, Posbility: 0.0003
Next Token : n, Posbility: 0.0017
Next Token : (, Posbility: 0.0041
Next Token : if, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0001
Next Token : y, Posbility: 0.0005
Next Token : c, Posbility: 0.0006
Next Token : (, Posbility: 0.0022
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :  >=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  %, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  17, Posbility: 0.0000
Next Token :  200, Posbility: 0.0001
Next Token :  19, Posbility: 0.0001
Next Token :  497, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 397, Posbility: 0.0007
Next Token : hab, Posbility: 0.0019
Next Token : 199, Posbility: 0.0084
Next Token : 97, Posbility: 0.0177
Next Token : 197, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  ===, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  then, Posbility: 0.0001
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  0), Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  true, Posbility: 0.0005
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0006
Next Token :  then, Posbility: 0.0012
Next Token : 

, Posbility: 0.0022
Next Token : 
, Posbility: 0.0109
Next Token :  else, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0014
Next Token :  false, Posbility: 0.0250
Next Token :  true, Posbility: 0.0322
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0015
Next Token : return, Posbility: 0.0019
Next Token : (, Posbility: 0.0108
Next Token : n, Posbility: 0.0122
Next Token : if, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0001
Next Token : y, Posbility: 0.0001
Next Token : c, Posbility: 0.0002
Next Token : (, Posbility: 0.0007
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token :  %, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0002
Next Token :  206, Posbility: 0.0003
Next Token :  19, Posbility: 0.0008
Next Token :  200, Posbility: 0.0067
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 201, Posbility: 0.0015
Next Token : 203, Posbility: 0.0035
Next Token : 251, Posbility: 0.0035
Next Token : 211, Posbility: 0.0139
Next Token : 199, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ===, Posbility: 0.0000
Next Token : ==, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  then, Posbility: 0.0000
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0), Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0001
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  true, Posbility: 0.0012
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token : ), Posbility: 0.0014
Next Token :  , Posbility: 0.0024
Next Token : 

, Posbility: 0.0050
Next Token : 
, Posbility: 0.0327
Next Token :  else, Posbility: 0.9531
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0003
Next Token : 
, Posbility: 0.0020
Next Token :  false, Posbility: 0.0444
Next Token :  true, Posbility: 0.0571
Next Token :  , Posbility: 0.8945
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : begin, Posbility: 0.0018
Next Token : return, Posbility: 0.0030
Next Token : (, Posbility: 0.0175
Next Token : n, Posbility: 0.0175
Next Token : if, Posbility: 0.9531
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  not, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : m, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token : c, Posbility: 0.0001
Next Token : (, Posbility: 0.0006
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0003
Next Token :  =, Posbility: 0.0005
Next Token :  , Posbility: 0.0019
Next Token :  ==, Posbility: 0.0019
Next Token :  %, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  21, Posbility: 0.0001
Next Token :  200, Posbility: 0.0001
Next Token :  2011, Posbility: 0.0001
Next Token :  206, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 311, Posbility: 0.0071
Next Token : 203, Posbility: 0.0151
Next Token : 251, Posbility: 0.0194
Next Token : 241, Posbility: 0.0364
Next Token : 211, Posbility: 0.8789
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  ===, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  then, Posbility: 0.0001
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0), Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  true, Posbility: 0.0004
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  then, Posbility: 0.0006
Next Token : 
, Posbility: 0.0013
Next Token :  else, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0005
Next Token :  false, Posbility: 0.0028
Next Token :  true, Posbility: 0.0059
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0002
Next Token : return, Posbility: 0.0003
Next Token : n, Posbility: 0.0017
Next Token : (, Posbility: 0.0052
Next Token : if, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : (, Posbility: 0.0006
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  %, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  238, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  121, Posbility: 0.0000
Next Token :  23, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 219, Posbility: 0.0031
Next Token : 213, Posbility: 0.0065
Next Token : 217, Posbility: 0.0074
Next Token : 227, Posbility: 0.0107
Next Token : 223, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else if n % 223
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ==, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  ===, Posbility: 0.0000
Next Token :  then, Posbility: 0.0002
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else if n % 223 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  0), Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0001
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else if n % 223 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else if n % 223 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  true, Posbility: 0.0003
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else if n % 223 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0002
Next Token :  then, Posbility: 0.0002
Next Token : 

, Posbility: 0.0002
Next Token : 
, Posbility: 0.0019
Next Token :  else, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else if n % 223 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0005
Next Token :  false, Posbility: 0.0059
Next Token :  true, Posbility: 0.0067
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else if n % 223 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0002
Next Token : return, Posbility: 0.0005
Next Token : n, Posbility: 0.0017
Next Token : (, Posbility: 0.0059
Next Token : if, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else if n % 223 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else if n % 223 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0002
Next Token : c, Posbility: 0.0006
Next Token : y, Posbility: 0.0006
Next Token : (, Posbility: 0.0028
Next Token : n, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else if n % 223 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  %, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else if n % 223 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  255), Posbility: 0.0000
Next Token :  27, Posbility: 0.0000
Next Token : 227, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else if n % 223 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 225, Posbility: 0.0027
Next Token : 239, Posbility: 0.0031
Next Token : 241, Posbility: 0.0057
Next Token : 229, Posbility: 0.0155
Next Token : 227, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else if n % 223 == 0 then false else if n % 227
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ==, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  ===, Posbility: 0.0000
Next Token :  then, Posbility: 0.0003
Next Token :  ==, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else if n % 223 == 0 then false else if n % 227 ==
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  0), Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0001
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else if n % 223 == 0 then false else if n % 227 == 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else if n % 223 == 0 then false else if n % 227 == 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  true, Posbility: 0.0003
Next Token :  false, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else if n % 223 == 0 then false else if n % 227 == 0 then false
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0003
Next Token :  then, Posbility: 0.0006
Next Token : 

, Posbility: 0.0007
Next Token : 
, Posbility: 0.0036
Next Token :  else, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else if n % 223 == 0 then false else if n % 227 == 0 then false else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0006
Next Token :  false, Posbility: 0.0058
Next Token :  true, Posbility: 0.0123
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else if n % 223 == 0 then false else if n % 227 == 0 then false else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0008
Next Token : let, Posbility: 0.0009
Next Token : n, Posbility: 0.0046
Next Token : (, Posbility: 0.0067
Next Token : if, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else if n % 223 == 0 then false else if n % 227 == 0 then false else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else if n % 223 == 0 then false else if n % 227 == 0 then false else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0002
Next Token : val, Posbility: 0.0002
Next Token : c, Posbility: 0.0005
Next Token : (, Posbility: 0.0012
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else if n % 223 == 0 then false else if n % 227 == 0 then false else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  %, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else if n % 223 == 0 then false else if n % 227 == 0 then false else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  29, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  238, Posbility: 0.0000
Next Token :  23, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else if n % 223 == 0 then false else if n % 227 == 0 then false else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 251, Posbility: 0.0048
Next Token : 241, Posbility: 0.0078
Next Token : 239, Posbility: 0.0227
Next Token : 233, Posbility: 0.0398
Next Token : 229, Posbility: 0.9062
---------------------------
code:
 (* Write a  function to identify non-prime numbers. *)
let is_prime n =
  let m = n - 1 in
  if m < 2 then true else if n % 2 == 0 then false else if n % 3 == 0 then false else if n % 5 == 0 then false else if n % 7 == 0 then false else if n % 11 == 0 then false else if n % 13 == 0 then false else if n % 17 == 0 then false else if n % 19 == 0 then false else if n % 23 == 0 then false else if n % 29 == 0 then false else if n % 31 == 0 then false else if n % 37 == 0 then false else if n % 41 == 0 then false else if n % 43 == 0 then false else if n % 47 == 0 then false else if n % 53 == 0 then false else if n % 59 == 0 then false else if n % 61 == 0 then false else if n % 67 == 0 then false else if n % 71 == 0 then false else if n % 73 == 0 then false else if n % 79 == 0 then false else if n % 97 == 0 then false else if n % 101 == 0 then false else if n % 103 == 0 then false else if n % 107 == 0 then false else if n % 109 == 0 then false else if n % 113 == 0 then false else if n % 127 == 0 then false else if n % 131 == 0 then false else if n % 137 == 0 then false else if n % 139 == 0 then false else if n % 149 == 0 then false else if n % 151 == 0 then false else if n % 157 == 0 then false else if n % 163 == 0 then false else if n % 167 == 0 then false else if n % 173 == 0 then false else if n % 179 == 0 then false else if n % 181 == 0 then false else if n % 191 == 0 then false else if n % 193 == 0 then false else if n % 197 == 0 then false else if n % 199 == 0 then false else if n % 211 == 0 then false else if n % 223 == 0 then false else if n % 227 == 0 then false else if n % 229
 score:False
Error type: Syntaxerr.Other_continue
---------------------------


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>