code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0078
Next Token :  sum, Posbility: 0.0212
Next Token :  find, Posbility: 0.0398
Next Token :  rec, Posbility: 0.4277
Next Token :  , Posbility: 0.4277
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0132
Next Token : lc, Posbility: 0.0170
Next Token : div, Posbility: 0.1108
Next Token : gc, Posbility: 0.1250
Next Token : common, Posbility: 0.4961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : div, Posbility: 0.0038
Next Token :  , Posbility: 0.0062
Next Token :  =, Posbility: 0.0278
Next Token : Div, Posbility: 0.0278
Next Token : _, Posbility: 0.9219
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : division, Posbility: 0.0009
Next Token : divider, Posbility: 0.0015
Next Token : divide, Posbility: 0.0015
Next Token : factor, Posbility: 0.0040
Next Token : div, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_div
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0009
Next Token : _, Posbility: 0.0024
Next Token : s, Posbility: 0.0066
Next Token :  =, Posbility: 0.0066
Next Token : is, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divis
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ion, Posbility: 0.0007
Next Token : ory, Posbility: 0.0007
Next Token : ories, Posbility: 0.0018
Next Token : or, Posbility: 0.2676
Next Token : ors, Posbility: 0.7266
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0162
Next Token :  a, Posbility: 0.0728
Next Token : _, Posbility: 0.1201
Next Token :  =, Posbility: 0.2539
Next Token :  , Posbility: 0.4199
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : p, Posbility: 0.0129
Next Token : m, Posbility: 0.0311
Next Token : (, Posbility: 0.0581
Next Token : x, Posbility: 0.3789
Next Token : n, Posbility: 0.4863
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0140
Next Token :  a, Posbility: 0.0179
Next Token :  =, Posbility: 0.0488
Next Token :  , Posbility: 0.2812
Next Token : 1, Posbility: 0.5938
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0003
Next Token : _, Posbility: 0.0010
Next Token : n, Posbility: 0.0015
Next Token :  =, Posbility: 0.0179
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : m, Posbility: 0.0025
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : 3, Posbility: 0.0001
Next Token :  =, Posbility: 0.0003
Next Token : 2,, Posbility: 0.0003
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0011
Next Token :   , Posbility: 0.0027
Next Token : 
, Posbility: 0.0039
Next Token :  , Posbility: 0.0226
Next Token :  =, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0048
Next Token : 

, Posbility: 0.0070
Next Token :  match, Posbility: 0.0167
Next Token :  , Posbility: 0.1396
Next Token : 
, Posbility: 0.8047
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0129
Next Token : let, Posbility: 0.0129
Next Token :    , Posbility: 0.0146
Next Token :     , Posbility: 0.1387
Next Token :   , Posbility: 0.8008
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0264
Next Token : List, Posbility: 0.0299
Next Token : if, Posbility: 0.0923
Next Token : match, Posbility: 0.0923
Next Token : let, Posbility: 0.6797
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sum, Posbility: 0.0093
Next Token :  v, Posbility: 0.0120
Next Token :  open, Posbility: 0.0153
Next Token :  , Posbility: 0.3496
Next Token :  rec, Posbility: 0.4492
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sum, Posbility: 0.0320
Next Token :  rec, Posbility: 0.0527
Next Token :  find, Posbility: 0.0679
Next Token :  loop, Posbility: 0.1631
Next Token :  , Posbility: 0.5000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : div, Posbility: 0.0684
Next Token : gc, Posbility: 0.0684
Next Token : aux, Posbility: 0.0776
Next Token : helper, Posbility: 0.1445
Next Token : common, Posbility: 0.1641
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0023
Next Token : (, Posbility: 0.0063
Next Token :  =, Posbility: 0.0219
Next Token :  , Posbility: 0.0280
Next Token : _, Posbility: 0.9258
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : helper, Posbility: 0.0039
Next Token : rec, Posbility: 0.0039
Next Token : divide, Posbility: 0.0039
Next Token : factor, Posbility: 0.0064
Next Token : div, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_div
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0060
Next Token :  , Posbility: 0.0164
Next Token : _, Posbility: 0.0164
Next Token : s, Posbility: 0.0444
Next Token : is, Posbility: 0.8906
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divis
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : on, Posbility: 0.0008
Next Token : ion, Posbility: 0.0008
Next Token : ions, Posbility: 0.0022
Next Token : or, Posbility: 0.1182
Next Token : ors, Posbility: 0.8750
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0157
Next Token : 1, Posbility: 0.0157
Next Token :  =, Posbility: 0.0332
Next Token :  , Posbility: 0.4043
Next Token : _, Posbility: 0.4043
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : of, Posbility: 0.0378
Next Token : iter, Posbility: 0.1030
Next Token : rec, Posbility: 0.1030
Next Token : helper, Posbility: 0.1699
Next Token : aux, Posbility: 0.3164
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  acc, Posbility: 0.0130
Next Token :  l, Posbility: 0.0167
Next Token :  i, Posbility: 0.0276
Next Token :  =, Posbility: 0.0583
Next Token :  , Posbility: 0.8047
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : d, Posbility: 0.0183
Next Token : m, Posbility: 0.0266
Next Token : (, Posbility: 0.0388
Next Token : x, Posbility: 0.0439
Next Token : n, Posbility: 0.7773
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0075
Next Token : 2, Posbility: 0.0125
Next Token :  =, Posbility: 0.0205
Next Token :  , Posbility: 0.0559
Next Token : 1, Posbility: 0.8711
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0020
Next Token :  acc, Posbility: 0.0023
Next Token : _, Posbility: 0.0049
Next Token :  =, Posbility: 0.0461
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0019
Next Token : common, Posbility: 0.0024
Next Token : d, Posbility: 0.0040
Next Token : m, Posbility: 0.0065
Next Token : n, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2., Posbility: 0.0002
Next Token : 3, Posbility: 0.0004
Next Token : 2,, Posbility: 0.0005
Next Token : 1, Posbility: 0.0025
Next Token : 2, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0356
Next Token :  k, Posbility: 0.0356
Next Token :  acc, Posbility: 0.0972
Next Token :  =, Posbility: 0.2637
Next Token :  , Posbility: 0.4355
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : div, Posbility: 0.0674
Next Token : d, Posbility: 0.0762
Next Token : c, Posbility: 0.1260
Next Token : common, Posbility: 0.1260
Next Token : n, Posbility: 0.1621
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0229
Next Token : _, Posbility: 0.0334
Next Token : 1, Posbility: 0.0708
Next Token :  =, Posbility: 0.1030
Next Token : 3, Posbility: 0.6719
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0073
Next Token :  i, Posbility: 0.0106
Next Token :  acc, Posbility: 0.0136
Next Token :  , Posbility: 0.2734
Next Token :  =, Posbility: 0.6562
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0010
Next Token :  match, Posbility: 0.0024
Next Token :  function, Posbility: 0.0027
Next Token :  , Posbility: 0.0258
Next Token : 
, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0014
Next Token :    , Posbility: 0.0082
Next Token :       , Posbility: 0.0093
Next Token :   , Posbility: 0.0325
Next Token :     , Posbility: 0.9492
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0107
Next Token : n, Posbility: 0.0200
Next Token : let, Posbility: 0.0374
Next Token : match, Posbility: 0.1680
Next Token : if, Posbility: 0.7500
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0019
Next Token :   , Posbility: 0.0024
Next Token :  ((, Posbility: 0.0024
Next Token :  not, Posbility: 0.0084
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Div, Posbility: 0.0004
Next Token : let, Posbility: 0.0007
Next Token : Int, Posbility: 0.0011
Next Token : (, Posbility: 0.0471
Next Token : n, Posbility: 0.9453
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0012
Next Token : 3>, Posbility: 0.0034
Next Token : 2, Posbility: 0.0991
Next Token : 3, Posbility: 0.4434
Next Token : 1, Posbility: 0.4434
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0179
Next Token :  <=, Posbility: 0.0486
Next Token :  ==, Posbility: 0.0801
Next Token :  , Posbility: 0.2178
Next Token :  =, Posbility: 0.5938
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  -1, Posbility: 0.0004
Next Token : 0, Posbility: 0.0012
Next Token :  1, Posbility: 0.0242
Next Token :  0, Posbility: 0.4863
Next Token :  , Posbility: 0.4863
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : common, Posbility: 0.0001
Next Token : 3, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : 2, Posbility: 0.0012
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  then, Posbility: 0.0003
Next Token : 3,, Posbility: 0.0005
Next Token : 2,, Posbility: 0.0008
Next Token : 2, Posbility: 0.4375
Next Token : 3, Posbility: 0.5625
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0227
Next Token :  or, Posbility: 0.0292
Next Token :  &&, Posbility: 0.0292
Next Token :  ||, Posbility: 0.1309
Next Token :  then, Posbility: 0.7539
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0072
Next Token :  1, Posbility: 0.0197
Next Token :  0, Posbility: 0.0535
Next Token : 
, Posbility: 0.2393
Next Token :  , Posbility: 0.6523
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0087
Next Token : 
, Posbility: 0.0144
Next Token : (, Posbility: 0.0144
Next Token : return, Posbility: 0.0444
Next Token : n, Posbility: 0.8945
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2,, Posbility: 0.0005
Next Token : 4, Posbility: 0.0006
Next Token : 1, Posbility: 0.0344
Next Token : 3, Posbility: 0.0732
Next Token : 2, Posbility: 0.8906
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0137
Next Token : ;, Posbility: 0.0155
Next Token :  , Posbility: 0.0422
Next Token :  else, Posbility: 0.4004
Next Token : 
, Posbility: 0.5156
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0002
Next Token :   , Posbility: 0.0003
Next Token :       , Posbility: 0.0007
Next Token :    , Posbility: 0.0012
Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : if, Posbility: 0.0010
Next Token : elif, Posbility: 0.0052
Next Token : else, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0006
Next Token :  {, Posbility: 0.0013
Next Token :  match, Posbility: 0.0017
Next Token : 
, Posbility: 0.1060
Next Token :  , Posbility: 0.8867
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0033
Next Token : let, Posbility: 0.0054
Next Token : n, Posbility: 0.0664
Next Token : common, Posbility: 0.1094
Next Token : if, Posbility: 0.8086
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0002
Next Token :  0, Posbility: 0.0003
Next Token :  not, Posbility: 0.0005
Next Token :   , Posbility: 0.0013
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : gc, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : common, Posbility: 0.0002
Next Token : (, Posbility: 0.0036
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4, Posbility: 0.0002
Next Token :  =, Posbility: 0.0003
Next Token : 1, Posbility: 0.0271
Next Token : 3, Posbility: 0.0737
Next Token : 2, Posbility: 0.8984
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0002
Next Token :  ==, Posbility: 0.0006
Next Token :  mod, Posbility: 0.0007
Next Token :  , Posbility: 0.0041
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token : n, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  0, Posbility: 0.0009
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : common, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  then, Posbility: 0.0001
Next Token : 3,, Posbility: 0.0001
Next Token : 4, Posbility: 0.0001
Next Token : 1, Posbility: 0.0003
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  &&, Posbility: 0.0002
Next Token :  , Posbility: 0.0009
Next Token :   , Posbility: 0.0013
Next Token : 
, Posbility: 0.0017
Next Token :  then, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0003
Next Token :   , Posbility: 0.0004
Next Token :  0, Posbility: 0.0006
Next Token : 
, Posbility: 0.0010
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : -, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : common, Posbility: 0.0032
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1,, Posbility: 0.0000
Next Token : 4, Posbility: 0.0000
Next Token : 2, Posbility: 0.0004
Next Token : 3, Posbility: 0.0052
Next Token : 1, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0007
Next Token :  in, Posbility: 0.0012
Next Token :  else, Posbility: 0.0045
Next Token :  , Posbility: 0.0096
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0002
Next Token :   , Posbility: 0.0002
Next Token :         , Posbility: 0.0003
Next Token :    , Posbility: 0.0229
Next Token :     , Posbility: 0.9766
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0002
Next Token : //, Posbility: 0.0002
Next Token : [, Posbility: 0.0002
Next Token : let, Posbility: 0.0002
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0016
Next Token :  match, Posbility: 0.0062
Next Token :  {, Posbility: 0.0079
Next Token : 
, Posbility: 0.2617
Next Token :  , Posbility: 0.7109
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0115
Next Token : let, Posbility: 0.0403
Next Token : common, Posbility: 0.1094
Next Token : n, Posbility: 0.1807
Next Token : if, Posbility: 0.6289
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0019
Next Token :  ((, Posbility: 0.0021
Next Token :  is, Posbility: 0.0031
Next Token :  not, Posbility: 0.0058
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : GC, Posbility: 0.0033
Next Token : Int, Posbility: 0.0043
Next Token : gc, Posbility: 0.0055
Next Token : (, Posbility: 0.0408
Next Token : n, Posbility: 0.9258
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  %, Posbility: 0.0007
Next Token : 1%, Posbility: 0.0046
Next Token : 2, Posbility: 0.0437
Next Token : 3, Posbility: 0.0718
Next Token : 1, Posbility: 0.8750
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0149
Next Token :  >=, Posbility: 0.0216
Next Token :  <=, Posbility: 0.0245
Next Token :  =, Posbility: 0.1602
Next Token :  , Posbility: 0.7148
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : /, Posbility: 0.0129
Next Token : %%, Posbility: 0.0214
Next Token : rem, Posbility: 0.0275
Next Token : >, Posbility: 0.2949
Next Token : <, Posbility: 0.6250
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0009
Next Token :  1, Posbility: 0.0025
Next Token :  0, Posbility: 0.0146
Next Token : >, Posbility: 0.1787
Next Token :  , Posbility: 0.8008
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 5, Posbility: 0.0003
Next Token : (, Posbility: 0.0004
Next Token : 3, Posbility: 0.0010
Next Token : 2, Posbility: 0.0041
Next Token : n, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2), Posbility: 0.0002
Next Token :  then, Posbility: 0.0003
Next Token : 2,, Posbility: 0.0004
Next Token : 3, Posbility: 0.3203
Next Token : 2, Posbility: 0.6797
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0016
Next Token :  , Posbility: 0.0024
Next Token :  and, Posbility: 0.0084
Next Token :  &&, Posbility: 0.0177
Next Token :  then, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0014
Next Token :  1, Posbility: 0.0029
Next Token :  0, Posbility: 0.0167
Next Token : 
, Posbility: 0.2617
Next Token :  , Posbility: 0.7109
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0036
Next Token : (, Posbility: 0.0086
Next Token : 
, Posbility: 0.0234
Next Token : n, Posbility: 0.1729
Next Token : common, Posbility: 0.7773
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : mod, Posbility: 0.0000
Next Token : division, Posbility: 0.0000
Next Token : dom, Posbility: 0.0000
Next Token : dev, Posbility: 0.0000
Next Token : div, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_div
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : iso, Posbility: 0.0000
Next Token :  is, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : is, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divis
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ions, Posbility: 0.0000
Next Token : or, Posbility: 0.0000
Next Token : ories, Posbility: 0.0000
Next Token : ons, Posbility: 0.0000
Next Token : ors, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token :  , Posbility: 0.0110
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : recursive, Posbility: 0.0000
Next Token : helper, Posbility: 0.0000
Next Token : aux, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0005
Next Token : 
, Posbility: 0.0014
Next Token :  ~, Posbility: 0.0031
Next Token : (, Posbility: 0.0291
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.2676
Next Token : n, Posbility: 0.7305
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1,, Posbility: 0.0006
Next Token : 1-1, Posbility: 0.0006
Next Token : 3, Posbility: 0.0564
Next Token : 2, Posbility: 0.2539
Next Token : 1, Posbility: 0.6875
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0004
Next Token : 
, Posbility: 0.0004
Next Token :  +, Posbility: 0.0004
Next Token :  ~, Posbility: 0.0013
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : common, Posbility: 0.0009
Next Token : (, Posbility: 0.0067
Next Token : n, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4, Posbility: 0.0004
Next Token : 1, Posbility: 0.0025
Next Token :  , Posbility: 0.0033
Next Token : 3, Posbility: 0.3750
Next Token : 2, Posbility: 0.6172
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0007
Next Token : ;, Posbility: 0.0007
Next Token :  0, Posbility: 0.0008
Next Token : 
, Posbility: 0.0140
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0001
Next Token : min, Posbility: 0.0001
Next Token : common, Posbility: 0.0009
Next Token : (, Posbility: 0.0179
Next Token : n, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4, Posbility: 0.0005
Next Token : 
, Posbility: 0.0030
Next Token : 2, Posbility: 0.0082
Next Token : 1, Posbility: 0.0369
Next Token : 3, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0153
Next Token :  else, Posbility: 0.0286
Next Token :  +, Posbility: 0.0366
Next Token :  , Posbility: 0.0605
Next Token : 
, Posbility: 0.8359
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0013
Next Token :       , Posbility: 0.0013
Next Token :    , Posbility: 0.0015
Next Token :   , Posbility: 0.0017
Next Token :     , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : //, Posbility: 0.0001
Next Token : |, Posbility: 0.0004
Next Token : elif, Posbility: 0.0004
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0004
Next Token :  {, Posbility: 0.0008
Next Token :   , Posbility: 0.0024
Next Token : 
, Posbility: 0.0157
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0011
Next Token : let, Posbility: 0.0085
Next Token : n, Posbility: 0.0625
Next Token : common, Posbility: 0.4609
Next Token : if, Posbility: 0.4609
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0001
Next Token :  not, Posbility: 0.0004
Next Token :   , Posbility: 0.0007
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : gc, Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token : let, Posbility: 0.0004
Next Token : (, Posbility: 0.0036
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : 4, Posbility: 0.0002
Next Token : 3, Posbility: 0.0144
Next Token : 1, Posbility: 0.3711
Next Token : 2, Posbility: 0.6133
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0002
Next Token :  =, Posbility: 0.0003
Next Token :   , Posbility: 0.0003
Next Token :  <=, Posbility: 0.0015
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : ≤, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : >, Posbility: 0.0179
Next Token : <, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : >, Posbility: 0.0000
Next Token : n, Posbility: 0.0002
Next Token :   , Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : m, Posbility: 0.0000
Next Token : common, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  then, Posbility: 0.0000
Next Token : 1,, Posbility: 0.0001
Next Token : 2, Posbility: 0.0005
Next Token : 3, Posbility: 0.0229
Next Token : 1, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  &&, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :   , Posbility: 0.0008
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  0, Posbility: 0.0001
Next Token :   , Posbility: 0.0005
Next Token : 
, Posbility: 0.0010
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 0.0019
Next Token : common, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Div, Posbility: 0.0000
Next Token : division, Posbility: 0.0000
Next Token : dev, Posbility: 0.0000
Next Token : dom, Posbility: 0.0000
Next Token : div, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_div
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : isa, Posbility: 0.0000
Next Token :  is, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : is, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divis
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ions, Posbility: 0.0000
Next Token : or, Posbility: 0.0000
Next Token : ories, Posbility: 0.0000
Next Token : ons, Posbility: 0.0000
Next Token : ors, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : dummy, Posbility: 0.0000
Next Token : au, Posbility: 0.0000
Next Token : ax, Posbility: 0.0000
Next Token : helper, Posbility: 0.0000
Next Token : aux, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0003
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 2,, Posbility: 0.0000
Next Token : 3, Posbility: 0.0007
Next Token : 1, Posbility: 0.0229
Next Token : 2, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 2, Posbility: 0.0003
Next Token : 3, Posbility: 0.0067
Next Token : 1, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : m, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : common, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3,, Posbility: 0.0000
Next Token : 4, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0004
Next Token :  , Posbility: 0.0016
Next Token :  in, Posbility: 0.0083
Next Token : 

, Posbility: 0.0256
Next Token : 
, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0005
Next Token :         , Posbility: 0.0006
Next Token :    , Posbility: 0.0354
Next Token :   , Posbility: 0.1582
Next Token :     , Posbility: 0.8047
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token : (, Posbility: 0.0003
Next Token : //, Posbility: 0.0004
Next Token : |, Posbility: 0.0013
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fail, Posbility: 0.0052
Next Token :  {, Posbility: 0.0075
Next Token :  0, Posbility: 0.0557
Next Token : 
, Posbility: 0.2207
Next Token :  , Posbility: 0.6797
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0352
Next Token : common, Posbility: 0.0398
Next Token : let, Posbility: 0.0452
Next Token : n, Posbility: 0.3340
Next Token : if, Posbility: 0.4277
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0019
Next Token :  int, Posbility: 0.0021
Next Token :  not, Posbility: 0.0051
Next Token :  ((, Posbility: 0.0051
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0059
Next Token : Int, Posbility: 0.0124
Next Token : gc, Posbility: 0.0140
Next Token : (, Posbility: 0.0713
Next Token : n, Posbility: 0.8672
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1., Posbility: 0.0026
Next Token : 1%, Posbility: 0.0070
Next Token : 3, Posbility: 0.0664
Next Token : 2, Posbility: 0.1094
Next Token : 1, Posbility: 0.8086
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0278
Next Token :  %, Posbility: 0.1099
Next Token :  mod, Posbility: 0.2051
Next Token :  =, Posbility: 0.2324
Next Token :  , Posbility: 0.3379
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0127
Next Token : /, Posbility: 0.0184
Next Token : %%, Posbility: 0.0391
Next Token : >, Posbility: 0.1982
Next Token : <, Posbility: 0.6914
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0027
Next Token :  10, Posbility: 0.0034
Next Token :  0, Posbility: 0.0226
Next Token : >, Posbility: 0.2139
Next Token :  , Posbility: 0.7461
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 5, Posbility: 0.0009
Next Token : 3, Posbility: 0.0015
Next Token : (, Posbility: 0.0031
Next Token : 2, Posbility: 0.0109
Next Token : n, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0003
Next Token :  then, Posbility: 0.0004
Next Token : 2,, Posbility: 0.0005
Next Token : 3, Posbility: 0.3203
Next Token : 2, Posbility: 0.6758
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0112
Next Token :  , Posbility: 0.0209
Next Token :  and, Posbility: 0.0237
Next Token :  &&, Posbility: 0.1201
Next Token :  then, Posbility: 0.7812
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0020
Next Token :  1, Posbility: 0.0149
Next Token :  0, Posbility: 0.0405
Next Token : 
, Posbility: 0.1104
Next Token :  , Posbility: 0.8125
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0157
Next Token : let, Posbility: 0.0179
Next Token : if, Posbility: 0.0203
Next Token : n, Posbility: 0.3164
Next Token : common, Posbility: 0.5938
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : dev, Posbility: 0.0000
Next Token : dom, Posbility: 0.0000
Next Token : factor, Posbility: 0.0000
Next Token : division, Posbility: 0.0000
Next Token : div, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_div
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  is, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : is, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divis
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ions, Posbility: 0.0000
Next Token : ories, Posbility: 0.0000
Next Token : or, Posbility: 0.0001
Next Token : ons, Posbility: 0.0001
Next Token : ors, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0006
Next Token :  , Posbility: 0.0085
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : extra, Posbility: 0.0000
Next Token : small, Posbility: 0.0000
Next Token : recursive, Posbility: 0.0001
Next Token : helper, Posbility: 0.0002
Next Token : aux, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0008
Next Token : 
, Posbility: 0.0010
Next Token : _, Posbility: 0.0022
Next Token : (, Posbility: 0.0067
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token : 2, Posbility: 0.0003
Next Token : common, Posbility: 0.0005
Next Token : (, Posbility: 0.0474
Next Token : n, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4, Posbility: 0.0002
Next Token : 1,, Posbility: 0.0002
Next Token : 3, Posbility: 0.0996
Next Token : 2, Posbility: 0.1641
Next Token : 1, Posbility: 0.7344
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0004
Next Token :  ~, Posbility: 0.0006
Next Token : 
, Posbility: 0.0007
Next Token :  +, Posbility: 0.0010
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token : common, Posbility: 0.0009
Next Token : (, Posbility: 0.0179
Next Token : n, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4, Posbility: 0.0003
Next Token :  , Posbility: 0.0004
Next Token : 1, Posbility: 0.0140
Next Token : 3, Posbility: 0.2188
Next Token : 2, Posbility: 0.7656
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0008
Next Token : 
, Posbility: 0.0022
Next Token :  0, Posbility: 0.0028
Next Token :  1, Posbility: 0.0040
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : min, Posbility: 0.0005
Next Token : 2, Posbility: 0.0011
Next Token : common, Posbility: 0.0049
Next Token : (, Posbility: 0.0596
Next Token : n, Posbility: 0.9297
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4, Posbility: 0.0005
Next Token : 
, Posbility: 0.0014
Next Token : 2, Posbility: 0.0471
Next Token : 1, Posbility: 0.2109
Next Token : 3, Posbility: 0.7383
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0304
Next Token :  else, Posbility: 0.0442
Next Token :  , Posbility: 0.0825
Next Token :  +, Posbility: 0.1982
Next Token : 
, Posbility: 0.6094
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0023
Next Token :         , Posbility: 0.0039
Next Token :    , Posbility: 0.0135
Next Token :   , Posbility: 0.0286
Next Token :     , Posbility: 0.9453
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token : //, Posbility: 0.0003
Next Token : elif, Posbility: 0.0008
Next Token : |, Posbility: 0.0067
Next Token : else, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0030
Next Token :  fail, Posbility: 0.0039
Next Token :  0, Posbility: 0.0049
Next Token : 
, Posbility: 0.0322
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0089
Next Token : assert, Posbility: 0.0240
Next Token : common, Posbility: 0.0654
Next Token : n, Posbility: 0.0840
Next Token : if, Posbility: 0.7930
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0003
Next Token :  int, Posbility: 0.0003
Next Token :   , Posbility: 0.0006
Next Token :  not, Posbility: 0.0006
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : gc, Posbility: 0.0002
Next Token : let, Posbility: 0.0005
Next Token : Int, Posbility: 0.0006
Next Token : (, Posbility: 0.0059
Next Token : n, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0002
Next Token : 4, Posbility: 0.0002
Next Token : 3, Posbility: 0.0168
Next Token : 1, Posbility: 0.2637
Next Token : 2, Posbility: 0.7188
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  %, Posbility: 0.0005
Next Token :  >=, Posbility: 0.0010
Next Token :  <=, Posbility: 0.0031
Next Token :  =, Posbility: 0.0052
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : ≤, Posbility: 0.0000
Next Token : -, Posbility: 0.0001
Next Token : >, Posbility: 0.0086
Next Token : <, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token : >, Posbility: 0.0000
Next Token : n, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : common, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1), Posbility: 0.0000
Next Token : 1,, Posbility: 0.0000
Next Token : 2, Posbility: 0.0003
Next Token : 3, Posbility: 0.0085
Next Token : 1, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token :   , Posbility: 0.0005
Next Token :  &&, Posbility: 0.0005
Next Token :  , Posbility: 0.0006
Next Token :  then, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :   , Posbility: 0.0003
Next Token :  0, Posbility: 0.0006
Next Token : 
, Posbility: 0.0010
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : n, Posbility: 0.0041
Next Token : common, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : divide, Posbility: 0.0000
Next Token : division, Posbility: 0.0000
Next Token : dev, Posbility: 0.0000
Next Token : dom, Posbility: 0.0000
Next Token : div, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_div
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : isa, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  is, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : is, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divis
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ions, Posbility: 0.0000
Next Token : or, Posbility: 0.0000
Next Token : ories, Posbility: 0.0000
Next Token : ons, Posbility: 0.0000
Next Token : ors, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : extra, Posbility: 0.0000
Next Token : au, Posbility: 0.0000
Next Token : ax, Posbility: 0.0000
Next Token : helper, Posbility: 0.0000
Next Token : aux, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 3, Posbility: 0.0001
Next Token : 1, Posbility: 0.0179
Next Token : 2, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 2, Posbility: 0.0004
Next Token : 3, Posbility: 0.0009
Next Token : 1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : common, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 3>, Posbility: 0.0000
Next Token : 3,, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  else, Posbility: 0.0008
Next Token :  , Posbility: 0.0016
Next Token :  in, Posbility: 0.0039
Next Token : 

, Posbility: 0.0417
Next Token : 
, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0005
Next Token : else, Posbility: 0.0005
Next Token :    , Posbility: 0.0184
Next Token :   , Posbility: 0.0933
Next Token :     , Posbility: 0.8867
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0004
Next Token : 
, Posbility: 0.0005
Next Token : //, Posbility: 0.0005
Next Token : |, Posbility: 0.0036
Next Token : else, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  error, Posbility: 0.0188
Next Token :  fail, Posbility: 0.0242
Next Token :  0, Posbility: 0.0957
Next Token : 
, Posbility: 0.1084
Next Token :  , Posbility: 0.7070
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0549
Next Token : raise, Posbility: 0.1025
Next Token : assert, Posbility: 0.1318
Next Token : n, Posbility: 0.1914
Next Token : if, Posbility: 0.4062
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0021
Next Token :  int, Posbility: 0.0024
Next Token :  0, Posbility: 0.0027
Next Token :  not, Posbility: 0.0035
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0018
Next Token : gc, Posbility: 0.0027
Next Token : Int, Posbility: 0.0044
Next Token : (, Posbility: 0.0287
Next Token : n, Posbility: 0.9531
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1., Posbility: 0.0008
Next Token : 1%, Posbility: 0.0011
Next Token : 2, Posbility: 0.0349
Next Token : 3, Posbility: 0.0576
Next Token : 1, Posbility: 0.9023
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  %, Posbility: 0.0277
Next Token :  ==, Posbility: 0.0457
Next Token :  mod, Posbility: 0.0752
Next Token :  , Posbility: 0.3379
Next Token :  =, Posbility: 0.4336
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4, Posbility: 0.0006
Next Token :  10, Posbility: 0.0006
Next Token :  0, Posbility: 0.0894
Next Token :  1, Posbility: 0.2432
Next Token :  , Posbility: 0.6602
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 5, Posbility: 0.0004
Next Token : 3, Posbility: 0.0011
Next Token : (, Posbility: 0.0027
Next Token : 2, Posbility: 0.0258
Next Token : n, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4, Posbility: 0.0009
Next Token : 2,, Posbility: 0.0011
Next Token : 1, Posbility: 0.0018
Next Token : 3, Posbility: 0.2676
Next Token : 2, Posbility: 0.7266
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0024
Next Token :  ||, Posbility: 0.0024
Next Token :  and, Posbility: 0.0031
Next Token :  &&, Posbility: 0.0051
Next Token :  then, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0016
Next Token : 
, Posbility: 0.0118
Next Token :  1, Posbility: 0.0874
Next Token :  0, Posbility: 0.2383
Next Token :  , Posbility: 0.6484
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0038
Next Token : (), Posbility: 0.0070
Next Token : 2, Posbility: 0.0245
Next Token : common, Posbility: 0.0315
Next Token : n, Posbility: 0.9180
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0006
Next Token : 0, Posbility: 0.0006
Next Token : 2, Posbility: 0.0898
Next Token : 3, Posbility: 0.2441
Next Token : 1, Posbility: 0.6641
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0126
Next Token :  else, Posbility: 0.0143
Next Token :  +, Posbility: 0.0162
Next Token :  , Posbility: 0.0500
Next Token : 
, Posbility: 0.8867
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0001
Next Token :       , Posbility: 0.0002
Next Token :    , Posbility: 0.0028
Next Token :   , Posbility: 0.0140
Next Token :     , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : //, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : let, Posbility: 0.0002
Next Token : elif, Posbility: 0.0004
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  error, Posbility: 0.0038
Next Token :  fail, Posbility: 0.0148
Next Token : 
, Posbility: 0.0244
Next Token :  0, Posbility: 0.0244
Next Token :  , Posbility: 0.9180
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : raise, Posbility: 0.0223
Next Token : common, Posbility: 0.0417
Next Token : assert, Posbility: 0.0417
Next Token : n, Posbility: 0.1138
Next Token : if, Posbility: 0.7422
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0002
Next Token :  0, Posbility: 0.0003
Next Token :   , Posbility: 0.0004
Next Token :  not, Posbility: 0.0007
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : gc, Posbility: 0.0002
Next Token : Int, Posbility: 0.0003
Next Token : let, Posbility: 0.0005
Next Token : (, Posbility: 0.0046
Next Token : n, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0003
Next Token : 4, Posbility: 0.0003
Next Token : 3, Posbility: 0.0256
Next Token : 2, Posbility: 0.3125
Next Token : 1, Posbility: 0.6602
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0085
Next Token :  mod, Posbility: 0.0123
Next Token :  +, Posbility: 0.0159
Next Token :  , Posbility: 0.2480
Next Token :  =, Posbility: 0.6758
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  4, Posbility: 0.0001
Next Token :  0, Posbility: 0.0452
Next Token :  1, Posbility: 0.0452
Next Token :  , Posbility: 0.9102
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0001
Next Token : 3, Posbility: 0.0002
Next Token : (, Posbility: 0.0009
Next Token : 2, Posbility: 0.0022
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4, Posbility: 0.0002
Next Token :  then, Posbility: 0.0005
Next Token : 1, Posbility: 0.0223
Next Token : 2, Posbility: 0.0287
Next Token : 3, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0010
Next Token :  and, Posbility: 0.0017
Next Token :  ||, Posbility: 0.0031
Next Token :  &&, Posbility: 0.0040
Next Token :  then, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  -1, Posbility: 0.0002
Next Token : 
, Posbility: 0.0005
Next Token :  1, Posbility: 0.0024
Next Token :  0, Posbility: 0.0109
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0004
Next Token : (, Posbility: 0.0010
Next Token : 2, Posbility: 0.0015
Next Token : common, Posbility: 0.0109
Next Token : n, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4, Posbility: 0.0004
Next Token : 0, Posbility: 0.0006
Next Token : 3, Posbility: 0.0850
Next Token : 1, Posbility: 0.1089
Next Token : 2, Posbility: 0.8047
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0010
Next Token :  , Posbility: 0.0031
Next Token : 

, Posbility: 0.0074
Next Token :  else, Posbility: 0.0109
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :      , Posbility: 0.0001
Next Token :    , Posbility: 0.0022
Next Token :   , Posbility: 0.0124
Next Token :     , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : |, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : let, Posbility: 0.0003
Next Token : elif, Posbility: 0.0003
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0030
Next Token :  error, Posbility: 0.0034
Next Token : 
, Posbility: 0.0120
Next Token :  fail, Posbility: 0.0175
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : raise, Posbility: 0.0096
Next Token : assert, Posbility: 0.0205
Next Token : n, Posbility: 0.0383
Next Token : common, Posbility: 0.0432
Next Token : if, Posbility: 0.8711
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :  not, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : common, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : (, Posbility: 0.0007
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 4, Posbility: 0.0001
Next Token : 1, Posbility: 0.0177
Next Token : 3, Posbility: 0.0177
Next Token : 2, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0001
Next Token :  <=, Posbility: 0.0002
Next Token :  ==, Posbility: 0.0006
Next Token :  , Posbility: 0.0015
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : common, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3,, Posbility: 0.0000
Next Token : 4, Posbility: 0.0002
Next Token : 2, Posbility: 0.0015
Next Token : 1, Posbility: 0.0032
Next Token : 3, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  0, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : common, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0001
Next Token : 4, Posbility: 0.0001
Next Token : 2, Posbility: 0.0024
Next Token : 3, Posbility: 0.0110
Next Token : 1, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0007
Next Token :  , Posbility: 0.0013
Next Token :  in, Posbility: 0.0039
Next Token : 

, Posbility: 0.0258
Next Token : 
, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : else, Posbility: 0.0002
Next Token :         , Posbility: 0.0004
Next Token :    , Posbility: 0.0299
Next Token :   , Posbility: 0.0923
Next Token :     , Posbility: 0.8750
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0010
Next Token : (, Posbility: 0.0021
Next Token : let, Posbility: 0.0045
Next Token : |, Posbility: 0.0075
Next Token : else, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  error, Posbility: 0.0084
Next Token :  0, Posbility: 0.0227
Next Token :  fail, Posbility: 0.0330
Next Token : 
, Posbility: 0.0615
Next Token :  , Posbility: 0.8516
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : raise, Posbility: 0.0265
Next Token : n, Posbility: 0.0386
Next Token : assert, Posbility: 0.0437
Next Token : common, Posbility: 0.0635
Next Token : if, Posbility: 0.7734
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0006
Next Token :  true, Posbility: 0.0006
Next Token :  false, Posbility: 0.0012
Next Token :  not, Posbility: 0.0019
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : gc, Posbility: 0.0006
Next Token : Int, Posbility: 0.0010
Next Token : let, Posbility: 0.0015
Next Token : (, Posbility: 0.0096
Next Token : n, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0004
Next Token :  =, Posbility: 0.0005
Next Token : 2, Posbility: 0.0544
Next Token : 3, Posbility: 0.0898
Next Token : 1, Posbility: 0.8516
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0054
Next Token :  >=, Posbility: 0.0070
Next Token :  +, Posbility: 0.0167
Next Token :  =, Posbility: 0.1406
Next Token :  , Posbility: 0.8086
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ^, Posbility: 0.0003
Next Token : -, Posbility: 0.0012
Next Token : /, Posbility: 0.0022
Next Token : >, Posbility: 0.1187
Next Token : <, Posbility: 0.8750
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  0, Posbility: 0.0004
Next Token : >, Posbility: 0.0067
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : min, Posbility: 0.0000
Next Token : 3, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : 2, Posbility: 0.0004
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0001
Next Token : 2,, Posbility: 0.0002
Next Token : 4, Posbility: 0.0002
Next Token : 3, Posbility: 0.1191
Next Token : 2, Posbility: 0.8789
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0023
Next Token :  ||, Posbility: 0.0049
Next Token :  and, Posbility: 0.0132
Next Token :  &&, Posbility: 0.0461
Next Token :  then, Posbility: 0.9258
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Some, Posbility: 0.0005
Next Token :  1, Posbility: 0.0039
Next Token :  0, Posbility: 0.0073
Next Token : 
, Posbility: 0.0288
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0020
Next Token : let, Posbility: 0.0048
Next Token : if, Posbility: 0.0055
Next Token : n, Posbility: 0.0588
Next Token : common, Posbility: 0.9219
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : dev, Posbility: 0.0000
Next Token : division, Posbility: 0.0000
Next Token : divide, Posbility: 0.0000
Next Token : dom, Posbility: 0.0000
Next Token : div, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_div
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  is, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : is, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divis
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ions, Posbility: 0.0000
Next Token : or, Posbility: 0.0000
Next Token : ories, Posbility: 0.0000
Next Token : ons, Posbility: 0.0000
Next Token : ors, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 0.0036
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : extra, Posbility: 0.0000
Next Token : upper, Posbility: 0.0000
Next Token : small, Posbility: 0.0000
Next Token : helper, Posbility: 0.0000
Next Token : aux, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token : (, Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0041
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1,, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 3, Posbility: 0.0019
Next Token : 2, Posbility: 0.0179
Next Token : 1, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  ~, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : common, Posbility: 0.0000
Next Token : (, Posbility: 0.0005
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 1, Posbility: 0.0003
Next Token : 3, Posbility: 0.0085
Next Token : 2, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token : 
, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : min, Posbility: 0.0001
Next Token : common, Posbility: 0.0001
Next Token : (, Posbility: 0.0025
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4, Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token : 1, Posbility: 0.0012
Next Token : 2, Posbility: 0.0025
Next Token : 3, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0057
Next Token :  *, Posbility: 0.0065
Next Token :  +, Posbility: 0.0084
Next Token :  else, Posbility: 0.0084
Next Token : 
, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :    , Posbility: 0.0017
Next Token :   , Posbility: 0.0046
Next Token :     , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : //, Posbility: 0.0001
Next Token : elif, Posbility: 0.0002
Next Token : |, Posbility: 0.0013
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0007
Next Token :  error, Posbility: 0.0012
Next Token :  fail, Posbility: 0.0017
Next Token : 
, Posbility: 0.0059
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0027
Next Token : assert, Posbility: 0.0073
Next Token : n, Posbility: 0.0136
Next Token : common, Posbility: 0.0175
Next Token : if, Posbility: 0.9531
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  not, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : !(, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : (, Posbility: 0.0007
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4, Posbility: 0.0000
Next Token : 0, Posbility: 0.0001
Next Token : 3, Posbility: 0.0023
Next Token : 1, Posbility: 0.0757
Next Token : 2, Posbility: 0.9219
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  >=, Posbility: 0.0001
Next Token :  <=, Posbility: 0.0004
Next Token :  =, Posbility: 0.0013
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ≤, Posbility: 0.0000
Next Token : >, Posbility: 0.0013
Next Token : <, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : >, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : min, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1,, Posbility: 0.0000
Next Token : 4, Posbility: 0.0000
Next Token : 2, Posbility: 0.0002
Next Token : 3, Posbility: 0.0041
Next Token : 1, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  0, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 0.0010
Next Token : common, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : divide, Posbility: 0.0000
Next Token : division, Posbility: 0.0000
Next Token : dev, Posbility: 0.0000
Next Token : dom, Posbility: 0.0000
Next Token : div, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_div
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : isa, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  is, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : is, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divis
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ions, Posbility: 0.0000
Next Token : or, Posbility: 0.0000
Next Token : ories, Posbility: 0.0000
Next Token : ons, Posbility: 0.0000
Next Token : ors, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : AUX, Posbility: 0.0000
Next Token : dummy, Posbility: 0.0000
Next Token : ax, Posbility: 0.0000
Next Token : helper, Posbility: 0.0000
Next Token : aux, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 3, Posbility: 0.0001
Next Token : 1, Posbility: 0.0067
Next Token : 2, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : 3, Posbility: 0.0009
Next Token : 1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : m, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3], Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 3,, Posbility: 0.0000
Next Token : 3>, Posbility: 0.0001
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  else, Posbility: 0.0004
Next Token :  , Posbility: 0.0005
Next Token :  in, Posbility: 0.0024
Next Token : 

, Posbility: 0.0330
Next Token : 
, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0004
Next Token : else, Posbility: 0.0005
Next Token :    , Posbility: 0.0138
Next Token :   , Posbility: 0.1309
Next Token :     , Posbility: 0.8516
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : //, Posbility: 0.0006
Next Token : 
, Posbility: 0.0010
Next Token : (, Posbility: 0.0013
Next Token : |, Posbility: 0.0052
Next Token : else, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  error, Posbility: 0.0189
Next Token :  fail, Posbility: 0.0215
Next Token : 
, Posbility: 0.0583
Next Token :  0, Posbility: 0.0583
Next Token :  , Posbility: 0.8086
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : common, Posbility: 0.0187
Next Token : raise, Posbility: 0.0349
Next Token : assert, Posbility: 0.0449
Next Token : n, Posbility: 0.0508
Next Token : if, Posbility: 0.7969
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0003
Next Token :  true, Posbility: 0.0003
Next Token :  false, Posbility: 0.0004
Next Token :  not, Posbility: 0.0012
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : gc, Posbility: 0.0002
Next Token : Int, Posbility: 0.0005
Next Token : let, Posbility: 0.0008
Next Token : (, Posbility: 0.0096
Next Token : n, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0002
Next Token :  , Posbility: 0.0005
Next Token : 2, Posbility: 0.0284
Next Token : 3, Posbility: 0.0284
Next Token : 1, Posbility: 0.9414
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0047
Next Token :  <=, Posbility: 0.0053
Next Token :  >=, Posbility: 0.0060
Next Token :  =, Posbility: 0.0737
Next Token :  , Posbility: 0.8984
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ≤, Posbility: 0.0001
Next Token : -, Posbility: 0.0002
Next Token : /, Posbility: 0.0002
Next Token : >, Posbility: 0.0140
Next Token : <, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token : >, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : common, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2), Posbility: 0.0000
Next Token : 4, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token : 3, Posbility: 0.0110
Next Token : 2, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ||, Posbility: 0.0003
Next Token :  and, Posbility: 0.0003
Next Token :  , Posbility: 0.0005
Next Token :  &&, Posbility: 0.0028
Next Token :  then, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0003
Next Token :  1, Posbility: 0.0009
Next Token :  0, Posbility: 0.0025
Next Token : 
, Posbility: 0.0041
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0003
Next Token : let, Posbility: 0.0004
Next Token : (, Posbility: 0.0005
Next Token : n, Posbility: 0.0124
Next Token : common, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : divide, Posbility: 0.0000
Next Token : division, Posbility: 0.0000
Next Token : dev, Posbility: 0.0000
Next Token : dom, Posbility: 0.0000
Next Token : div, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_div
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ise, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  is, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : is, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divis
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ions, Posbility: 0.0000
Next Token : or, Posbility: 0.0000
Next Token : ories, Posbility: 0.0000
Next Token : ons, Posbility: 0.0001
Next Token : ors, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0007
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ax, Posbility: 0.0000
Next Token : extra, Posbility: 0.0000
Next Token : tmp, Posbility: 0.0000
Next Token : helper, Posbility: 0.0000
Next Token : aux, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0003
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 3, Posbility: 0.0007
Next Token : 2, Posbility: 0.0032
Next Token : 1, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : m, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 3, Posbility: 0.0003
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : common, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0010
Next Token :  else, Posbility: 0.0019
Next Token :  in, Posbility: 0.0019
Next Token : 

, Posbility: 0.0228
Next Token : 
, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0002
Next Token : else, Posbility: 0.0011
Next Token :    , Posbility: 0.0082
Next Token :   , Posbility: 0.0417
Next Token :     , Posbility: 0.9492
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0004
Next Token : //, Posbility: 0.0004
Next Token : (, Posbility: 0.0005
Next Token : |, Posbility: 0.0046
Next Token : else, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  error, Posbility: 0.0021
Next Token :  fail, Posbility: 0.0035
Next Token :  0, Posbility: 0.0057
Next Token : 
, Posbility: 0.0138
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0034
Next Token : common, Posbility: 0.0106
Next Token : assert, Posbility: 0.0120
Next Token : n, Posbility: 0.0154
Next Token : if, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  not, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : !(, Posbility: 0.0000
Next Token : common, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : (, Posbility: 0.0015
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : 0, Posbility: 0.0002
Next Token : 3, Posbility: 0.0008
Next Token : 1, Posbility: 0.1191
Next Token : 2, Posbility: 0.8789
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  >=, Posbility: 0.0001
Next Token :  <=, Posbility: 0.0002
Next Token :  =, Posbility: 0.0032
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ≤, Posbility: 0.0000
Next Token : >, Posbility: 0.0004
Next Token : <, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : >, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4, Posbility: 0.0000
Next Token : 1), Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : 3, Posbility: 0.0022
Next Token : 1, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  0, Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 0.0009
Next Token : common, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Div, Posbility: 0.0000
Next Token : division, Posbility: 0.0000
Next Token : dev, Posbility: 0.0000
Next Token : dom, Posbility: 0.0000
Next Token : div, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_div
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : isa, Posbility: 0.0000
Next Token : IS, Posbility: 0.0000
Next Token :  is, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : is, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divis
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ions, Posbility: 0.0000
Next Token : or, Posbility: 0.0000
Next Token : ories, Posbility: 0.0000
Next Token : ons, Posbility: 0.0001
Next Token : ors, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : tmp, Posbility: 0.0000
Next Token : AUX, Posbility: 0.0000
Next Token : helper, Posbility: 0.0000
Next Token : ax, Posbility: 0.0000
Next Token : aux, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : m, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 1, Posbility: 0.0041
Next Token : 2, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : m, Posbility: 0.0000
Next Token : j, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 3, Posbility: 0.0001
Next Token : 1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : m, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3], Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 3,, Posbility: 0.0000
Next Token : 3>, Posbility: 0.0001
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0004
Next Token :  , Posbility: 0.0009
Next Token :  in, Posbility: 0.0038
Next Token : 

, Posbility: 0.0596
Next Token : 
, Posbility: 0.9336
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0004
Next Token : else, Posbility: 0.0021
Next Token :    , Posbility: 0.0258
Next Token :   , Posbility: 0.2158
Next Token :     , Posbility: 0.7539
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0010
Next Token : (, Posbility: 0.0013
Next Token : 
, Posbility: 0.0019
Next Token : |, Posbility: 0.0096
Next Token : else, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  error, Posbility: 0.0166
Next Token :  fail, Posbility: 0.0189
Next Token : 
, Posbility: 0.0581
Next Token :  0, Posbility: 0.0659
Next Token :  , Posbility: 0.8008
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : common, Posbility: 0.0201
Next Token : raise, Posbility: 0.0332
Next Token : assert, Posbility: 0.0547
Next Token : n, Posbility: 0.0796
Next Token : if, Posbility: 0.7539
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  true, Posbility: 0.0004
Next Token :  false, Posbility: 0.0005
Next Token :  0, Posbility: 0.0007
Next Token :  not, Posbility: 0.0012
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : common, Posbility: 0.0002
Next Token : Int, Posbility: 0.0004
Next Token : let, Posbility: 0.0005
Next Token : (, Posbility: 0.0085
Next Token : n, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token :  =, Posbility: 0.0003
Next Token : 2, Posbility: 0.0138
Next Token : 3, Posbility: 0.0177
Next Token : 1, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0043
Next Token :  >=, Posbility: 0.0056
Next Token :  ==, Posbility: 0.0092
Next Token :  , Posbility: 0.1436
Next Token :  =, Posbility: 0.8242
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  1, Posbility: 0.0015
Next Token :  0, Posbility: 0.0032
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : common, Posbility: 0.0000
Next Token : 3, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : 2, Posbility: 0.0005
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2,, Posbility: 0.0001
Next Token : 1, Posbility: 0.0005
Next Token : 4, Posbility: 0.0005
Next Token : 3, Posbility: 0.1826
Next Token : 2, Posbility: 0.8164
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0013
Next Token :  ||, Posbility: 0.0031
Next Token :  and, Posbility: 0.0084
Next Token :  &&, Posbility: 0.0107
Next Token :  then, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0003
Next Token : 
, Posbility: 0.0024
Next Token :  0, Posbility: 0.0176
Next Token :  1, Posbility: 0.0176
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0011
Next Token : (, Posbility: 0.0017
Next Token : common, Posbility: 0.0058
Next Token : 2, Posbility: 0.0075
Next Token : n, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token : 3, Posbility: 0.0064
Next Token : 2, Posbility: 0.0471
Next Token : 1, Posbility: 0.9453
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0057
Next Token :  , Posbility: 0.0064
Next Token :  else, Posbility: 0.0093
Next Token : 

, Posbility: 0.0154
Next Token : 
, Posbility: 0.9531
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0001
Next Token : else, Posbility: 0.0001
Next Token :    , Posbility: 0.0035
Next Token :   , Posbility: 0.0179
Next Token :     , Posbility: 0.9766
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : |, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : elif, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  error, Posbility: 0.0017
Next Token :  0, Posbility: 0.0040
Next Token : 
, Posbility: 0.0051
Next Token :  fail, Posbility: 0.0074
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : raise, Posbility: 0.0034
Next Token : assert, Posbility: 0.0092
Next Token : common, Posbility: 0.0151
Next Token : n, Posbility: 0.0282
Next Token : if, Posbility: 0.9336
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  not, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : common, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : (, Posbility: 0.0009
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0001
Next Token : 0, Posbility: 0.0001
Next Token : 3, Posbility: 0.0023
Next Token : 2, Posbility: 0.0474
Next Token : 1, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0005
Next Token :  <=, Posbility: 0.0008
Next Token :  ==, Posbility: 0.0024
Next Token :  , Posbility: 0.0140
Next Token :  =, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : common, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3,, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token : 4, Posbility: 0.0001
Next Token : 2, Posbility: 0.0025
Next Token : 3, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  &&, Posbility: 0.0001
Next Token :  ||, Posbility: 0.0001
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  0, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : common, Posbility: 0.0006
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4, Posbility: 0.0001
Next Token : 0, Posbility: 0.0001
Next Token : 3, Posbility: 0.0019
Next Token : 1, Posbility: 0.0041
Next Token : 2, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0003
Next Token :  , Posbility: 0.0009
Next Token :  else, Posbility: 0.0022
Next Token : 

, Posbility: 0.0052
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0000
Next Token :      , Posbility: 0.0001
Next Token :    , Posbility: 0.0017
Next Token :   , Posbility: 0.0052
Next Token :     , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : elif, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : |, Posbility: 0.0001
Next Token : let, Posbility: 0.0002
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0010
Next Token :  error, Posbility: 0.0019
Next Token : 
, Posbility: 0.0045
Next Token :  fail, Posbility: 0.0075
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : raise, Posbility: 0.0021
Next Token : assert, Posbility: 0.0039
Next Token : n, Posbility: 0.0094
Next Token : common, Posbility: 0.0225
Next Token : if, Posbility: 0.9570
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  not, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : common, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token : 3, Posbility: 0.0025
Next Token : 1, Posbility: 0.0085
Next Token : 2, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0000
Next Token :  <=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0002
Next Token :  , Posbility: 0.0022
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : common, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3,, Posbility: 0.0000
Next Token : 4, Posbility: 0.0001
Next Token : 2, Posbility: 0.0002
Next Token : 1, Posbility: 0.0015
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : return, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : common, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1), Posbility: 0.0000
Next Token : 1,, Posbility: 0.0001
Next Token : 3, Posbility: 0.0003
Next Token : 2, Posbility: 0.0004
Next Token : 1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0009
Next Token : ;, Posbility: 0.0010
Next Token :  in, Posbility: 0.0074
Next Token : 

, Posbility: 0.0227
Next Token : 
, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : else, Posbility: 0.0005
Next Token :         , Posbility: 0.0005
Next Token :    , Posbility: 0.0532
Next Token :   , Posbility: 0.2100
Next Token :     , Posbility: 0.7344
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0031
Next Token : (, Posbility: 0.0039
Next Token : let, Posbility: 0.0107
Next Token : |, Posbility: 0.0121
Next Token : else, Posbility: 0.9570
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  error, Posbility: 0.0210
Next Token :  0, Posbility: 0.0306
Next Token :  fail, Posbility: 0.0571
Next Token : 
, Posbility: 0.0649
Next Token :  , Posbility: 0.7891
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0291
Next Token : raise, Posbility: 0.0374
Next Token : assert, Posbility: 0.0479
Next Token : common, Posbility: 0.0791
Next Token : if, Posbility: 0.7500
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0004
Next Token :  true, Posbility: 0.0007
Next Token :  false, Posbility: 0.0010
Next Token :  not, Posbility: 0.0013
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : common, Posbility: 0.0002
Next Token : Int, Posbility: 0.0003
Next Token : let, Posbility: 0.0009
Next Token : (, Posbility: 0.0052
Next Token : n, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0004
Next Token :  , Posbility: 0.0009
Next Token : 2, Posbility: 0.0176
Next Token : 3, Posbility: 0.0225
Next Token : 1, Posbility: 0.9570
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0015
Next Token :  <=, Posbility: 0.0015
Next Token :  +, Posbility: 0.0031
Next Token :  =, Posbility: 0.0139
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ≤, Posbility: 0.0001
Next Token : -, Posbility: 0.0002
Next Token : /, Posbility: 0.0002
Next Token : >, Posbility: 0.0229
Next Token : <, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token : n, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : >, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : min, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2,, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 4, Posbility: 0.0000
Next Token : 3, Posbility: 0.0052
Next Token : 2, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ||, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token :  and, Posbility: 0.0003
Next Token :  &&, Posbility: 0.0012
Next Token :  then, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  1, Posbility: 0.0005
Next Token :  0, Posbility: 0.0009
Next Token : 
, Posbility: 0.0041
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0004
Next Token : if, Posbility: 0.0004
Next Token : let, Posbility: 0.0007
Next Token : n, Posbility: 0.0124
Next Token : common, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : divide, Posbility: 0.0000
Next Token : division, Posbility: 0.0000
Next Token : dev, Posbility: 0.0000
Next Token : dom, Posbility: 0.0000
Next Token : div, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_div
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : in, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  is, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : is, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divis
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ions, Posbility: 0.0000
Next Token : or, Posbility: 0.0000
Next Token : ories, Posbility: 0.0000
Next Token : ons, Posbility: 0.0000
Next Token : ors, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0013
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : tmp, Posbility: 0.0000
Next Token : ax, Posbility: 0.0000
Next Token : extra, Posbility: 0.0000
Next Token : helper, Posbility: 0.0000
Next Token : aux, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0003
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1,, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 3, Posbility: 0.0001
Next Token : 2, Posbility: 0.0012
Next Token : 1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2,, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 3, Posbility: 0.0002
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : m, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : common, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : 4, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0005
Next Token :  , Posbility: 0.0008
Next Token :  else, Posbility: 0.0022
Next Token : 

, Posbility: 0.0036
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0001
Next Token : else, Posbility: 0.0002
Next Token :    , Posbility: 0.0022
Next Token :   , Posbility: 0.0046
Next Token :     , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : //, Posbility: 0.0001
Next Token : elif, Posbility: 0.0001
Next Token : |, Posbility: 0.0003
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0007
Next Token :  error, Posbility: 0.0009
Next Token :  fail, Posbility: 0.0012
Next Token : 
, Posbility: 0.0036
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0024
Next Token : assert, Posbility: 0.0027
Next Token : n, Posbility: 0.0066
Next Token : common, Posbility: 0.0096
Next Token : if, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : !(, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : (, Posbility: 0.0003
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 3, Posbility: 0.0005
Next Token : 1, Posbility: 0.0052
Next Token : 2, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  >=, Posbility: 0.0000
Next Token :  <=, Posbility: 0.0001
Next Token :  =, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ≤, Posbility: 0.0000
Next Token : >, Posbility: 0.0003
Next Token : <, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : >, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 4, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 3, Posbility: 0.0005
Next Token : 1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  error, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : comm, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 0.0007
Next Token : common, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : divide, Posbility: 0.0000
Next Token : division, Posbility: 0.0000
Next Token : dev, Posbility: 0.0000
Next Token : dom, Posbility: 0.0000
Next Token : div, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_div
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : IS, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  is, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : is, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divis
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ord, Posbility: 0.0000
Next Token : or, Posbility: 0.0000
Next Token : ories, Posbility: 0.0000
Next Token : ons, Posbility: 0.0001
Next Token : ors, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : AUX, Posbility: 0.0000
Next Token : dummy, Posbility: 0.0000
Next Token : helper, Posbility: 0.0000
Next Token : ax, Posbility: 0.0000
Next Token : aux, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 1, Posbility: 0.0015
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : j, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 3, Posbility: 0.0001
Next Token : 1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 3], Posbility: 0.0000
Next Token : 3,, Posbility: 0.0000
Next Token : 3>, Posbility: 0.0001
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  else, Posbility: 0.0003
Next Token :  , Posbility: 0.0004
Next Token :  in, Posbility: 0.0045
Next Token : 

, Posbility: 0.0291
Next Token : 
, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0004
Next Token : else, Posbility: 0.0011
Next Token :    , Posbility: 0.0150
Next Token :   , Posbility: 0.1611
Next Token :     , Posbility: 0.8203
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0017
Next Token : let, Posbility: 0.0019
Next Token : (, Posbility: 0.0028
Next Token : |, Posbility: 0.0052
Next Token : else, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  error, Posbility: 0.0197
Next Token :  fail, Posbility: 0.0223
Next Token : 
, Posbility: 0.0369
Next Token :  0, Posbility: 0.0474
Next Token :  , Posbility: 0.8398
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : common, Posbility: 0.0155
Next Token : assert, Posbility: 0.0255
Next Token : raise, Posbility: 0.0289
Next Token : n, Posbility: 0.0371
Next Token : if, Posbility: 0.8438
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0003
Next Token :  true, Posbility: 0.0003
Next Token :  false, Posbility: 0.0003
Next Token :  not, Posbility: 0.0010
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : common, Posbility: 0.0001
Next Token : Int, Posbility: 0.0002
Next Token : let, Posbility: 0.0004
Next Token : (, Posbility: 0.0041
Next Token : n, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0003
Next Token :  , Posbility: 0.0007
Next Token : 2, Posbility: 0.0138
Next Token : 3, Posbility: 0.0177
Next Token : 1, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0014
Next Token :  <=, Posbility: 0.0027
Next Token :  >=, Posbility: 0.0034
Next Token :  =, Posbility: 0.0327
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ≤, Posbility: 0.0000
Next Token : /, Posbility: 0.0001
Next Token : -, Posbility: 0.0001
Next Token : >, Posbility: 0.0076
Next Token : <, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : >, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 5, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 4, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 3, Posbility: 0.0025
Next Token : 2, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  ?, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  &&, Posbility: 0.0005
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0001
Next Token :  1, Posbility: 0.0004
Next Token : 
, Posbility: 0.0012
Next Token :  0, Posbility: 0.0012
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : n, Posbility: 0.0059
Next Token : common, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : divide, Posbility: 0.0000
Next Token : dev, Posbility: 0.0000
Next Token : division, Posbility: 0.0000
Next Token : dom, Posbility: 0.0000
Next Token : div, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_div
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : IS, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  is, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : is, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divis
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ions, Posbility: 0.0000
Next Token : or, Posbility: 0.0000
Next Token : ories, Posbility: 0.0000
Next Token : ons, Posbility: 0.0001
Next Token : ors, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : tmp, Posbility: 0.0000
Next Token : ax, Posbility: 0.0000
Next Token : extra, Posbility: 0.0000
Next Token : helper, Posbility: 0.0000
Next Token : aux, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 3, Posbility: 0.0002
Next Token : 2, Posbility: 0.0008
Next Token : 1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2,, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : common, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 4, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0006
Next Token :  else, Posbility: 0.0010
Next Token :  in, Posbility: 0.0027
Next Token : 

, Posbility: 0.0201
Next Token : 
, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0002
Next Token : else, Posbility: 0.0016
Next Token :    , Posbility: 0.0104
Next Token :   , Posbility: 0.0469
Next Token :     , Posbility: 0.9375
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0005
Next Token : (, Posbility: 0.0008
Next Token : let, Posbility: 0.0008
Next Token : |, Posbility: 0.0025
Next Token : else, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  error, Posbility: 0.0019
Next Token :  fail, Posbility: 0.0035
Next Token :  0, Posbility: 0.0051
Next Token : 
, Posbility: 0.0095
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0039
Next Token : assert, Posbility: 0.0057
Next Token : common, Posbility: 0.0083
Next Token : n, Posbility: 0.0137
Next Token : if, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  not, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : !(, Posbility: 0.0000
Next Token : common, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : (, Posbility: 0.0010
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0002
Next Token : 0, Posbility: 0.0002
Next Token : 3, Posbility: 0.0004
Next Token : 1, Posbility: 0.0229
Next Token : 2, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  >=, Posbility: 0.0000
Next Token :  <=, Posbility: 0.0001
Next Token :  =, Posbility: 0.0015
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ≤, Posbility: 0.0000
Next Token : >, Posbility: 0.0002
Next Token : <, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : >, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 1), Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : 3, Posbility: 0.0004
Next Token : 1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  &&, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  0, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : comm, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 0.0004
Next Token : common, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Div, Posbility: 0.0000
Next Token : division, Posbility: 0.0000
Next Token : dev, Posbility: 0.0000
Next Token : dom, Posbility: 0.0000
Next Token : div, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_div
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : us, Posbility: 0.0000
Next Token : IS, Posbility: 0.0000
Next Token :  is, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : is, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divis
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ions, Posbility: 0.0000
Next Token : or, Posbility: 0.0000
Next Token : ories, Posbility: 0.0000
Next Token : ons, Posbility: 0.0002
Next Token : ors, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : tmp, Posbility: 0.0000
Next Token : helper, Posbility: 0.0000
Next Token : AUX, Posbility: 0.0000
Next Token : ax, Posbility: 0.0000
Next Token : aux, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : m, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 1, Posbility: 0.0015
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : m, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : j, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : m, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 3], Posbility: 0.0000
Next Token : 3,, Posbility: 0.0001
Next Token : 3>, Posbility: 0.0001
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0003
Next Token :  , Posbility: 0.0007
Next Token :  in, Posbility: 0.0044
Next Token : 

, Posbility: 0.0371
Next Token : 
, Posbility: 0.9531
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3

 score:False
Error type: noerr
---------------------------
Next Token :         , Posbility: 0.0004
Next Token : else, Posbility: 0.0020
Next Token :    , Posbility: 0.0271
Next Token :   , Posbility: 0.1768
Next Token :     , Posbility: 0.7930
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0010
Next Token : 
, Posbility: 0.0012
Next Token : (, Posbility: 0.0013
Next Token : |, Posbility: 0.0031
Next Token : else, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else
 score:False
Error type: noerr
---------------------------
Next Token :  error, Posbility: 0.0116
Next Token :  fail, Posbility: 0.0168
Next Token : 
, Posbility: 0.0459
Next Token :  0, Posbility: 0.0669
Next Token :  , Posbility: 0.8125
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else 
 score:False
Error type: noerr
---------------------------
Next Token : common, Posbility: 0.0192
Next Token : raise, Posbility: 0.0280
Next Token : assert, Posbility: 0.0280
Next Token : n, Posbility: 0.0591
Next Token : if, Posbility: 0.8164
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if
 score:False
Error type: noerr
---------------------------
Next Token :  true, Posbility: 0.0003
Next Token : 
, Posbility: 0.0003
Next Token :  0, Posbility: 0.0003
Next Token :  not, Posbility: 0.0009
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if 
 score:False
Error type: noerr
---------------------------
Next Token : common, Posbility: 0.0001
Next Token : Int, Posbility: 0.0001
Next Token : let, Posbility: 0.0003
Next Token : (, Posbility: 0.0041
Next Token : n, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0004
Next Token :  =, Posbility: 0.0004
Next Token : 2, Posbility: 0.0085
Next Token : 3, Posbility: 0.0109
Next Token : 1, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1
 score:False
Error type: noerr
---------------------------
Next Token :  <=, Posbility: 0.0035
Next Token :  >=, Posbility: 0.0045
Next Token :  ==, Posbility: 0.0045
Next Token :  , Posbility: 0.1167
Next Token :  =, Posbility: 0.8633
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 =
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :  1, Posbility: 0.0005
Next Token :  0, Posbility: 0.0009
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = 
 score:False
Error type: noerr
---------------------------
Next Token : common, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n
 score:False
Error type: noerr
---------------------------
Next Token : 5, Posbility: 0.0000
Next Token : 4, Posbility: 0.0002
Next Token : 1, Posbility: 0.0003
Next Token : 3, Posbility: 0.0140
Next Token : 2, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0004
Next Token :  ||, Posbility: 0.0008
Next Token :  and, Posbility: 0.0015
Next Token :  &&, Posbility: 0.0019
Next Token :  then, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0002
Next Token : 
, Posbility: 0.0009
Next Token :  0, Posbility: 0.0040
Next Token :  1, Posbility: 0.0067
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then 
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0004
Next Token : (, Posbility: 0.0010
Next Token : common, Posbility: 0.0028
Next Token : 2, Posbility: 0.0032
Next Token : n, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n
 score:False
Error type: noerr
---------------------------
Next Token : 0, Posbility: 0.0001
Next Token : 
, Posbility: 0.0004
Next Token : 3, Posbility: 0.0015
Next Token : 2, Posbility: 0.0179
Next Token : 1, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0012
Next Token :  , Posbility: 0.0022
Next Token :  else, Posbility: 0.0028
Next Token : 

, Posbility: 0.0046
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1

 score:False
Error type: noerr
---------------------------
Next Token : 	, Posbility: 0.0000
Next Token : else, Posbility: 0.0001
Next Token :    , Posbility: 0.0013
Next Token :   , Posbility: 0.0036
Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token : elif, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else
 score:False
Error type: noerr
---------------------------
Next Token :  error, Posbility: 0.0008
Next Token :  0, Posbility: 0.0015
Next Token : 
, Posbility: 0.0022
Next Token :  fail, Posbility: 0.0028
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else 
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0017
Next Token : assert, Posbility: 0.0021
Next Token : common, Posbility: 0.0074
Next Token : n, Posbility: 0.0108
Next Token : if, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  not, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if 
 score:False
Error type: noerr
---------------------------
Next Token : common, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : (, Posbility: 0.0004
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n
 score:False
Error type: noerr
---------------------------
Next Token : 0, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token : 3, Posbility: 0.0007
Next Token : 2, Posbility: 0.0110
Next Token : 1, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1
 score:False
Error type: noerr
---------------------------
Next Token :  >=, Posbility: 0.0001
Next Token :  <=, Posbility: 0.0002
Next Token :  ==, Posbility: 0.0007
Next Token :  , Posbility: 0.0036
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 =
 score:False
Error type: noerr
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = 
 score:False
Error type: noerr
---------------------------
Next Token : common, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n
 score:False
Error type: noerr
---------------------------
Next Token : 3,, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 4, Posbility: 0.0001
Next Token : 2, Posbility: 0.0007
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  ||, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then
 score:False
Error type: noerr
---------------------------
Next Token : n, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then 
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : common, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n
 score:False
Error type: noerr
---------------------------
Next Token : 4, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 3, Posbility: 0.0006
Next Token : 1, Posbility: 0.0009
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token :  else, Posbility: 0.0008
Next Token : 

, Posbility: 0.0032
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2

 score:False
Error type: noerr
---------------------------
Next Token : 	, Posbility: 0.0000
Next Token :      , Posbility: 0.0000
Next Token :    , Posbility: 0.0015
Next Token :   , Posbility: 0.0019
Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0003
Next Token :  error, Posbility: 0.0007
Next Token : 
, Posbility: 0.0012
Next Token :  fail, Posbility: 0.0022
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else 
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0008
Next Token : assert, Posbility: 0.0010
Next Token : n, Posbility: 0.0035
Next Token : common, Posbility: 0.0109
Next Token : if, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if 
 score:False
Error type: noerr
---------------------------
Next Token : !(, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : 3, Posbility: 0.0006
Next Token : 1, Posbility: 0.0025
Next Token : 2, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2
 score:False
Error type: noerr
---------------------------
Next Token :  >=, Posbility: 0.0000
Next Token :  <=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0008
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 =
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = 
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n
 score:False
Error type: noerr
---------------------------
Next Token : 3,, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : 4, Posbility: 0.0001
Next Token : 1, Posbility: 0.0003
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then
 score:False
Error type: noerr
---------------------------
Next Token : n, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then 
 score:False
Error type: noerr
---------------------------
Next Token : return, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : common, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n
 score:False
Error type: noerr
---------------------------
Next Token : 1,, Posbility: 0.0001
Next Token : 1), Posbility: 0.0001
Next Token : 3, Posbility: 0.0001
Next Token : 2, Posbility: 0.0003
Next Token : 1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0008
Next Token :   , Posbility: 0.0009
Next Token :  in, Posbility: 0.0045
Next Token : 

, Posbility: 0.0258
Next Token : 
, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1

 score:False
Error type: noerr
---------------------------
Next Token :         , Posbility: 0.0004
Next Token : else, Posbility: 0.0009
Next Token :    , Posbility: 0.0439
Next Token :   , Posbility: 0.1738
Next Token :     , Posbility: 0.7773
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0027
Next Token : (, Posbility: 0.0034
Next Token : |, Posbility: 0.0120
Next Token : let, Posbility: 0.0154
Next Token : else, Posbility: 0.9531
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0156
Next Token :  error, Posbility: 0.0177
Next Token : 
, Posbility: 0.0293
Next Token :  fail, Posbility: 0.0483
Next Token :  , Posbility: 0.8555
---------------------------
code:
 (* Write a  function to find the sum of common divisors of two given numbers. *)
let common_divisors n1 n2 =
  let rec common_divisors_aux n1 n2 n3 =
    if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 < n2 then common_divisors_aux n1 n2 n3
    else if n2 < n1 then common_divisors_aux n2 n1 n3
    else if n1 = n2 then n1
    else if n1 = n3 then n2
    else if n2 = n3 then n1
    else 
 score:False


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>