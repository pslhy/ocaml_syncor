code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  char, Posbility: 0.0310
Next Token :  make, Posbility: 0.0310
Next Token :  find, Posbility: 0.0742
Next Token :  , Posbility: 0.2949
Next Token :  rec, Posbility: 0.3789
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  count, Posbility: 0.0289
Next Token :  loop, Posbility: 0.0327
Next Token :  char, Posbility: 0.0476
Next Token :  find, Posbility: 0.1670
Next Token :  , Posbility: 0.4531
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fi, Posbility: 0.0227
Next Token : ascii, Posbility: 0.0292
Next Token : alphabet, Posbility: 0.0330
Next Token : f, Posbility: 0.1152
Next Token : add, Posbility: 0.4023
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : char, Posbility: 0.0186
Next Token : 26, Posbility: 0.0347
Next Token :  , Posbility: 0.0574
Next Token :  =, Posbility: 0.0574
Next Token : _, Posbility: 0.6992
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : value, Posbility: 0.0277
Next Token : mod, Posbility: 0.0356
Next Token : to, Posbility: 0.0457
Next Token : ascii, Posbility: 0.2324
Next Token : char, Posbility: 0.3379
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0277
Next Token : _, Posbility: 0.1592
Next Token : s, Posbility: 0.2051
Next Token :  =, Posbility: 0.2051
Next Token :  , Posbility: 0.3379
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0806
Next Token : x, Posbility: 0.0806
Next Token : c, Posbility: 0.0806
Next Token : (, Posbility: 0.1035
Next Token : s, Posbility: 0.4648
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0162
Next Token :  acc, Posbility: 0.0503
Next Token :  i, Posbility: 0.0645
Next Token :  , Posbility: 0.1982
Next Token :  =, Posbility: 0.5391
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0024
Next Token :  function, Posbility: 0.0045
Next Token :  match, Posbility: 0.0488
Next Token :  , Posbility: 0.0708
Next Token : 
, Posbility: 0.8633
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0045
Next Token :    , Posbility: 0.0083
Next Token : 	, Posbility: 0.0095
Next Token :     , Posbility: 0.1147
Next Token :   , Posbility: 0.8477
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0074
Next Token : List, Posbility: 0.0084
Next Token : let, Posbility: 0.1494
Next Token : if, Posbility: 0.2793
Next Token : match, Posbility: 0.5234
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  string, Posbility: 0.0011
Next Token :  S, Posbility: 0.0015
Next Token :  !, Posbility: 0.0051
Next Token :  , Posbility: 0.4590
Next Token :  String, Posbility: 0.5195
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Scanner, Posbility: 0.0002
Next Token : (, Posbility: 0.0005
Next Token : _, Posbility: 0.0025
Next Token : s, Posbility: 0.0025
Next Token : ., Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : sub, Posbility: 0.0315
Next Token : find, Posbility: 0.0356
Next Token : iter, Posbility: 0.0586
Next Token : get, Posbility: 0.2969
Next Token : length, Posbility: 0.2969
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : With, Posbility: 0.0005
Next Token : _, Posbility: 0.0012
Next Token :  with, Posbility: 0.0052
Next Token : (, Posbility: 0.0059
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : >, Posbility: 0.0000
Next Token : <, Posbility: 0.0001
Next Token : ^, Posbility: 0.0001
Next Token : (, Posbility: 0.0022
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0003
Next Token :  =, Posbility: 0.0003
Next Token : ,, Posbility: 0.0009
Next Token :  , Posbility: 0.0025
Next Token :  with, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0005
Next Token : 

, Posbility: 0.0006
Next Token :   , Posbility: 0.0009
Next Token :  , Posbility: 0.0017
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0003
Next Token :       , Posbility: 0.0014
Next Token :    , Posbility: 0.0014
Next Token :     , Posbility: 0.0420
Next Token :   , Posbility: 0.9531
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : [], Posbility: 0.0002
Next Token : [, Posbility: 0.0002
Next Token : 0, Posbility: 0.0179
Next Token : |, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0009
Next Token :  1, Posbility: 0.0066
Next Token :  , Posbility: 0.0066
Next Token :  [], Posbility: 0.0066
Next Token :  0, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0095
Next Token :   , Posbility: 0.0156
Next Token :  |, Posbility: 0.0259
Next Token :  =>, Posbility: 0.0703
Next Token :  , Posbility: 0.8555
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : ::, Posbility: 0.0004
Next Token : →, Posbility: 0.0004
Next Token :  =>, Posbility: 0.0004
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0525
Next Token :  '', Posbility: 0.0864
Next Token :  ', Posbility: 0.0864
Next Token :  "", Posbility: 0.0864
Next Token :  , Posbility: 0.3887
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (', Posbility: 0.0505
Next Token : Char, Posbility: 0.0505
Next Token : return, Posbility: 0.0574
Next Token : raise, Posbility: 0.0649
Next Token : s, Posbility: 0.5430
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
 score:False
Error type: noerr
---------------------------
Next Token : [0], Posbility: 0.0043
Next Token : ., Posbility: 0.0049
Next Token :  |, Posbility: 0.0103
Next Token :  , Posbility: 0.0247
Next Token : 
, Posbility: 0.9258
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : ;, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0074
Next Token :  len, Posbility: 0.0200
Next Token :  i, Posbility: 0.1484
Next Token :  , Posbility: 0.4023
Next Token :  1, Posbility: 0.4023
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  as, Posbility: 0.0006
Next Token :  when, Posbility: 0.0025
Next Token :  =>, Posbility: 0.0031
Next Token :  |, Posbility: 0.0031
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : if, Posbility: 0.0003
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  string, Posbility: 0.0111
Next Token :  char, Posbility: 0.0388
Next Token : 
, Posbility: 0.0820
Next Token :  String, Posbility: 0.2227
Next Token :  , Posbility: 0.6055
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0210
Next Token : chr, Posbility: 0.0305
Next Token : (, Posbility: 0.1758
Next Token : s, Posbility: 0.2256
Next Token : Char, Posbility: 0.4199
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0002
Next Token : 32, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token : (, Posbility: 0.0006
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : code, Posbility: 0.0361
Next Token : of, Posbility: 0.0361
Next Token : add, Posbility: 0.0464
Next Token : chr, Posbility: 0.2676
Next Token : to, Posbility: 0.4395
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Lower, Posbility: 0.0000
Next Token : string, Posbility: 0.0001
Next Token : Upper, Posbility: 0.0001
Next Token : Char, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_
 score:False
Error type: noerr
---------------------------
Next Token : int, Posbility: 0.0078
Next Token : upper, Posbility: 0.0078
Next Token : ascii, Posbility: 0.0165
Next Token : char, Posbility: 0.0574
Next Token : string, Posbility: 0.8984
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0200
Next Token :  ((, Posbility: 0.0200
Next Token : (, Posbility: 0.0330
Next Token :  26, Posbility: 0.0330
Next Token :  , Posbility: 0.8516
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string 
 score:False
Error type: noerr
---------------------------
Next Token : (', Posbility: 0.0009
Next Token : Int, Posbility: 0.0018
Next Token : Char, Posbility: 0.0281
Next Token : s, Posbility: 0.0320
Next Token : (, Posbility: 0.9297
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : Int, Posbility: 0.0233
Next Token : char, Posbility: 0.0299
Next Token : ord, Posbility: 0.0383
Next Token : String, Posbility: 0.1182
Next Token : Char, Posbility: 0.6797
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 32, Posbility: 0.0000
Next Token : Code, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ascii, Posbility: 0.0349
Next Token : of, Posbility: 0.0737
Next Token : to, Posbility: 0.1221
Next Token : code, Posbility: 0.1562
Next Token : add, Posbility: 0.4258
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : s, Posbility: 0.0025
Next Token :  ', Posbility: 0.0164
Next Token :  26, Posbility: 0.0571
Next Token : _, Posbility: 0.1992
Next Token :  , Posbility: 0.6953
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (', Posbility: 0.0103
Next Token : 97, Posbility: 0.0103
Next Token : Char, Posbility: 0.1250
Next Token : s, Posbility: 0.1816
Next Token : (, Posbility: 0.6328
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : Int, Posbility: 0.0137
Next Token : char, Posbility: 0.0226
Next Token : ord, Posbility: 0.1011
Next Token : String, Posbility: 0.3125
Next Token : Char, Posbility: 0.5156
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 32, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : Code, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : char, Posbility: 0.0208
Next Token : ascii, Posbility: 0.0640
Next Token : code, Posbility: 0.1055
Next Token : of, Posbility: 0.1348
Next Token : to, Posbility: 0.6055
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  char, Posbility: 0.0000
Next Token : int, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : number, Posbility: 0.0249
Next Token : ascii, Posbility: 0.0527
Next Token : string, Posbility: 0.0869
Next Token : char, Posbility: 0.3047
Next Token : int, Posbility: 0.5000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : s, Posbility: 0.0005
Next Token :  ', Posbility: 0.0010
Next Token : _, Posbility: 0.0022
Next Token : 32, Posbility: 0.0067
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ^, Posbility: 0.0003
Next Token : Character, Posbility: 0.0003
Next Token : Char, Posbility: 0.0299
Next Token : (, Posbility: 0.0918
Next Token : s, Posbility: 0.8750
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : )), Posbility: 0.0229
Next Token :  @, Posbility: 0.0378
Next Token :  , Posbility: 0.0625
Next Token : [0]), Posbility: 0.0625
Next Token : ), Posbility: 0.7617
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s)
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  25, Posbility: 0.0085
Next Token :  1), Posbility: 0.0140
Next Token :  , Posbility: 0.0378
Next Token :  ', Posbility: 0.0378
Next Token :  26, Posbility: 0.8633
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : )), Posbility: 0.0013
Next Token : )., Posbility: 0.0031
Next Token : );, Posbility: 0.0074
Next Token :  , Posbility: 0.0108
Next Token : ), Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0031
Next Token :  ++, Posbility: 0.0084
Next Token :  , Posbility: 0.0258
Next Token : 

, Posbility: 0.1016
Next Token : 
, Posbility: 0.8516
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0009
Next Token : 

, Posbility: 0.0011
Next Token : end, Posbility: 0.0033
Next Token : let, Posbility: 0.0167
Next Token :   , Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  
 score:False
Error type: noerr
---------------------------
Next Token : in, Posbility: 0.0001
Next Token : let, Posbility: 0.0002
Next Token : (, Posbility: 0.0006
Next Token : else, Posbility: 0.0006
Next Token : |, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  N, Posbility: 0.0034
Next Token :  k, Posbility: 0.0039
Next Token :  len, Posbility: 0.0093
Next Token :  i, Posbility: 0.0222
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0091
Next Token : x, Posbility: 0.0317
Next Token : 2, Posbility: 0.0408
Next Token : n, Posbility: 0.2656
Next Token : _, Posbility: 0.6367
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  then, Posbility: 0.0013
Next Token :  when, Posbility: 0.0040
Next Token :   , Posbility: 0.0045
Next Token :  =>, Posbility: 0.0096
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ::, Posbility: 0.0001
Next Token : →, Posbility: 0.0001
Next Token :  =>, Posbility: 0.0004
Next Token : if, Posbility: 0.0009
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0039
Next Token :  ", Posbility: 0.0050
Next Token :  String, Posbility: 0.0610
Next Token : 
, Posbility: 0.4512
Next Token :  , Posbility: 0.4512
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0276
Next Token : (, Posbility: 0.0312
Next Token : s, Posbility: 0.0312
Next Token : add, Posbility: 0.3359
Next Token : let, Posbility: 0.4883
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0237
Next Token :  chars, Posbility: 0.0237
Next Token :  new, Posbility: 0.0269
Next Token :  rec, Posbility: 0.1357
Next Token :  , Posbility: 0.5391
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : r, Posbility: 0.0447
Next Token : n, Posbility: 0.0649
Next Token : x, Posbility: 0.0947
Next Token : c, Posbility: 0.2002
Next Token : s, Posbility: 0.2578
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0918
Next Token : 0, Posbility: 0.0918
Next Token :  =, Posbility: 0.1719
Next Token : ', Posbility: 0.2500
Next Token : 1, Posbility: 0.2500
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0007
Next Token : =, Posbility: 0.0007
Next Token :  , Posbility: 0.0008
Next Token : _, Posbility: 0.0008
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  first, Posbility: 0.0015
Next Token : 
, Posbility: 0.0041
Next Token :  sub, Posbility: 0.0041
Next Token :  , Posbility: 0.3691
Next Token :  String, Posbility: 0.6094
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : s, Posbility: 0.0002
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : take, Posbility: 0.0049
Next Token : get, Posbility: 0.0062
Next Token : slice, Posbility: 0.0062
Next Token : substring, Posbility: 0.0168
Next Token : sub, Posbility: 0.9219
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0009
Next Token : s, Posbility: 0.0013
Next Token : _, Posbility: 0.0040
Next Token :  0, Posbility: 0.0066
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : (0,, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0007
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0004
Next Token :  , Posbility: 0.0012
Next Token :  0;, Posbility: 0.0015
Next Token :  1, Posbility: 0.0085
Next Token :  0, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0030
Next Token :  1;, Posbility: 0.0093
Next Token :  , Posbility: 0.0776
Next Token :  in, Posbility: 0.4473
Next Token :  1, Posbility: 0.4473
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0002
Next Token :   , Posbility: 0.0003
Next Token : 
, Posbility: 0.0015
Next Token :  , Posbility: 0.0015
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0020
Next Token :   , Posbility: 0.0029
Next Token :  String, Posbility: 0.0215
Next Token :  , Posbility: 0.3359
Next Token : 
, Posbility: 0.6289
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :          , Posbility: 0.0806
Next Token :         , Posbility: 0.0806
Next Token :            , Posbility: 0.1035
Next Token :     , Posbility: 0.2480
Next Token :       , Posbility: 0.2812
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0182
Next Token : match, Posbility: 0.0233
Next Token : if, Posbility: 0.0299
Next Token : add, Posbility: 0.1045
Next Token : let, Posbility: 0.7734
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0033
Next Token :  a, Posbility: 0.0043
Next Token :  v, Posbility: 0.0080
Next Token :  rec, Posbility: 0.0217
Next Token :  , Posbility: 0.9219
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : r, Posbility: 0.0038
Next Token : n, Posbility: 0.0063
Next Token : x, Posbility: 0.0103
Next Token : c, Posbility: 0.0281
Next Token : s, Posbility: 0.9297
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0039
Next Token : ', Posbility: 0.0039
Next Token :  =, Posbility: 0.0084
Next Token : 1, Posbility: 0.0084
Next Token : 2, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : =, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  sub, Posbility: 0.0002
Next Token : 
, Posbility: 0.0023
Next Token :  , Posbility: 0.0471
Next Token :  String, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : remove, Posbility: 0.0009
Next Token : substring, Posbility: 0.0009
Next Token : substr, Posbility: 0.0009
Next Token : drop, Posbility: 0.0015
Next Token : sub, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  i, Posbility: 0.0001
Next Token : _, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0015
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  (1, Posbility: 0.0002
Next Token : 1, Posbility: 0.0005
Next Token :  0, Posbility: 0.0024
Next Token :  , Posbility: 0.0292
Next Token :  1, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  26, Posbility: 0.0352
Next Token :  String, Posbility: 0.0398
Next Token :  in, Posbility: 0.0581
Next Token :  , Posbility: 0.3340
Next Token :  1, Posbility: 0.4863
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token :  +, Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Add, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : 

, Posbility: 0.0002
Next Token :  , Posbility: 0.0110
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :          , Posbility: 0.0014
Next Token :      , Posbility: 0.0050
Next Token :           , Posbility: 0.0073
Next Token :         , Posbility: 0.0325
Next Token :       , Posbility: 0.9492
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0119
Next Token : (, Posbility: 0.0195
Next Token : String, Posbility: 0.0322
Next Token : add, Posbility: 0.2383
Next Token : let, Posbility: 0.6484
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  new, Posbility: 0.0085
Next Token :  res, Posbility: 0.0085
Next Token :  v, Posbility: 0.0109
Next Token :  rec, Posbility: 0.0432
Next Token :  , Posbility: 0.8672
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0090
Next Token : r, Posbility: 0.0090
Next Token : x, Posbility: 0.0148
Next Token : c, Posbility: 0.1089
Next Token : s, Posbility: 0.8047
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0049
Next Token : ', Posbility: 0.0081
Next Token : 1, Posbility: 0.0104
Next Token :  =, Posbility: 0.0221
Next Token : 3, Posbility: 0.9414
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : =, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0005
Next Token :  , Posbility: 0.0293
Next Token :  String, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : add, Posbility: 0.0001
Next Token : remove, Posbility: 0.0002
Next Token : substring, Posbility: 0.0006
Next Token : substr, Posbility: 0.0006
Next Token : sub, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  ~, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : (, Posbility: 0.0004
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4, Posbility: 0.0001
Next Token : 2, Posbility: 0.0009
Next Token :  0, Posbility: 0.0025
Next Token :  1, Posbility: 0.0067
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -2, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token : (, Posbility: 0.0009
Next Token : 3, Posbility: 0.0032
Next Token : 2, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  String, Posbility: 0.0007
Next Token :  26, Posbility: 0.0038
Next Token :  in, Posbility: 0.0220
Next Token :  , Posbility: 0.0361
Next Token :  1, Posbility: 0.9336
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  +, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  etc, Posbility: 0.0001
Next Token :  ..., Posbility: 0.0005
Next Token : 

, Posbility: 0.0008
Next Token :  , Posbility: 0.0028
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0033
Next Token :           , Posbility: 0.0070
Next Token :      , Posbility: 0.0215
Next Token :         , Posbility: 0.0457
Next Token :       , Posbility: 0.9141
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0125
Next Token : (, Posbility: 0.0298
Next Token : String, Posbility: 0.0337
Next Token : add, Posbility: 0.1943
Next Token : let, Posbility: 0.6797
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  result, Posbility: 0.0069
Next Token :  v, Posbility: 0.0078
Next Token :  res, Posbility: 0.0100
Next Token :  rec, Posbility: 0.0272
Next Token :  , Posbility: 0.9023
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0074
Next Token : r, Posbility: 0.0095
Next Token : x, Posbility: 0.0122
Next Token : c, Posbility: 0.0703
Next Token : s, Posbility: 0.8594
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0024
Next Token : _, Posbility: 0.0035
Next Token : 1, Posbility: 0.0050
Next Token :  =, Posbility: 0.0199
Next Token : 4, Posbility: 0.9570
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0001
Next Token : =, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  ", Posbility: 0.0003
Next Token : 
, Posbility: 0.0005
Next Token :  , Posbility: 0.0179
Next Token :  String, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : get, Posbility: 0.0001
Next Token : add, Posbility: 0.0001
Next Token : substring, Posbility: 0.0003
Next Token : substr, Posbility: 0.0009
Next Token : sub, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0004
Next Token :  0, Posbility: 0.0009
Next Token :  1, Posbility: 0.0025
Next Token :  4, Posbility: 0.0052
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 5, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : 2, Posbility: 0.0009
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4, Posbility: 0.0001
Next Token :  0, Posbility: 0.0004
Next Token :  in, Posbility: 0.0009
Next Token :  , Posbility: 0.0025
Next Token :  1, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ..., Posbility: 0.0002
Next Token :  , Posbility: 0.0013
Next Token : 

, Posbility: 0.0015
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0027
Next Token :           , Posbility: 0.0050
Next Token :      , Posbility: 0.0120
Next Token :         , Posbility: 0.0176
Next Token :       , Posbility: 0.9570
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0085
Next Token : String, Posbility: 0.0261
Next Token : (, Posbility: 0.0295
Next Token : add, Posbility: 0.1328
Next Token : let, Posbility: 0.7617
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  new, Posbility: 0.0055
Next Token :  result, Posbility: 0.0062
Next Token :  res, Posbility: 0.0079
Next Token :  rec, Posbility: 0.0244
Next Token :  , Posbility: 0.9180
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : add, Posbility: 0.0077
Next Token : x, Posbility: 0.0099
Next Token : r, Posbility: 0.0099
Next Token : c, Posbility: 0.0442
Next Token : s, Posbility: 0.8867
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0009
Next Token : _, Posbility: 0.0017
Next Token : 1, Posbility: 0.0051
Next Token :  =, Posbility: 0.0139
Next Token : 5, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0001
Next Token :  ", Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 0.0052
Next Token :  String, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : get, Posbility: 0.0000
Next Token : add, Posbility: 0.0001
Next Token : substring, Posbility: 0.0002
Next Token : substr, Posbility: 0.0003
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0002
Next Token :  1, Posbility: 0.0002
Next Token :  0, Posbility: 0.0002
Next Token : 4, Posbility: 0.0003
Next Token :  4, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :  and, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0001
Next Token :  in, Posbility: 0.0004
Next Token :  , Posbility: 0.0009
Next Token : 

, Posbility: 0.0019
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0015
Next Token :           , Posbility: 0.0021
Next Token :         , Posbility: 0.0074
Next Token :      , Posbility: 0.0139
Next Token :       , Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0078
Next Token : String, Posbility: 0.0240
Next Token : (, Posbility: 0.0272
Next Token : add, Posbility: 0.1079
Next Token : let, Posbility: 0.7969
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  new, Posbility: 0.0044
Next Token :  result, Posbility: 0.0044
Next Token :  res, Posbility: 0.0056
Next Token :  rec, Posbility: 0.0195
Next Token :  , Posbility: 0.9375
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0049
Next Token : r, Posbility: 0.0049
Next Token : add, Posbility: 0.0049
Next Token : c, Posbility: 0.0221
Next Token : s, Posbility: 0.9414
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0013
Next Token : 1, Posbility: 0.0024
Next Token : 0, Posbility: 0.0031
Next Token :  =, Posbility: 0.0084
Next Token : 6, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0001
Next Token :  ", Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0067
Next Token :  String, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : get, Posbility: 0.0000
Next Token : add, Posbility: 0.0001
Next Token : substring, Posbility: 0.0002
Next Token : substr, Posbility: 0.0003
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : t, Posbility: 0.0000
Next Token : (", Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0002
Next Token :  4, Posbility: 0.0002
Next Token :  0, Posbility: 0.0003
Next Token : 5, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 7, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 3, Posbility: 0.0001
Next Token : 6, Posbility: 0.0002
Next Token : 5, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  0, Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0001
Next Token :  in, Posbility: 0.0005
Next Token :  , Posbility: 0.0007
Next Token : 

, Posbility: 0.0015
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0012
Next Token :     , Posbility: 0.0013
Next Token :         , Posbility: 0.0031
Next Token :      , Posbility: 0.0059
Next Token :       , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0041
Next Token : String, Posbility: 0.0162
Next Token : (, Posbility: 0.0183
Next Token : add, Posbility: 0.0564
Next Token : let, Posbility: 0.8828
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  new, Posbility: 0.0019
Next Token :  result, Posbility: 0.0021
Next Token :  res, Posbility: 0.0031
Next Token :  rec, Posbility: 0.0095
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : add, Posbility: 0.0015
Next Token : x, Posbility: 0.0019
Next Token : r, Posbility: 0.0019
Next Token : c, Posbility: 0.0108
Next Token : s, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0002
Next Token : 0, Posbility: 0.0006
Next Token : 1, Posbility: 0.0007
Next Token :  =, Posbility: 0.0036
Next Token : 7, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :   , Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : String, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0025
Next Token :  String, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : slice, Posbility: 0.0000
Next Token : add, Posbility: 0.0000
Next Token : substring, Posbility: 0.0001
Next Token : substr, Posbility: 0.0002
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (", Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 6, Posbility: 0.0001
Next Token :  4, Posbility: 0.0001
Next Token :  1, Posbility: 0.0002
Next Token :  0, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 3, Posbility: 0.0001
Next Token : 5, Posbility: 0.0002
Next Token : 7, Posbility: 0.0003
Next Token : 6, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  -1, Posbility: 0.0000
Next Token :  0, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  in, Posbility: 0.0002
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token : 

, Posbility: 0.0017
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0006
Next Token :           , Posbility: 0.0007
Next Token :         , Posbility: 0.0022
Next Token :      , Posbility: 0.0046
Next Token :       , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0037
Next Token : String, Posbility: 0.0129
Next Token : (, Posbility: 0.0166
Next Token : add, Posbility: 0.0449
Next Token : let, Posbility: 0.9062
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0013
Next Token :  result, Posbility: 0.0015
Next Token :  res, Posbility: 0.0021
Next Token :  rec, Posbility: 0.0075
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0012
Next Token : add, Posbility: 0.0013
Next Token : r, Posbility: 0.0013
Next Token : c, Posbility: 0.0059
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0007
Next Token : _, Posbility: 0.0008
Next Token : 0, Posbility: 0.0019
Next Token :  =, Posbility: 0.0028
Next Token : 8, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : =, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : String, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0019
Next Token :  String, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : slice, Posbility: 0.0000
Next Token : add, Posbility: 0.0000
Next Token : substring, Posbility: 0.0001
Next Token : substr, Posbility: 0.0002
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4, Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token : 7, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 5, Posbility: 0.0000
Next Token : 6, Posbility: 0.0000
Next Token : 8, Posbility: 0.0001
Next Token : 7, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  0, Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token : 

, Posbility: 0.0022
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0008
Next Token :     , Posbility: 0.0010
Next Token :         , Posbility: 0.0031
Next Token :      , Posbility: 0.0052
Next Token :       , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0052
Next Token : String, Posbility: 0.0160
Next Token : (, Posbility: 0.0232
Next Token : add, Posbility: 0.0630
Next Token : let, Posbility: 0.8711
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  new, Posbility: 0.0021
Next Token :  result, Posbility: 0.0024
Next Token :  res, Posbility: 0.0031
Next Token :  rec, Posbility: 0.0107
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : t, Posbility: 0.0019
Next Token : r, Posbility: 0.0019
Next Token : add, Posbility: 0.0021
Next Token : c, Posbility: 0.0075
Next Token : s, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 10, Posbility: 0.0004
Next Token : _, Posbility: 0.0007
Next Token : 0, Posbility: 0.0007
Next Token :  =, Posbility: 0.0052
Next Token : 9, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : String, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0022
Next Token :  String, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : slice, Posbility: 0.0000
Next Token : add, Posbility: 0.0000
Next Token : substring, Posbility: 0.0001
Next Token : substr, Posbility: 0.0002
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (", Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  0, Posbility: 0.0002
Next Token : 8, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 6, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 7, Posbility: 0.0003
Next Token : 9, Posbility: 0.0004
Next Token : 8, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0008
Next Token : 

, Posbility: 0.0036
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0010
Next Token :     , Posbility: 0.0013
Next Token :         , Posbility: 0.0028
Next Token :      , Posbility: 0.0059
Next Token :       , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0057
Next Token : (, Posbility: 0.0227
Next Token : String, Posbility: 0.0227
Next Token : add, Posbility: 0.0698
Next Token : let, Posbility: 0.8516
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  result, Posbility: 0.0030
Next Token :  a, Posbility: 0.0034
Next Token :  res, Posbility: 0.0044
Next Token :  rec, Posbility: 0.0154
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : r, Posbility: 0.0024
Next Token : add, Posbility: 0.0024
Next Token : t, Posbility: 0.0035
Next Token : c, Posbility: 0.0074
Next Token : s, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : a, Posbility: 0.0023
Next Token :  =, Posbility: 0.0063
Next Token : 0, Posbility: 0.0134
Next Token : A, Posbility: 0.0283
Next Token : 10, Posbility: 0.9375
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : =, Posbility: 0.0015
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : String, Posbility: 0.0001
Next Token :  , Posbility: 0.0017
Next Token :  String, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : remove, Posbility: 0.0000
Next Token : add, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : substr, Posbility: 0.0001
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : t, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  0, Posbility: 0.0002
Next Token :  10, Posbility: 0.0003
Next Token : 9, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 5, Posbility: 0.0000
Next Token : 8, Posbility: 0.0000
Next Token : 7, Posbility: 0.0000
Next Token : 9, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0009
Next Token : 

, Posbility: 0.0032
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0008
Next Token :     , Posbility: 0.0017
Next Token :         , Posbility: 0.0028
Next Token :      , Posbility: 0.0052
Next Token :       , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0066
Next Token : (, Posbility: 0.0203
Next Token : String, Posbility: 0.0229
Next Token : add, Posbility: 0.0625
Next Token : let, Posbility: 0.8633
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  new, Posbility: 0.0021
Next Token :  result, Posbility: 0.0027
Next Token :  res, Posbility: 0.0039
Next Token :  rec, Posbility: 0.0121
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : t, Posbility: 0.0024
Next Token : add, Posbility: 0.0031
Next Token : r, Posbility: 0.0031
Next Token : c, Posbility: 0.0095
Next Token : s, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0013
Next Token : _, Posbility: 0.0015
Next Token : 20, Posbility: 0.0015
Next Token :  =, Posbility: 0.0075
Next Token : 11, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : =, Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : String, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0022
Next Token :  String, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : concat, Posbility: 0.0000
Next Token : add, Posbility: 0.0001
Next Token : substring, Posbility: 0.0001
Next Token : substr, Posbility: 0.0002
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : t, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (", Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token :  0, Posbility: 0.0005
Next Token :  a, Posbility: 0.0025
Next Token : 10, Posbility: 0.0041
Next Token :  10, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ..., Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token : 

, Posbility: 0.0025
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0004
Next Token :     , Posbility: 0.0007
Next Token :         , Posbility: 0.0012
Next Token :      , Posbility: 0.0028
Next Token :       , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0038
Next Token : (, Posbility: 0.0092
Next Token : String, Posbility: 0.0117
Next Token : add, Posbility: 0.0282
Next Token : let, Posbility: 0.9336
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0008
Next Token :  result, Posbility: 0.0012
Next Token :  res, Posbility: 0.0015
Next Token :  rec, Posbility: 0.0059
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0008
Next Token : r, Posbility: 0.0012
Next Token : add, Posbility: 0.0013
Next Token : c, Posbility: 0.0040
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 21, Posbility: 0.0003
Next Token : 20, Posbility: 0.0004
Next Token : 0, Posbility: 0.0005
Next Token :  =, Posbility: 0.0017
Next Token : 12, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : =, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : String, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0017
Next Token :  String, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : remove, Posbility: 0.0000
Next Token : add, Posbility: 0.0001
Next Token : substring, Posbility: 0.0001
Next Token : substr, Posbility: 0.0001
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : st, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :  10, Posbility: 0.0002
Next Token :  1, Posbility: 0.0003
Next Token : 11, Posbility: 0.0007
Next Token :  11, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  ~, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0032
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0004
Next Token :     , Posbility: 0.0007
Next Token :         , Posbility: 0.0017
Next Token :      , Posbility: 0.0059
Next Token :       , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0060
Next Token : (, Posbility: 0.0145
Next Token : String, Posbility: 0.0165
Next Token : add, Posbility: 0.0447
Next Token : let, Posbility: 0.8984
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  new, Posbility: 0.0021
Next Token :  result, Posbility: 0.0031
Next Token :  res, Posbility: 0.0039
Next Token :  rec, Posbility: 0.0107
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : t, Posbility: 0.0021
Next Token : add, Posbility: 0.0027
Next Token : r, Posbility: 0.0027
Next Token : c, Posbility: 0.0108
Next Token : s, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 14, Posbility: 0.0009
Next Token : 0, Posbility: 0.0012
Next Token : 1, Posbility: 0.0019
Next Token :  =, Posbility: 0.0066
Next Token : 13, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : =, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : String, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0013
Next Token :  String, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : concat, Posbility: 0.0000
Next Token : add, Posbility: 0.0001
Next Token : substring, Posbility: 0.0001
Next Token : substr, Posbility: 0.0001
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (", Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0002
Next Token :  0, Posbility: 0.0002
Next Token : 12, Posbility: 0.0002
Next Token :  11, Posbility: 0.0003
Next Token :  12, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0009
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :         , Posbility: 0.0006
Next Token :      , Posbility: 0.0013
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0019
Next Token : (, Posbility: 0.0040
Next Token : String, Posbility: 0.0058
Next Token : add, Posbility: 0.0074
Next Token : let, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0002
Next Token :  result, Posbility: 0.0004
Next Token :  res, Posbility: 0.0005
Next Token :  rec, Posbility: 0.0022
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0003
Next Token : add, Posbility: 0.0005
Next Token : r, Posbility: 0.0005
Next Token : c, Posbility: 0.0022
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0002
Next Token : 13, Posbility: 0.0002
Next Token :  =, Posbility: 0.0004
Next Token : 0, Posbility: 0.0004
Next Token : 14, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : String, Posbility: 0.0000
Next Token :  , Posbility: 0.0007
Next Token :  String, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : slice, Posbility: 0.0000
Next Token : add, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : substr, Posbility: 0.0001
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  14, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token : 13, Posbility: 0.0003
Next Token :  13, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0007
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0010
Next Token :       , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0024
Next Token : (, Posbility: 0.0040
Next Token : String, Posbility: 0.0058
Next Token : add, Posbility: 0.0108
Next Token : let, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  char, Posbility: 0.0002
Next Token :  res, Posbility: 0.0003
Next Token :  result, Posbility: 0.0004
Next Token :  rec, Posbility: 0.0010
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0002
Next Token : add, Posbility: 0.0003
Next Token : r, Posbility: 0.0003
Next Token : c, Posbility: 0.0012
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 16, Posbility: 0.0001
Next Token : 14, Posbility: 0.0002
Next Token : 0, Posbility: 0.0002
Next Token :  =, Posbility: 0.0006
Next Token : 15, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : String, Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token :  String, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : slice, Posbility: 0.0000
Next Token : add, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : substr, Posbility: 0.0001
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  0, Posbility: 0.0001
Next Token :  13, Posbility: 0.0001
Next Token : 14, Posbility: 0.0001
Next Token :  14, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1;, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0046
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0003
Next Token :     , Posbility: 0.0004
Next Token :         , Posbility: 0.0013
Next Token :      , Posbility: 0.0046
Next Token :       , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0069
Next Token : (, Posbility: 0.0146
Next Token : String, Posbility: 0.0146
Next Token : add, Posbility: 0.0398
Next Token : let, Posbility: 0.9062
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  new, Posbility: 0.0009
Next Token :  result, Posbility: 0.0019
Next Token :  res, Posbility: 0.0019
Next Token :  rec, Posbility: 0.0075
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0012
Next Token : r, Posbility: 0.0015
Next Token : add, Posbility: 0.0019
Next Token : c, Posbility: 0.0052
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 20, Posbility: 0.0006
Next Token : 17, Posbility: 0.0006
Next Token : 0, Posbility: 0.0009
Next Token :  =, Posbility: 0.0036
Next Token : 16, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : a, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : =, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0025
Next Token :  String, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : concat, Posbility: 0.0000
Next Token : add, Posbility: 0.0001
Next Token : substring, Posbility: 0.0001
Next Token : substr, Posbility: 0.0002
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (", Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token : 15, Posbility: 0.0012
Next Token :  15, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1;, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token : 

, Posbility: 0.0046
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0004
Next Token :     , Posbility: 0.0007
Next Token :         , Posbility: 0.0028
Next Token :      , Posbility: 0.0052
Next Token :       , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0085
Next Token : String, Posbility: 0.0179
Next Token : (, Posbility: 0.0231
Next Token : add, Posbility: 0.0625
Next Token : let, Posbility: 0.8633
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  new, Posbility: 0.0019
Next Token :  result, Posbility: 0.0027
Next Token :  res, Posbility: 0.0035
Next Token :  rec, Posbility: 0.0122
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0019
Next Token : r, Posbility: 0.0021
Next Token : add, Posbility: 0.0031
Next Token : c, Posbility: 0.0095
Next Token : s, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0004
Next Token : 0, Posbility: 0.0005
Next Token : 1, Posbility: 0.0009
Next Token :  =, Posbility: 0.0025
Next Token : 17, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : =, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0028
Next Token :  String, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : concat, Posbility: 0.0000
Next Token : add, Posbility: 0.0001
Next Token : substring, Posbility: 0.0001
Next Token : substr, Posbility: 0.0002
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (", Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0003
Next Token :  0, Posbility: 0.0003
Next Token :  15, Posbility: 0.0006
Next Token : 16, Posbility: 0.0015
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 8, Posbility: 0.0000
Next Token : 6, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 16, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0012
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0003
Next Token :      , Posbility: 0.0013
Next Token :       , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0013
Next Token : (, Posbility: 0.0035
Next Token : String, Posbility: 0.0045
Next Token : add, Posbility: 0.0075
Next Token : let, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  result, Posbility: 0.0003
Next Token :  res, Posbility: 0.0003
Next Token :  rec, Posbility: 0.0010
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0002
Next Token : r, Posbility: 0.0003
Next Token : add, Posbility: 0.0003
Next Token : c, Posbility: 0.0009
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 19, Posbility: 0.0001
Next Token : 20, Posbility: 0.0002
Next Token :  =, Posbility: 0.0002
Next Token : 17, Posbility: 0.0003
Next Token : 18, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : String, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0015
Next Token :  String, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : concat, Posbility: 0.0000
Next Token : add, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : substr, Posbility: 0.0001
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : t, Posbility: 0.0000
Next Token : (", Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  15, Posbility: 0.0000
Next Token :  18, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 17, Posbility: 0.0006
Next Token :  17, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0008
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0015
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0021
Next Token : (, Posbility: 0.0040
Next Token : String, Posbility: 0.0066
Next Token : add, Posbility: 0.0084
Next Token : let, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0001
Next Token :  result, Posbility: 0.0003
Next Token :  res, Posbility: 0.0003
Next Token :  rec, Posbility: 0.0010
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0002
Next Token : r, Posbility: 0.0002
Next Token : add, Posbility: 0.0003
Next Token : c, Posbility: 0.0007
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 9, Posbility: 0.0001
Next Token :  =, Posbility: 0.0003
Next Token : 20, Posbility: 0.0003
Next Token : 18, Posbility: 0.0004
Next Token : 19, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : String, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token :  String, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : to, Posbility: 0.0000
Next Token : add, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : (", Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  14, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  17, Posbility: 0.0000
Next Token : 18, Posbility: 0.0003
Next Token :  18, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1;, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0022
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :     , Posbility: 0.0003
Next Token :         , Posbility: 0.0003
Next Token :      , Posbility: 0.0032
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0044
Next Token : (, Posbility: 0.0072
Next Token : String, Posbility: 0.0105
Next Token : add, Posbility: 0.0222
Next Token : let, Posbility: 0.9453
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0004
Next Token :  result, Posbility: 0.0007
Next Token :  res, Posbility: 0.0007
Next Token :  rec, Posbility: 0.0028
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0004
Next Token : r, Posbility: 0.0005
Next Token : add, Posbility: 0.0008
Next Token : c, Posbility: 0.0017
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 110, Posbility: 0.0004
Next Token :  =, Posbility: 0.0005
Next Token : 0, Posbility: 0.0005
Next Token : 10, Posbility: 0.0006
Next Token : 20, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : String, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0015
Next Token :  String, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : to, Posbility: 0.0000
Next Token : add, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : substr, Posbility: 0.0001
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (", Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  17, Posbility: 0.0000
Next Token :  18, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 19, Posbility: 0.0003
Next Token :  19, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0076
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0004
Next Token :     , Posbility: 0.0007
Next Token :         , Posbility: 0.0012
Next Token :      , Posbility: 0.0067
Next Token :       , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0139
Next Token : (, Posbility: 0.0203
Next Token : String, Posbility: 0.0229
Next Token : add, Posbility: 0.0552
Next Token : let, Posbility: 0.8633
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  new, Posbility: 0.0015
Next Token :  result, Posbility: 0.0027
Next Token :  res, Posbility: 0.0027
Next Token :  rec, Posbility: 0.0122
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0019
Next Token : r, Posbility: 0.0021
Next Token : add, Posbility: 0.0040
Next Token : c, Posbility: 0.0066
Next Token : s, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0005
Next Token : 0, Posbility: 0.0009
Next Token : 1, Posbility: 0.0031
Next Token :  =, Posbility: 0.0046
Next Token : 21, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0022
Next Token :  String, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : concat, Posbility: 0.0000
Next Token : add, Posbility: 0.0001
Next Token : substring, Posbility: 0.0001
Next Token : substr, Posbility: 0.0002
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : t, Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : (", Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  10, Posbility: 0.0001
Next Token :  19, Posbility: 0.0001
Next Token :  21, Posbility: 0.0001
Next Token :  20, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0017
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :         , Posbility: 0.0004
Next Token :      , Posbility: 0.0017
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0027
Next Token : (, Posbility: 0.0057
Next Token : String, Posbility: 0.0074
Next Token : add, Posbility: 0.0137
Next Token : let, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  a, Posbility: 0.0002
Next Token :  res, Posbility: 0.0003
Next Token :  result, Posbility: 0.0004
Next Token :  rec, Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0003
Next Token : r, Posbility: 0.0004
Next Token : add, Posbility: 0.0005
Next Token : c, Posbility: 0.0010
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s
 score:False
Error type: noerr
---------------------------
Next Token : 0, Posbility: 0.0001
Next Token : 23, Posbility: 0.0001
Next Token :  =, Posbility: 0.0004
Next Token : 21, Posbility: 0.0004
Next Token : 22, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 =
 score:False
Error type: noerr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : String, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0015
Next Token :  String, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.
 score:False
Error type: noerr
---------------------------
Next Token : concat, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : add, Posbility: 0.0001
Next Token : substr, Posbility: 0.0001
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub
 score:False
Error type: noerr
---------------------------
Next Token :  i, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub 
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : (", Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  20, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 21, Posbility: 0.0001
Next Token :  21, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21
 score:False
Error type: noerr
---------------------------
Next Token :  1;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0015
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :         , Posbility: 0.0004
Next Token :      , Posbility: 0.0019
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0024
Next Token : (, Posbility: 0.0045
Next Token : String, Posbility: 0.0066
Next Token : add, Posbility: 0.0084
Next Token : let, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  a, Posbility: 0.0002
Next Token :  res, Posbility: 0.0005
Next Token :  result, Posbility: 0.0005
Next Token :  rec, Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0003
Next Token : r, Posbility: 0.0004
Next Token : add, Posbility: 0.0005
Next Token : c, Posbility: 0.0012
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : 24, Posbility: 0.0001
Next Token : 0, Posbility: 0.0001
Next Token :  =, Posbility: 0.0004
Next Token : 23, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 =
 score:False
Error type: noerr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : String, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token :  String, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.
 score:False
Error type: noerr
---------------------------
Next Token : concat, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : add, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub
 score:False
Error type: noerr
---------------------------
Next Token :  i, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub 
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s
 score:False
Error type: noerr
---------------------------
Next Token :  18, Posbility: 0.0000
Next Token : 22, Posbility: 0.0000
Next Token :  23, Posbility: 0.0001
Next Token :  21, Posbility: 0.0002
Next Token :  22, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1
 score:False
Error type: noerr
---------------------------
Next Token :  int, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0012
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in

 score:False
Error type: noerr
---------------------------
Next Token :        , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0003
Next Token :      , Posbility: 0.0015
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0017
Next Token : (, Posbility: 0.0028
Next Token : String, Posbility: 0.0040
Next Token : add, Posbility: 0.0058
Next Token : let, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  res, Posbility: 0.0002
Next Token :  result, Posbility: 0.0003
Next Token :  rec, Posbility: 0.0010
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0002
Next Token : r, Posbility: 0.0003
Next Token : add, Posbility: 0.0004
Next Token : c, Posbility: 0.0008
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0001
Next Token : 25, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token : 0, Posbility: 0.0002
Next Token : 24, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24
 score:False
Error type: noerr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 =
 score:False
Error type: noerr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : String, Posbility: 0.0000
Next Token :  , Posbility: 0.0006
Next Token :  String, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.
 score:False
Error type: noerr
---------------------------
Next Token : to, Posbility: 0.0000
Next Token : add, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : substr, Posbility: 0.0001
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub 
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 23, Posbility: 0.0000
Next Token :  24, Posbility: 0.0000
Next Token :  22, Posbility: 0.0000
Next Token :  23, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1
 score:False
Error type: noerr
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0032
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :         , Posbility: 0.0004
Next Token :      , Posbility: 0.0028
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0071
Next Token : (, Posbility: 0.0092
Next Token : String, Posbility: 0.0104
Next Token : add, Posbility: 0.0249
Next Token : let, Posbility: 0.9375
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  a, Posbility: 0.0005
Next Token :  res, Posbility: 0.0012
Next Token :  result, Posbility: 0.0013
Next Token :  rec, Posbility: 0.0046
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0009
Next Token : r, Posbility: 0.0012
Next Token : add, Posbility: 0.0015
Next Token : c, Posbility: 0.0025
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0002
Next Token : 1, Posbility: 0.0003
Next Token : 0, Posbility: 0.0007
Next Token :  =, Posbility: 0.0019
Next Token : 25, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 =
 score:False
Error type: noerr
---------------------------
Next Token : String, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token :  , Posbility: 0.0013
Next Token :  String, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.
 score:False
Error type: noerr
---------------------------
Next Token : to, Posbility: 0.0000
Next Token : add, Posbility: 0.0001
Next Token : substring, Posbility: 0.0001
Next Token : substr, Posbility: 0.0002
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub 
 score:False
Error type: noerr
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : (", Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 24, Posbility: 0.0000
Next Token :  0, Posbility: 0.0001
Next Token :  23, Posbility: 0.0001
Next Token :  24, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24
 score:False
Error type: noerr
---------------------------
Next Token :  1;, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1
 score:False
Error type: noerr
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token : 

, Posbility: 0.0125
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0003
Next Token :     , Posbility: 0.0005
Next Token :         , Posbility: 0.0021
Next Token :      , Posbility: 0.0159
Next Token :       , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0325
Next Token : String, Posbility: 0.0325
Next Token : (, Posbility: 0.0369
Next Token : add, Posbility: 0.1133
Next Token : let, Posbility: 0.7383
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  new, Posbility: 0.0049
Next Token :  result, Posbility: 0.0062
Next Token :  res, Posbility: 0.0080
Next Token :  rec, Posbility: 0.0278
Next Token :  , Posbility: 0.9219
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : r, Posbility: 0.0063
Next Token : t, Posbility: 0.0072
Next Token : add, Posbility: 0.0072
Next Token : c, Posbility: 0.0134
Next Token : s, Posbility: 0.9375
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0008
Next Token : 0, Posbility: 0.0051
Next Token : 1, Posbility: 0.0051
Next Token :  =, Posbility: 0.0122
Next Token : 26, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : _, Posbility: 0.0004
Next Token : a, Posbility: 0.0004
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 =
 score:False
Error type: noerr
---------------------------
Next Token :  "", Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  ", Posbility: 0.0009
Next Token :  , Posbility: 0.0293
Next Token :  String, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.
 score:False
Error type: noerr
---------------------------
Next Token : concat, Posbility: 0.0002
Next Token : substring, Posbility: 0.0002
Next Token : add, Posbility: 0.0006
Next Token : substr, Posbility: 0.0006
Next Token : sub, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub 
 score:False
Error type: noerr
---------------------------
Next Token : t, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (", Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s
 score:False
Error type: noerr
---------------------------
Next Token :  26, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token : 25, Posbility: 0.0004
Next Token :  25, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25
 score:False
Error type: noerr
---------------------------
Next Token :  4, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1
 score:False
Error type: noerr
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0009
Next Token :  in, Posbility: 0.0010
Next Token : 

, Posbility: 0.0097
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in

 score:False
Error type: noerr
---------------------------
Next Token :        , Posbility: 0.0005
Next Token :     , Posbility: 0.0007
Next Token :         , Posbility: 0.0058
Next Token :      , Posbility: 0.0201
Next Token :       , Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0177
Next Token : String, Posbility: 0.0292
Next Token : (, Posbility: 0.0332
Next Token : add, Posbility: 0.1157
Next Token : let, Posbility: 0.7539
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  new, Posbility: 0.0043
Next Token :  result, Posbility: 0.0056
Next Token :  res, Posbility: 0.0092
Next Token :  rec, Posbility: 0.0249
Next Token :  , Posbility: 0.9336
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : t, Posbility: 0.0050
Next Token : r, Posbility: 0.0050
Next Token : add, Posbility: 0.0064
Next Token : c, Posbility: 0.0135
Next Token : s, Posbility: 0.9453
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0014
Next Token : 0, Posbility: 0.0050
Next Token : 1, Posbility: 0.0083
Next Token :  =, Posbility: 0.0155
Next Token : 27, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 =
 score:False
Error type: noerr
---------------------------
Next Token : String, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0017
Next Token :  String, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.
 score:False
Error type: noerr
---------------------------
Next Token : concat, Posbility: 0.0000
Next Token : substring, Posbility: 0.0001
Next Token : add, Posbility: 0.0001
Next Token : substr, Posbility: 0.0002
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub
 score:False
Error type: noerr
---------------------------
Next Token :  i, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : (", Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  27, Posbility: 0.0000
Next Token :  24, Posbility: 0.0001
Next Token : 26, Posbility: 0.0001
Next Token :  26, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  4, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0028
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in

 score:False
Error type: noerr
---------------------------
Next Token :        , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :         , Posbility: 0.0009
Next Token :      , Posbility: 0.0036
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0044
Next Token : (, Posbility: 0.0064
Next Token : String, Posbility: 0.0082
Next Token : add, Posbility: 0.0175
Next Token : let, Posbility: 0.9531
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  new, Posbility: 0.0005
Next Token :  result, Posbility: 0.0010
Next Token :  res, Posbility: 0.0013
Next Token :  rec, Posbility: 0.0040
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : n, Posbility: 0.0005
Next Token : r, Posbility: 0.0007
Next Token : add, Posbility: 0.0010
Next Token : c, Posbility: 0.0017
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s
 score:False
Error type: noerr
---------------------------
Next Token : 0, Posbility: 0.0004
Next Token : 1, Posbility: 0.0004
Next Token : 27, Posbility: 0.0005
Next Token :  =, Posbility: 0.0010
Next Token : 28, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 =
 score:False
Error type: noerr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : String, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0006
Next Token :  String, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.
 score:False
Error type: noerr
---------------------------
Next Token : concat, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : add, Posbility: 0.0001
Next Token : substr, Posbility: 0.0001
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub 
 score:False
Error type: noerr
---------------------------
Next Token : t, Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : (", Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s
 score:False
Error type: noerr
---------------------------
Next Token :  25, Posbility: 0.0000
Next Token :  26, Posbility: 0.0000
Next Token :  28, Posbility: 0.0000
Next Token : 27, Posbility: 0.0001
Next Token :  27, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27
 score:False
Error type: noerr
---------------------------
Next Token :  1;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in

 score:False
Error type: noerr
---------------------------
Next Token :        , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0009
Next Token :       , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0017
Next Token : (, Posbility: 0.0019
Next Token : add, Posbility: 0.0019
Next Token : String, Posbility: 0.0040
Next Token : let, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  char, Posbility: 0.0001
Next Token :  res, Posbility: 0.0002
Next Token :  result, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : r, Posbility: 0.0001
Next Token : n, Posbility: 0.0002
Next Token : add, Posbility: 0.0002
Next Token : c, Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s
 score:False
Error type: noerr
---------------------------
Next Token : 28, Posbility: 0.0001
Next Token : 0, Posbility: 0.0001
Next Token :  29, Posbility: 0.0001
Next Token :  =, Posbility: 0.0002
Next Token : 29, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 =
 score:False
Error type: noerr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : String, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  String, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.
 score:False
Error type: noerr
---------------------------
Next Token : to, Posbility: 0.0000
Next Token : add, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub 
 score:False
Error type: noerr
---------------------------
Next Token : t, Posbility: 0.0000
Next Token : (", Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 28, Posbility: 0.0000
Next Token :  26, Posbility: 0.0000
Next Token :  27, Posbility: 0.0000
Next Token :  28, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28
 score:False
Error type: noerr
---------------------------
Next Token :  1;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1
 score:False
Error type: noerr
---------------------------
Next Token :  int, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0009
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0015
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0019
Next Token : (, Posbility: 0.0028
Next Token : add, Posbility: 0.0031
Next Token : String, Posbility: 0.0040
Next Token : let, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  result, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : r, Posbility: 0.0002
Next Token : n, Posbility: 0.0002
Next Token : add, Posbility: 0.0003
Next Token : c, Posbility: 0.0005
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s
 score:False
Error type: noerr
---------------------------
Next Token : 10, Posbility: 0.0001
Next Token : 31, Posbility: 0.0001
Next Token : 0, Posbility: 0.0001
Next Token :  =, Posbility: 0.0002
Next Token : 30, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 =
 score:False
Error type: noerr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : String, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  String, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.
 score:False
Error type: noerr
---------------------------
Next Token : remove, Posbility: 0.0000
Next Token : add, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub
 score:False
Error type: noerr
---------------------------
Next Token :  i, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub 
 score:False
Error type: noerr
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : (", Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s
 score:False
Error type: noerr
---------------------------
Next Token :  30, Posbility: 0.0000
Next Token :  28, Posbility: 0.0000
Next Token : 29, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  29, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  1;, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1
 score:False
Error type: noerr
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0032
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :         , Posbility: 0.0004
Next Token :      , Posbility: 0.0028
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0063
Next Token : (, Posbility: 0.0092
Next Token : String, Posbility: 0.0118
Next Token : add, Posbility: 0.0221
Next Token : let, Posbility: 0.9375
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  v, Posbility: 0.0004
Next Token :  result, Posbility: 0.0008
Next Token :  res, Posbility: 0.0009
Next Token :  rec, Posbility: 0.0028
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : n, Posbility: 0.0007
Next Token : r, Posbility: 0.0008
Next Token : add, Posbility: 0.0012
Next Token : c, Posbility: 0.0017
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s
 score:False
Error type: noerr
---------------------------
Next Token : 0, Posbility: 0.0002
Next Token : 01, Posbility: 0.0002
Next Token :  =, Posbility: 0.0007
Next Token : 1, Posbility: 0.0009
Next Token : 31, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 =
 score:False
Error type: noerr
---------------------------
Next Token : String, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  String, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.
 score:False
Error type: noerr
---------------------------
Next Token : concat, Posbility: 0.0000
Next Token : add, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : substr, Posbility: 0.0001
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : (", Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s
 score:False
Error type: noerr
---------------------------
Next Token :  20, Posbility: 0.0001
Next Token :  10, Posbility: 0.0001
Next Token :  28, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  30, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30
 score:False
Error type: noerr
---------------------------
Next Token :  4, Posbility: 0.0000
Next Token :  1;, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1
 score:False
Error type: noerr
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0036
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in

 score:False
Error type: noerr
---------------------------
Next Token :        , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :         , Posbility: 0.0005
Next Token :      , Posbility: 0.0028
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0104
Next Token : String, Posbility: 0.0118
Next Token : s, Posbility: 0.0133
Next Token : add, Posbility: 0.0171
Next Token : let, Posbility: 0.9336
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  v, Posbility: 0.0005
Next Token :  result, Posbility: 0.0008
Next Token :  res, Posbility: 0.0009
Next Token :  rec, Posbility: 0.0028
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : n, Posbility: 0.0007
Next Token : r, Posbility: 0.0008
Next Token : add, Posbility: 0.0012
Next Token : c, Posbility: 0.0019
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s
 score:False
Error type: noerr
---------------------------
Next Token : 01, Posbility: 0.0002
Next Token : 1, Posbility: 0.0003
Next Token : 0, Posbility: 0.0015
Next Token :  =, Posbility: 0.0025
Next Token : 32, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 =
 score:False
Error type: noerr
---------------------------
Next Token : String, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token :  , Posbility: 0.0006
Next Token :  String, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.
 score:False
Error type: noerr
---------------------------
Next Token : concat, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : add, Posbility: 0.0001
Next Token : substr, Posbility: 0.0001
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s
 score:False
Error type: noerr
---------------------------
Next Token :  21, Posbility: 0.0000
Next Token :  -31, Posbility: 0.0000
Next Token : 31, Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : [31, Posbility: 0.0000
Next Token : 32, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 31, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0036
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in

 score:False
Error type: noerr
---------------------------
Next Token :        , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :         , Posbility: 0.0006
Next Token :      , Posbility: 0.0041
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0057
Next Token : (, Posbility: 0.0073
Next Token : String, Posbility: 0.0082
Next Token : add, Posbility: 0.0154
Next Token : let, Posbility: 0.9531
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  a, Posbility: 0.0004
Next Token :  result, Posbility: 0.0008
Next Token :  res, Posbility: 0.0009
Next Token :  rec, Posbility: 0.0028
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : t, Posbility: 0.0006
Next Token : r, Posbility: 0.0008
Next Token : add, Posbility: 0.0012
Next Token : c, Posbility: 0.0017
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s
 score:False
Error type: noerr
---------------------------
Next Token : 34, Posbility: 0.0002
Next Token : 0, Posbility: 0.0005
Next Token : 1, Posbility: 0.0006
Next Token :  =, Posbility: 0.0017
Next Token : 33, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s33
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s33 =
 score:False
Error type: noerr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : String, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token :  String, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s33 = String
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s33 = String.
 score:False
Error type: noerr
---------------------------
Next Token : concat, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : add, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s33 = String.sub
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s33 = String.sub 
 score:False
Error type: noerr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : (", Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s33 = String.sub s
 score:False
Error type: noerr
---------------------------
Next Token : 32, Posbility: 0.0000
Next Token :  22, Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s33 = String.sub s 
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 33, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 31, Posbility: 0.0000
Next Token : 32, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s33 = String.sub s 32
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s33 = String.sub s 32 1
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s33 = String.sub s 32 1 in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0008
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s33 = String.sub s 32 1 in

 score:False
Error type: noerr
---------------------------
Next Token :        , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0010
Next Token :       , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s33 = String.sub s 32 1 in
      
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0009
Next Token : add, Posbility: 0.0010
Next Token : (, Posbility: 0.0012
Next Token : String, Posbility: 0.0015
Next Token : let, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s33 = String.sub s 32 1 in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  char, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  result, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s33 = String.sub s 32 1 in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : n, Posbility: 0.0001
Next Token : add, Posbility: 0.0001
Next Token : r, Posbility: 0.0002
Next Token : c, Posbility: 0.0004
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s33 = String.sub s 32 1 in
      let s
 score:False
Error type: noerr
---------------------------
Next Token : 0, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : 33, Posbility: 0.0001
Next Token :  =, Posbility: 0.0002
Next Token : 34, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s33 = String.sub s 32 1 in
      let s34
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s33 = String.sub s 32 1 in
      let s34 =
 score:False
Error type: noerr
---------------------------
Next Token :  string, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : String, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  String, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s33 = String.sub s 32 1 in
      let s34 = String
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s33 = String.sub s 32 1 in
      let s34 = String.
 score:False
Error type: noerr
---------------------------
Next Token : Sub, Posbility: 0.0000
Next Token : add, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s33 = String.sub s 32 1 in
      let s34 = String.sub
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s33 = String.sub s 32 1 in
      let s34 = String.sub 
 score:False
Error type: noerr
---------------------------
Next Token : t, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s33 = String.sub s 32 1 in
      let s34 = String.sub s
 score:False
Error type: noerr
---------------------------
Next Token : 33, Posbility: 0.0000
Next Token :  23, Posbility: 0.0000
Next Token :  63, Posbility: 0.0000
Next Token :  [33, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s33 = String.sub s 32 1 in
      let s34 = String.sub s 
 score:False
Error type: noerr
---------------------------
Next Token : 35, Posbility: 0.0000
Next Token : 32, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 34, Posbility: 0.0000
Next Token : 33, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s33 = String.sub s 32 1 in
      let s34 = String.sub s 33
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s33 = String.sub s 32 1 in
      let s34 = String.sub s 33 1
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s33 = String.sub s 32 1 in
      let s34 = String.sub s 33 1 in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s33 = String.sub s 32 1 in
      let s34 = String.sub s 33 1 in

 score:False
Error type: noerr
---------------------------
Next Token :        , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0007
Next Token :       , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s33 = String.sub s 32 1 in
      let s34 = String.sub s 33 1 in
      
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0006
Next Token : s, Posbility: 0.0007
Next Token : String, Posbility: 0.0008
Next Token : add, Posbility: 0.0009
Next Token : let, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. *)
let rec add_char s =
  match String.length s with
  | 0 -> s
  | 1 -> Char.to_string (Char.add (Char.to_int s) 26)
  | _ -> let s1 = String.sub s 0 1 in
      let s2 = String.sub s 1 1 in
      let s3 = String.sub s 2 1 in
      let s4 = String.sub s 3 1 in
      let s5 = String.sub s 4 1 in
      let s6 = String.sub s 5 1 in
      let s7 = String.sub s 6 1 in
      let s8 = String.sub s 7 1 in
      let s9 = String.sub s 8 1 in
      let s10 = String.sub s 9 1 in
      let s11 = String.sub s 10 1 in
      let s12 = String.sub s 11 1 in
      let s13 = String.sub s 12 1 in
      let s14 = String.sub s 13 1 in
      let s15 = String.sub s 14 1 in
      let s16 = String.sub s 15 1 in
      let s17 = String.sub s 16 1 in
      let s18 = String.sub s 17 1 in
      let s19 = String.sub s 18 1 in
      let s20 = String.sub s 19 1 in
      let s21 = String.sub s 20 1 in
      let s22 = String.sub s 21 1 in
      let s23 = String.sub s 22 1 in
      let s24 = String.sub s 23 1 in
      let s25 = String.sub s 24 1 in
      let s26 = String.sub s 25 1 in
      let s27 = String.sub s 26 1 in
      let s28 = String.sub s 27 1 in
      let s29 = String.sub s 28 1 in
      let s30 = String.sub s 29 1 in
      let s31 = String.sub s 30 1 in
      let s32 = String.sub s 31 1 in
      let s33 = String.sub s 32 1 in
      let s34 = String.sub s 33 1 in
      let
 score:False


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>