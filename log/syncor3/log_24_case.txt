code:
 (* Write a  function to count the number of positive numbers in a list. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  pos, Posbility: 0.0173
Next Token :  positive, Posbility: 0.0776
Next Token :  , Posbility: 0.0996
Next Token :  count, Posbility: 0.2695
Next Token :  rec, Posbility: 0.4453
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  loop, Posbility: 0.0171
Next Token :  pos, Posbility: 0.0408
Next Token :  positive, Posbility: 0.1108
Next Token :  , Posbility: 0.1426
Next Token :  count, Posbility: 0.5625
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Positive, Posbility: 0.0065
Next Token : -, Posbility: 0.0137
Next Token :  , Posbility: 0.0542
Next Token :  =, Posbility: 0.1299
Next Token : _, Posbility: 0.7500
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : all, Posbility: 0.0090
Next Token : list, Posbility: 0.0115
Next Token : numbers, Posbility: 0.0216
Next Token : pos, Posbility: 0.2617
Next Token : positive, Posbility: 0.5547
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positive
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0068
Next Token :  =, Posbility: 0.1357
Next Token :  , Posbility: 0.2236
Next Token : _, Posbility: 0.2236
Next Token : s, Posbility: 0.3691
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  acc, Posbility: 0.0117
Next Token :  l, Posbility: 0.0247
Next Token : _, Posbility: 0.0359
Next Token :  =, Posbility: 0.2656
Next Token :  , Posbility: 0.5586
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0598
Next Token : (, Posbility: 0.0869
Next Token : n, Posbility: 0.1260
Next Token : lst, Posbility: 0.1260
Next Token : x, Posbility: 0.3438
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0106
Next Token :  acc, Posbility: 0.0255
Next Token :  , Posbility: 0.1011
Next Token : s, Posbility: 0.3105
Next Token :  =, Posbility: 0.5117
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0015
Next Token :  function, Posbility: 0.0024
Next Token :  match, Posbility: 0.0557
Next Token :  , Posbility: 0.0630
Next Token : 
, Posbility: 0.8711
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0053
Next Token : 	, Posbility: 0.0113
Next Token :    , Posbility: 0.0128
Next Token :     , Posbility: 0.1562
Next Token :   , Posbility: 0.7930
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : case, Posbility: 0.0062
Next Token : List, Posbility: 0.0090
Next Token : let, Posbility: 0.0669
Next Token : if, Posbility: 0.1816
Next Token : match, Posbility: 0.7188
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0004
Next Token :   , Posbility: 0.0006
Next Token :  !, Posbility: 0.0010
Next Token :  String, Posbility: 0.0017
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Seq, Posbility: 0.0003
Next Token : head, Posbility: 0.0007
Next Token : (, Posbility: 0.0035
Next Token : List, Posbility: 0.0327
Next Token : x, Posbility: 0.9570
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  =, Posbility: 0.0002
Next Token :  , Posbility: 0.0006
Next Token : 
, Posbility: 0.0009
Next Token :  with, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0021
Next Token :  , Posbility: 0.0049
Next Token :  [, Posbility: 0.0056
Next Token :  [], Posbility: 0.0366
Next Token : 
, Posbility: 0.9414
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0009
Next Token :       , Posbility: 0.0020
Next Token :    , Posbility: 0.0037
Next Token :     , Posbility: 0.0947
Next Token :   , Posbility: 0.8984
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0004
Next Token : Nil, Posbility: 0.0005
Next Token : [, Posbility: 0.0151
Next Token : [], Posbility: 0.0466
Next Token : |, Posbility: 0.9336
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0024
Next Token :  [, Posbility: 0.0065
Next Token :  nil, Posbility: 0.0065
Next Token :  , Posbility: 0.0176
Next Token :  [], Posbility: 0.9609
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0064
Next Token :   , Posbility: 0.0064
Next Token :  |, Posbility: 0.0082
Next Token :  =>, Posbility: 0.0105
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0003
Next Token : -, Posbility: 0.0004
Next Token : â†’, Posbility: 0.0004
Next Token : ::, Posbility: 0.0006
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0063
Next Token :  , Posbility: 0.0171
Next Token : 
, Posbility: 0.0171
Next Token :  1, Posbility: 0.0171
Next Token :  0, Posbility: 0.9336
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0018
Next Token :   , Posbility: 0.0044
Next Token :  , Posbility: 0.0092
Next Token :  |, Posbility: 0.0322
Next Token : 
, Posbility: 0.9375
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : |, Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : //, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  positive, Posbility: 0.0032
Next Token :  a, Posbility: 0.0036
Next Token :  [], Posbility: 0.0077
Next Token :  [, Posbility: 0.1758
Next Token :  , Posbility: 0.7891
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0214
Next Token : hd, Posbility: 0.0242
Next Token : h, Posbility: 0.0275
Next Token : _, Posbility: 0.2295
Next Token : x, Posbility: 0.6250
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0027
Next Token : s, Posbility: 0.0137
Next Token : :, Posbility: 0.0610
Next Token : ::, Posbility: 0.4512
Next Token :  , Posbility: 0.4512
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ^, Posbility: 0.0002
Next Token : if, Posbility: 0.0066
Next Token : :, Posbility: 0.0066
Next Token : ->, Posbility: 0.0066
Next Token : ::, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  more, Posbility: 0.0025
Next Token :  l, Posbility: 0.0032
Next Token :  [], Posbility: 0.0182
Next Token :  rest, Posbility: 0.0815
Next Token :  , Posbility: 0.8789
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : t, Posbility: 0.0175
Next Token : tail, Posbility: 0.0369
Next Token : _, Posbility: 0.1289
Next Token : y, Posbility: 0.1289
Next Token : x, Posbility: 0.6562
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0029
Next Token : 1, Posbility: 0.0029
Next Token : _, Posbility: 0.0048
Next Token : ', Posbility: 0.0586
Next Token : s, Posbility: 0.9180
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  @, Posbility: 0.0011
Next Token :   , Posbility: 0.0037
Next Token :  =>, Posbility: 0.0061
Next Token :  when, Posbility: 0.0747
Next Token :  , Posbility: 0.9102
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0002
Next Token :  =>, Posbility: 0.0008
Next Token : if, Posbility: 0.0050
Next Token : ::, Posbility: 0.0330
Next Token : ->, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  (1, Posbility: 0.0176
Next Token :  , Posbility: 0.1299
Next Token :  count, Posbility: 0.1299
Next Token :  1, Posbility: 0.3516
Next Token : 
, Posbility: 0.3516
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  | x :: xs ->

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0053
Next Token :   , Posbility: 0.0099
Next Token :      , Posbility: 0.0145
Next Token :     , Posbility: 0.4785
Next Token :       , Posbility: 0.4785
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  | x :: xs ->
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0312
Next Token : match, Posbility: 0.0962
Next Token : count, Posbility: 0.1240
Next Token : if, Posbility: 0.3359
Next Token : let, Posbility: 0.3359
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  | x :: xs ->
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0208
Next Token :  pos, Posbility: 0.0236
Next Token :  rec, Posbility: 0.1973
Next Token :  count, Posbility: 0.2236
Next Token :  , Posbility: 0.3691
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  | x :: xs ->
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0339
Next Token : c, Posbility: 0.1045
Next Token : y, Posbility: 0.1719
Next Token : n, Posbility: 0.1953
Next Token : x, Posbility: 0.2207
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  | x :: xs ->
      let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0464
Next Token : ', Posbility: 0.0674
Next Token : _, Posbility: 0.1113
Next Token : s, Posbility: 0.1836
Next Token :  =, Posbility: 0.3887
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  | x :: xs ->
      let x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0047
Next Token :  match, Posbility: 0.0047
Next Token :  first, Posbility: 0.0129
Next Token :  , Posbility: 0.2578
Next Token :  count, Posbility: 0.7031
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  | x :: xs ->
      let x = count
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0001
Next Token : ing, Posbility: 0.0001
Next Token :  positive, Posbility: 0.0002
Next Token :  , Posbility: 0.0022
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  | x :: xs ->
      let x = count_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : non, Posbility: 0.0001
Next Token : pos, Posbility: 0.0001
Next Token : negative, Posbility: 0.0006
Next Token : one, Posbility: 0.0007
Next Token : positive, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  | x :: xs ->
      let x = count_positive
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0004
Next Token :  , Posbility: 0.0025
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  | x :: xs ->
      let x = count_positives
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0003
Next Token :  ~, Posbility: 0.0005
Next Token : _, Posbility: 0.0013
Next Token : (, Posbility: 0.0025
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  | x :: xs ->
      let x = count_positives 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : y, Posbility: 0.0003
Next Token : (, Posbility: 0.0041
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  | x :: xs ->
      let x = count_positives x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token : ;, Posbility: 0.0003
Next Token : 
, Posbility: 0.0017
Next Token :  in, Posbility: 0.0952
Next Token : s, Posbility: 0.9023
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  | x :: xs ->
      let x = count_positives xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0005
Next Token :   , Posbility: 0.0015
Next Token : ;, Posbility: 0.0015
Next Token : 
, Posbility: 0.0179
Next Token :  in, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  | x :: xs ->
      let x = count_positives xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0004
Next Token :   , Posbility: 0.0006
Next Token :  count, Posbility: 0.0017
Next Token :  , Posbility: 0.0124
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  | x :: xs ->
      let x = count_positives xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0010
Next Token :     , Posbility: 0.0015
Next Token :         , Posbility: 0.0022
Next Token :      , Posbility: 0.0036
Next Token :       , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  | x :: xs ->
      let x = count_positives xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0476
Next Token : let, Posbility: 0.1143
Next Token : 1, Posbility: 0.2412
Next Token : if, Posbility: 0.2412
Next Token : x, Posbility: 0.2734
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  | x :: xs ->
      let x = count_positives xs in
      x
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0009
Next Token : 
, Posbility: 0.0019
Next Token :  , Posbility: 0.0040
Next Token : +1, Posbility: 0.0096
Next Token :  +, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  | x :: xs ->
      let x = count_positives xs in
      x +
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  (1, Posbility: 0.0090
Next Token :  1;, Posbility: 0.0131
Next Token :  count, Posbility: 0.0757
Next Token :  , Posbility: 0.1602
Next Token :  1, Posbility: 0.7188
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  | x :: xs ->
      let x = count_positives xs in
      x + 1
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0078
Next Token :  in, Posbility: 0.0078
Next Token :  +, Posbility: 0.0942
Next Token : 
, Posbility: 0.3301
Next Token : 

, Posbility: 0.5430
---------------------------
code:
 (* Write a  function to count the number of positive numbers in a list. *)
let rec count_positives x =
  match x with
  | [] -> 0
  | x :: xs ->
      let x = count_positives xs in
      x + 1


 score:True
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END and No Syntax Error--------

processing time : :23.752347946166992

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>