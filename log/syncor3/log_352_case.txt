code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  con, Posbility: 0.0061
Next Token :  is, Posbility: 0.0089
Next Token :  , Posbility: 0.1216
Next Token :  remove, Posbility: 0.1768
Next Token :  rec, Posbility: 0.6172
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0095
Next Token :  find, Posbility: 0.0156
Next Token :  loop, Posbility: 0.0227
Next Token :  , Posbility: 0.2773
Next Token :  remove, Posbility: 0.5195
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0063
Next Token :  =, Posbility: 0.0063
Next Token :  , Posbility: 0.0104
Next Token : Duplicate, Posbility: 0.0104
Next Token : _, Posbility: 0.9414
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : all, Posbility: 0.0076
Next Token : con, Posbility: 0.0076
Next Token : duplicate, Posbility: 0.2520
Next Token : dup, Posbility: 0.2520
Next Token : cons, Posbility: 0.4160
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_cons
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0009
Next Token :  , Posbility: 0.0023
Next Token : (, Posbility: 0.0023
Next Token : _, Posbility: 0.0469
Next Token : e, Posbility: 0.9414
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_conse
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : quent, Posbility: 0.0004
Next Token : cu, Posbility: 0.0004
Next Token : cut, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecut
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ion, Posbility: 0.0001
Next Token : iv, Posbility: 0.0001
Next Token : i, Posbility: 0.0001
Next Token : ively, Posbility: 0.0025
Next Token : ive, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0161
Next Token :  =, Posbility: 0.0161
Next Token :  , Posbility: 0.0437
Next Token : s, Posbility: 0.0437
Next Token : _, Posbility: 0.8750
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : du, Posbility: 0.0022
Next Token : repeat, Posbility: 0.0022
Next Token : occurrence, Posbility: 0.0022
Next Token : dup, Posbility: 0.1172
Next Token : duplicate, Posbility: 0.8672
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicate
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0024
Next Token : (, Posbility: 0.0024
Next Token :  =, Posbility: 0.0024
Next Token : _, Posbility: 0.0066
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0188
Next Token : _, Posbility: 0.0659
Next Token :  l, Posbility: 0.0659
Next Token :  =, Posbility: 0.1084
Next Token :  , Posbility: 0.6250
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : arr, Posbility: 0.0258
Next Token : :, Posbility: 0.0376
Next Token : (, Posbility: 0.1309
Next Token : lst, Posbility: 0.2441
Next Token : x, Posbility: 0.2773
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0102
Next Token :  acc, Posbility: 0.0131
Next Token :  , Posbility: 0.1099
Next Token : s, Posbility: 0.1099
Next Token :  =, Posbility: 0.7148
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0022
Next Token : 

, Posbility: 0.0025
Next Token :  match, Posbility: 0.0393
Next Token :  , Posbility: 0.0505
Next Token : 
, Posbility: 0.8984
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0071
Next Token :    , Posbility: 0.0104
Next Token : 	, Posbility: 0.0118
Next Token :     , Posbility: 0.1260
Next Token :   , Posbility: 0.8242
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0054
Next Token : List, Posbility: 0.0354
Next Token : if, Posbility: 0.1406
Next Token : let, Posbility: 0.2314
Next Token : match, Posbility: 0.5547
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0011
Next Token :  [, Posbility: 0.0011
Next Token :  !, Posbility: 0.0035
Next Token :  String, Posbility: 0.0156
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Array, Posbility: 0.0027
Next Token : Seq, Posbility: 0.0072
Next Token : (, Posbility: 0.0105
Next Token : List, Posbility: 0.1279
Next Token : x, Posbility: 0.8359
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0009
Next Token :  |, Posbility: 0.0015
Next Token :  , Posbility: 0.0024
Next Token :  @, Posbility: 0.0040
Next Token :  with, Posbility: 0.9844
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0025
Next Token :  , Posbility: 0.0060
Next Token :  [, Posbility: 0.0112
Next Token :  [], Posbility: 0.0830
Next Token : 
, Posbility: 0.8906
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0006
Next Token :       , Posbility: 0.0014
Next Token :    , Posbility: 0.0020
Next Token :     , Posbility: 0.0845
Next Token :   , Posbility: 0.9102
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Nil, Posbility: 0.0003
Next Token : (, Posbility: 0.0004
Next Token : [, Posbility: 0.0349
Next Token : [], Posbility: 0.0649
Next Token : |, Posbility: 0.8984
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0014
Next Token :  nil, Posbility: 0.0103
Next Token :  , Posbility: 0.0280
Next Token :  [, Posbility: 0.0280
Next Token :  [], Posbility: 0.9258
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0038
Next Token :    , Posbility: 0.0063
Next Token :  =>, Posbility: 0.0081
Next Token :  |, Posbility: 0.0172
Next Token :  , Posbility: 0.9375
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : -, Posbility: 0.0004
Next Token : â†’, Posbility: 0.0004
Next Token : ::, Posbility: 0.0052
Next Token : ->, Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0008
Next Token :  [];, Posbility: 0.0022
Next Token : 
, Posbility: 0.0096
Next Token :  , Posbility: 0.1172
Next Token :  [], Posbility: 0.8672
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0015
Next Token :   , Posbility: 0.0027
Next Token :  |, Posbility: 0.0066
Next Token :  , Posbility: 0.0074
Next Token : 
, Posbility: 0.9727
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : //, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0028
Next Token :  a, Posbility: 0.0099
Next Token :  [], Posbility: 0.0127
Next Token :  [, Posbility: 0.2559
Next Token :  , Posbility: 0.6914
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0306
Next Token : h, Posbility: 0.0574
Next Token : hd, Posbility: 0.0835
Next Token : _, Posbility: 0.1211
Next Token : x, Posbility: 0.6172
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0059
Next Token : s, Posbility: 0.0086
Next Token : :, Posbility: 0.0234
Next Token : ::, Posbility: 0.4707
Next Token :  , Posbility: 0.4707
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ^, Posbility: 0.0002
Next Token : if, Posbility: 0.0028
Next Token : :, Posbility: 0.0040
Next Token : ->, Posbility: 0.0059
Next Token : ::, Posbility: 0.9883
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  acc, Posbility: 0.0041
Next Token :  [, Posbility: 0.0060
Next Token :  [], Posbility: 0.0388
Next Token :  rest, Posbility: 0.0498
Next Token :  , Posbility: 0.8828
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : tail, Posbility: 0.0215
Next Token : t, Posbility: 0.0312
Next Token : _, Posbility: 0.0457
Next Token : y, Posbility: 0.2314
Next Token : x, Posbility: 0.6289
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0046
Next Token : _, Posbility: 0.0046
Next Token : 1, Posbility: 0.0046
Next Token : ', Posbility: 0.0923
Next Token : s, Posbility: 0.8750
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  @, Posbility: 0.0034
Next Token : 1, Posbility: 0.0043
Next Token :  =>, Posbility: 0.0071
Next Token :  when, Posbility: 0.1426
Next Token :  , Posbility: 0.8203
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0002
Next Token :  when, Posbility: 0.0003
Next Token : if, Posbility: 0.0093
Next Token : ::, Posbility: 0.0417
Next Token : ->, Posbility: 0.9492
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0120
Next Token :  remove, Posbility: 0.0325
Next Token :  match, Posbility: 0.0417
Next Token :  , Posbility: 0.2402
Next Token : 
, Posbility: 0.6523
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0033
Next Token :   , Posbility: 0.0055
Next Token :      , Posbility: 0.0091
Next Token :     , Posbility: 0.3398
Next Token :       , Posbility: 0.6367
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0219
Next Token : List, Posbility: 0.0281
Next Token : match, Posbility: 0.1426
Next Token : if, Posbility: 0.2656
Next Token : let, Posbility: 0.4980
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  new, Posbility: 0.0225
Next Token :  v, Posbility: 0.0289
Next Token :  first, Posbility: 0.0371
Next Token :  rec, Posbility: 0.1465
Next Token :  , Posbility: 0.5117
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : r, Posbility: 0.0212
Next Token : (, Posbility: 0.0240
Next Token : f, Posbility: 0.0272
Next Token : x, Posbility: 0.2930
Next Token : y, Posbility: 0.3750
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0044
Next Token : ,, Posbility: 0.0056
Next Token : 1, Posbility: 0.0056
Next Token : s, Posbility: 0.1445
Next Token :  =, Posbility: 0.8320
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0103
Next Token :  [, Posbility: 0.0170
Next Token : 
, Posbility: 0.0280
Next Token :  , Posbility: 0.3398
Next Token :  remove, Posbility: 0.5625
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  con, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : all, Posbility: 0.0002
Next Token : first, Posbility: 0.0003
Next Token : con, Posbility: 0.0003
Next Token : duplicate, Posbility: 0.0009
Next Token : cons, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_cons
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : equ, Posbility: 0.0000
Next Token : ective, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_conse
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  cut, Posbility: 0.0000
Next Token : quit, Posbility: 0.0000
Next Token : cur, Posbility: 0.0000
Next Token : cu, Posbility: 0.0000
Next Token : cut, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecut
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : i, Posbility: 0.0000
Next Token : IVE, Posbility: 0.0000
Next Token : ively, Posbility: 0.0000
Next Token : ice, Posbility: 0.0001
Next Token : ive, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : double, Posbility: 0.0000
Next Token : occurrence, Posbility: 0.0000
Next Token : du, Posbility: 0.0000
Next Token : dup, Posbility: 0.0000
Next Token : duplicate, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicate
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0008
Next Token : _, Posbility: 0.0017
Next Token :  ~, Posbility: 0.0019
Next Token : (, Posbility: 0.0028
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0177
Next Token : y, Posbility: 0.0177
Next Token : x, Posbility: 0.9648
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  in, Posbility: 0.0017
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0005
Next Token : ;, Posbility: 0.0009
Next Token :  |, Posbility: 0.0039
Next Token : 
, Posbility: 0.0291
Next Token :  in, Posbility: 0.9648
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0002
Next Token :   , Posbility: 0.0003
Next Token : 

, Posbility: 0.0022
Next Token :  , Posbility: 0.0046
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0007
Next Token :     , Posbility: 0.0009
Next Token :         , Posbility: 0.0019
Next Token :      , Posbility: 0.0159
Next Token :       , Posbility: 0.9805
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0160
Next Token : List, Posbility: 0.0337
Next Token : let, Posbility: 0.1182
Next Token : match, Posbility: 0.2500
Next Token : if, Posbility: 0.5273
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  string, Posbility: 0.0087
Next Token :  String, Posbility: 0.0442
Next Token :  !, Posbility: 0.0566
Next Token :  not, Posbility: 0.1543
Next Token :  , Posbility: 0.6914
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Seq, Posbility: 0.0132
Next Token : (, Posbility: 0.0859
Next Token : List, Posbility: 0.2344
Next Token : y, Posbility: 0.2656
Next Token : x, Posbility: 0.3008
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0107
Next Token :  ==, Posbility: 0.0200
Next Token :  !=, Posbility: 0.0291
Next Token :  , Posbility: 0.4004
Next Token :  =, Posbility: 0.5156
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  remove, Posbility: 0.0005
Next Token : :, Posbility: 0.0015
Next Token :  last, Posbility: 0.0024
Next Token :  first, Posbility: 0.0036
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0038
Next Token : (, Posbility: 0.0062
Next Token : head, Posbility: 0.0168
Next Token : x, Posbility: 0.0457
Next Token : y, Posbility: 0.9180
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0420
Next Token : ', Posbility: 0.1465
Next Token :  then, Posbility: 0.1465
Next Token : ., Posbility: 0.1660
Next Token : [0], Posbility: 0.3516
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0012
Next Token :  &&, Posbility: 0.0040
Next Token :  ||, Posbility: 0.0040
Next Token : 
, Posbility: 0.0052
Next Token :  then, Posbility: 0.9844
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  remove, Posbility: 0.0073
Next Token :  [, Posbility: 0.0369
Next Token :  [], Posbility: 0.0781
Next Token : 
, Posbility: 0.1289
Next Token :  , Posbility: 0.7422
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0012
Next Token : 
, Posbility: 0.0033
Next Token : (, Posbility: 0.0240
Next Token : y, Posbility: 0.4824
Next Token : x, Posbility: 0.4824
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then x
 score:False
Error type: noerr
---------------------------
Next Token :  |, Posbility: 0.0048
Next Token :  else, Posbility: 0.0240
Next Token : 
, Posbility: 0.0449
Next Token :  , Posbility: 0.4277
Next Token : s, Posbility: 0.4844
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then xs
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0029
Next Token :  |, Posbility: 0.0167
Next Token :  , Posbility: 0.0215
Next Token : 
, Posbility: 0.3809
Next Token :  else, Posbility: 0.5547
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then xs else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  remove, Posbility: 0.0009
Next Token :  {, Posbility: 0.0013
Next Token : 
, Posbility: 0.0050
Next Token :  [, Posbility: 0.1465
Next Token :  , Posbility: 0.8438
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then xs else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0030
Next Token : if, Posbility: 0.0081
Next Token : (, Posbility: 0.0977
Next Token : y, Posbility: 0.4395
Next Token : x, Posbility: 0.4395
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then xs else x
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0002
Next Token : :, Posbility: 0.0002
Next Token : ::, Posbility: 0.0066
Next Token : s, Posbility: 0.0096
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then xs else x 
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : @@, Posbility: 0.0001
Next Token : :, Posbility: 0.0010
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then xs else x ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  con, Posbility: 0.0003
Next Token : y, Posbility: 0.0004
Next Token :  [, Posbility: 0.0010
Next Token :  remove, Posbility: 0.0097
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then xs else x :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : append, Posbility: 0.0000
Next Token : x, Posbility: 0.0025
Next Token : (, Posbility: 0.0067
Next Token : y, Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then xs else x :: y
 score:False
Error type: noerr
---------------------------
Next Token : ), Posbility: 0.0095
Next Token :  in, Posbility: 0.0095
Next Token :  , Posbility: 0.0157
Next Token : 

, Posbility: 0.3574
Next Token : 
, Posbility: 0.5898
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then xs else x :: y

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0109
Next Token :     , Posbility: 0.0231
Next Token :       , Posbility: 0.0356
Next Token : end, Posbility: 0.0554
Next Token :   , Posbility: 0.8125
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then xs else x :: y
  
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0041
Next Token : (, Posbility: 0.0060
Next Token : in, Posbility: 0.1001
Next Token : |, Posbility: 0.2119
Next Token : ;, Posbility: 0.6523
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then xs else x :: y
  ;
 score:False
Error type: noerr
---------------------------
Next Token : ;&, Posbility: 0.0006
Next Token :  , Posbility: 0.0026
Next Token : 

, Posbility: 0.0249
Next Token : 
, Posbility: 0.0320
Next Token : ;, Posbility: 0.9375
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then xs else x :: y
  ;;
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0005
Next Token :  , Posbility: 0.0009
Next Token : ;, Posbility: 0.0747
Next Token : 
, Posbility: 0.2949
Next Token : 

, Posbility: 0.6250
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then xs else x :: y
  ;;


 score:True
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END and No Syntax Error--------

processing time : :35.62621021270752

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>