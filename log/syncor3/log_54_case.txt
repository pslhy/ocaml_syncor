code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0104
Next Token :  find, Posbility: 0.0466
Next Token :  , Posbility: 0.0986
Next Token :  next, Posbility: 0.1436
Next Token :  rec, Posbility: 0.6406
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0172
Next Token :  loop, Posbility: 0.0221
Next Token :  find, Posbility: 0.1846
Next Token :  next, Posbility: 0.2373
Next Token :  , Posbility: 0.3906
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : helper, Posbility: 0.0145
Next Token : f, Posbility: 0.0271
Next Token : min, Posbility: 0.0271
Next Token : smallest, Posbility: 0.2002
Next Token : pal, Posbility: 0.4805
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec pal
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0066
Next Token : end, Posbility: 0.0085
Next Token : _, Posbility: 0.0334
Next Token : in, Posbility: 0.0430
Next Token : ind, Posbility: 0.8633
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palind
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : rom, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrom
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0012
Next Token : (, Posbility: 0.0012
Next Token : es, Posbility: 0.0012
Next Token : ed, Posbility: 0.0019
Next Token : e, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0139
Next Token :  i, Posbility: 0.0178
Next Token :  =, Posbility: 0.1318
Next Token :  , Posbility: 0.2793
Next Token : _, Posbility: 0.4609
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : finder, Posbility: 0.0281
Next Token : length, Posbility: 0.0361
Next Token : rec, Posbility: 0.0674
Next Token : search, Posbility: 0.0767
Next Token : of, Posbility: 0.3027
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0054
Next Token :  a, Posbility: 0.0089
Next Token :  =, Posbility: 0.0400
Next Token :  , Posbility: 0.1084
Next Token : _, Posbility: 0.8008
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : integer, Posbility: 0.0452
Next Token : num, Posbility: 0.0513
Next Token : length, Posbility: 0.0579
Next Token : n, Posbility: 0.1387
Next Token : int, Posbility: 0.3789
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0244
Next Token : _, Posbility: 0.0403
Next Token :  =, Posbility: 0.1094
Next Token :  i, Posbility: 0.1406
Next Token :  , Posbility: 0.5547
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : p, Posbility: 0.0090
Next Token : m, Posbility: 0.0102
Next Token : (, Posbility: 0.0664
Next Token : x, Posbility: 0.1240
Next Token : n, Posbility: 0.7148
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  acc, Posbility: 0.0069
Next Token :  int, Posbility: 0.0078
Next Token :  i, Posbility: 0.0310
Next Token :  , Posbility: 0.0952
Next Token :  =, Posbility: 0.7969
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  function, Posbility: 0.0035
Next Token :  {, Posbility: 0.0058
Next Token :  match, Posbility: 0.0486
Next Token :  , Posbility: 0.0708
Next Token : 
, Posbility: 0.8633
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0057
Next Token :    , Posbility: 0.0083
Next Token : 	, Posbility: 0.0094
Next Token :     , Posbility: 0.1143
Next Token :   , Posbility: 0.8477
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0042
Next Token : (, Posbility: 0.0114
Next Token : let, Posbility: 0.2012
Next Token : match, Posbility: 0.3320
Next Token : if, Posbility: 0.4258
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Integer, Posbility: 0.0053
Next Token :  not, Posbility: 0.0068
Next Token :  int, Posbility: 0.0269
Next Token :  String, Posbility: 0.0344
Next Token :  , Posbility: 0.8906
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Char, Posbility: 0.0084
Next Token : Pal, Posbility: 0.0138
Next Token : (, Posbility: 0.0791
Next Token : Int, Posbility: 0.1016
Next Token : n, Posbility: 0.7539
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0222
Next Token :  ==, Posbility: 0.0603
Next Token :  <=, Posbility: 0.1641
Next Token :  =, Posbility: 0.2715
Next Token :  , Posbility: 0.4473
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : â‰¤, Posbility: 0.0008
Next Token : %%, Posbility: 0.0012
Next Token : /, Posbility: 0.0047
Next Token : >, Posbility: 0.0947
Next Token : <, Posbility: 0.8984
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  100, Posbility: 0.0320
Next Token :  10, Posbility: 0.2354
Next Token :  1, Posbility: 0.2354
Next Token :  , Posbility: 0.2354
Next Token :  0, Posbility: 0.2354
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  or, Posbility: 0.0081
Next Token :  , Posbility: 0.0092
Next Token : 
, Posbility: 0.0250
Next Token :  ||, Posbility: 0.2100
Next Token :  then, Posbility: 0.7305
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0557
Next Token :  -1, Posbility: 0.0918
Next Token : 
, Posbility: 0.2500
Next Token :  , Posbility: 0.2500
Next Token :  0, Posbility: 0.2500
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
 score:False
Error type: noerr
---------------------------
Next Token :  |, Posbility: 0.0032
Next Token :   , Posbility: 0.0047
Next Token :  , Posbility: 0.0391
Next Token :  else, Posbility: 0.3262
Next Token : 
, Posbility: 0.6094
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0005
Next Token :    , Posbility: 0.0006
Next Token :  , Posbility: 0.0032
Next Token :     , Posbility: 0.0036
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0016
Next Token : |, Posbility: 0.0016
Next Token : let, Posbility: 0.0021
Next Token : elif, Posbility: 0.0291
Next Token : else, Posbility: 0.9648
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0007
Next Token :  match, Posbility: 0.0047
Next Token :  {, Posbility: 0.0099
Next Token : 
, Posbility: 0.0938
Next Token :  , Posbility: 0.8867
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0031
Next Token : (, Posbility: 0.0065
Next Token : n, Posbility: 0.0107
Next Token : let, Posbility: 0.0137
Next Token : if, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  string, Posbility: 0.0099
Next Token :  is, Posbility: 0.0128
Next Token :  int, Posbility: 0.0211
Next Token :  String, Posbility: 0.0211
Next Token :  , Posbility: 0.8945
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : pal, Posbility: 0.0092
Next Token : Pal, Posbility: 0.0250
Next Token : Int, Posbility: 0.0364
Next Token : (, Posbility: 0.0601
Next Token : n, Posbility: 0.8320
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  %, Posbility: 0.0327
Next Token :  <=, Posbility: 0.0327
Next Token :  ==, Posbility: 0.1465
Next Token :  , Posbility: 0.2412
Next Token :  =, Posbility: 0.5117
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0003
Next Token :  int, Posbility: 0.0003
Next Token :  , Posbility: 0.0159
Next Token :  1, Posbility: 0.1172
Next Token :  0, Posbility: 0.8633
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0019
Next Token :   , Posbility: 0.0027
Next Token :  or, Posbility: 0.0031
Next Token :  ||, Posbility: 0.0178
Next Token :  then, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0124
Next Token :  -1, Posbility: 0.0124
Next Token :  0, Posbility: 0.0337
Next Token :  , Posbility: 0.2490
Next Token :  1, Posbility: 0.6758
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
 score:False
Error type: noerr
---------------------------
Next Token :  (*, Posbility: 0.0009
Next Token :   , Posbility: 0.0011
Next Token :  , Posbility: 0.0095
Next Token :  else, Posbility: 0.0108
Next Token : 
, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0001
Next Token :       , Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :     , Posbility: 0.0005
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  
 score:False
Error type: noerr
---------------------------
Next Token : elif, Posbility: 0.0001
Next Token : //, Posbility: 0.0003
Next Token : |, Posbility: 0.0004
Next Token : let, Posbility: 0.0006
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0011
Next Token :  match, Posbility: 0.0058
Next Token :  {, Posbility: 0.0295
Next Token : 
, Posbility: 0.1924
Next Token :  , Posbility: 0.7617
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0109
Next Token : pal, Posbility: 0.0179
Next Token : n, Posbility: 0.0334
Next Token : let, Posbility: 0.0488
Next Token : if, Posbility: 0.8633
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  string, Posbility: 0.0193
Next Token :  is, Posbility: 0.0281
Next Token :  String, Posbility: 0.0317
Next Token :  int, Posbility: 0.0408
Next Token :  , Posbility: 0.8203
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : pal, Posbility: 0.0308
Next Token : Pal, Posbility: 0.0449
Next Token : Int, Posbility: 0.0576
Next Token : (, Posbility: 0.0947
Next Token : n, Posbility: 0.7031
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0206
Next Token :  mod, Posbility: 0.1045
Next Token :  %, Posbility: 0.1187
Next Token :  , Posbility: 0.2217
Next Token :  =, Posbility: 0.4688
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0008
Next Token :  Integer, Posbility: 0.0008
Next Token :  int, Posbility: 0.0022
Next Token :  , Posbility: 0.1182
Next Token :  1, Posbility: 0.8711
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0008
Next Token :  or, Posbility: 0.0008
Next Token : 
, Posbility: 0.0015
Next Token :  ||, Posbility: 0.0096
Next Token :  then, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0052
Next Token :  -1, Posbility: 0.0052
Next Token :  0, Posbility: 0.1045
Next Token :  1, Posbility: 0.1045
Next Token :  , Posbility: 0.7695
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0044
Next Token : pal, Posbility: 0.0072
Next Token : return, Posbility: 0.0153
Next Token : 2, Posbility: 0.4473
Next Token : n, Posbility: 0.5078
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
 score:False
Error type: noerr
---------------------------
Next Token : +1, Posbility: 0.0023
Next Token :  *, Posbility: 0.0044
Next Token :  +, Posbility: 0.0106
Next Token :  , Posbility: 0.0223
Next Token : 
, Posbility: 0.9492
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n

 score:False
Error type: noerr
---------------------------
Next Token :      , Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :       , Posbility: 0.0004
Next Token :     , Posbility: 0.0008
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  
 score:False
Error type: noerr
---------------------------
Next Token : elif, Posbility: 0.0001
Next Token : |, Posbility: 0.0004
Next Token : //, Posbility: 0.0008
Next Token : let, Posbility: 0.0009
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0013
Next Token :  match, Posbility: 0.0059
Next Token :  {, Posbility: 0.0386
Next Token : 
, Posbility: 0.1729
Next Token :  , Posbility: 0.7734
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0074
Next Token : pal, Posbility: 0.0256
Next Token : n, Posbility: 0.0291
Next Token : let, Posbility: 0.0698
Next Token : if, Posbility: 0.8477
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  string, Posbility: 0.0125
Next Token :  is, Posbility: 0.0160
Next Token :  int, Posbility: 0.0232
Next Token :  String, Posbility: 0.0232
Next Token :  , Posbility: 0.8711
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : pal, Posbility: 0.0430
Next Token : Pal, Posbility: 0.0488
Next Token : Int, Posbility: 0.0552
Next Token : (, Posbility: 0.1030
Next Token : n, Posbility: 0.6719
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0327
Next Token :  =, Posbility: 0.1660
Next Token :  , Posbility: 0.2129
Next Token :  mod, Posbility: 0.2129
Next Token :  %, Posbility: 0.3086
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0009
Next Token : =, Posbility: 0.0014
Next Token :  4, Posbility: 0.0065
Next Token :  10, Posbility: 0.0177
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0012
Next Token : 5, Posbility: 0.0012
Next Token : n, Posbility: 0.0013
Next Token : 3, Posbility: 0.0046
Next Token : 2, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ===, Posbility: 0.0029
Next Token :  !=, Posbility: 0.0071
Next Token :  , Posbility: 0.0192
Next Token :  ==, Posbility: 0.1416
Next Token :  =, Posbility: 0.8164
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0001
Next Token :  ~, Posbility: 0.0001
Next Token :  , Posbility: 0.0049
Next Token :  1, Posbility: 0.2676
Next Token :  0, Posbility: 0.7266
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ||, Posbility: 0.0019
Next Token :  and, Posbility: 0.0031
Next Token : 
, Posbility: 0.0051
Next Token :  &&, Posbility: 0.0227
Next Token :  then, Posbility: 0.9648
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0052
Next Token :  0, Posbility: 0.0052
Next Token :  1, Posbility: 0.0233
Next Token : 
, Posbility: 0.1729
Next Token :  , Posbility: 0.7734
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0055
Next Token : (, Posbility: 0.0150
Next Token : 2, Posbility: 0.0405
Next Token : n, Posbility: 0.1104
Next Token : pal, Posbility: 0.8164
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then pal
 score:False
Error type: noerr
---------------------------
Next Token : inv, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : nd, Posbility: 0.0000
Next Token : in, Posbility: 0.0002
Next Token : ind, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palind
 score:False
Error type: noerr
---------------------------
Next Token : Rom, Posbility: 0.0000
Next Token : ome, Posbility: 0.0000
Next Token : roman, Posbility: 0.0000
Next Token : ROM, Posbility: 0.0000
Next Token : rom, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrom
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ed, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome
 score:False
Error type: noerr
---------------------------
Next Token :  of, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_
 score:False
Error type: noerr
---------------------------
Next Token : for, Posbility: 0.0000
Next Token : next, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : int, Posbility: 0.0001
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of
 score:False
Error type: noerr
---------------------------
Next Token : _2_, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_
 score:False
Error type: noerr
---------------------------
Next Token : pair, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : even, Posbility: 0.0001
Next Token : odd, Posbility: 0.0002
Next Token : int, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0010
Next Token :  (1, Posbility: 0.0038
Next Token :  ((, Posbility: 0.0194
Next Token : (, Posbility: 0.1436
Next Token :  , Posbility: 0.8281
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int 
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0004
Next Token : floor, Posbility: 0.0007
Next Token : div, Posbility: 0.0008
Next Token : n, Posbility: 0.0952
Next Token : (, Posbility: 0.9023
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  , Posbility: 0.0021
Next Token : floor, Posbility: 0.0031
Next Token : div, Posbility: 0.0040
Next Token : 2, Posbility: 0.0051
Next Token : n, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : +1), Posbility: 0.0092
Next Token : /, Posbility: 0.0410
Next Token : -1), Posbility: 0.0410
Next Token :  +, Posbility: 0.0679
Next Token :  , Posbility: 0.8242
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : +1), Posbility: 0.0006
Next Token : div, Posbility: 0.0012
Next Token : //, Posbility: 0.0088
Next Token : /, Posbility: 0.3730
Next Token : -, Posbility: 0.6133
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0009
Next Token :  , Posbility: 0.0023
Next Token :  1);, Posbility: 0.0023
Next Token :  2), Posbility: 0.0471
Next Token :  1), Posbility: 0.9453
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
 score:False
Error type: noerr
---------------------------
Next Token :  else, Posbility: 0.0269
Next Token :  , Posbility: 0.0442
Next Token :  *, Posbility: 0.0728
Next Token :  +, Posbility: 0.4199
Next Token : 
, Posbility: 0.4199
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  
 score:False
Error type: noerr
---------------------------
Next Token : +, Posbility: 0.0000
Next Token : //, Posbility: 0.0000
Next Token : elif, Posbility: 0.0001
Next Token : |, Posbility: 0.0002
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0012
Next Token :  1, Posbility: 0.0014
Next Token :  {, Posbility: 0.0133
Next Token : 
, Posbility: 0.0410
Next Token :  , Posbility: 0.9336
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0227
Next Token : n, Posbility: 0.0618
Next Token : let, Posbility: 0.0791
Next Token : pal, Posbility: 0.3555
Next Token : if, Posbility: 0.4551
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0019
Next Token :  !, Posbility: 0.0019
Next Token :  int, Posbility: 0.0040
Next Token :  not, Posbility: 0.0051
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0126
Next Token : Pal, Posbility: 0.0143
Next Token : (, Posbility: 0.0388
Next Token : pal, Posbility: 0.1357
Next Token : n, Posbility: 0.7812
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0095
Next Token :  +, Posbility: 0.0121
Next Token :  =, Posbility: 0.0898
Next Token :  , Posbility: 0.1904
Next Token :  %, Posbility: 0.6641
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  12, Posbility: 0.0003
Next Token :  1, Posbility: 0.0024
Next Token :  10, Posbility: 0.0024
Next Token :  4, Posbility: 0.0067
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 6, Posbility: 0.0014
Next Token : 7, Posbility: 0.0030
Next Token : 5, Posbility: 0.0049
Next Token : 3, Posbility: 0.0466
Next Token : 2, Posbility: 0.9375
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0029
Next Token :  ==, Posbility: 0.0053
Next Token :  , Posbility: 0.0396
Next Token :  !=, Posbility: 0.0508
Next Token :  =, Posbility: 0.8984
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  -1, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token :  , Posbility: 0.0009
Next Token :  0, Posbility: 0.0009
Next Token :  1, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0006
Next Token : 
, Posbility: 0.0031
Next Token :  and, Posbility: 0.0040
Next Token :  &&, Posbility: 0.0139
Next Token :  then, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0085
Next Token :  Math, Posbility: 0.0139
Next Token :  1, Posbility: 0.0229
Next Token : 
, Posbility: 0.1699
Next Token :  , Posbility: 0.7617
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0229
Next Token : 2, Posbility: 0.0229
Next Token : min, Posbility: 0.0378
Next Token : n, Posbility: 0.1025
Next Token : pal, Posbility: 0.7578
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then pal
 score:False
Error type: noerr
---------------------------
Next Token : nd, Posbility: 0.0000
Next Token : inv, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : in, Posbility: 0.0001
Next Token : ind, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palind
 score:False
Error type: noerr
---------------------------
Next Token : ron, Posbility: 0.0000
Next Token : Rom, Posbility: 0.0000
Next Token : roman, Posbility: 0.0000
Next Token : ROM, Posbility: 0.0000
Next Token : rom, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrom
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  of, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_
 score:False
Error type: noerr
---------------------------
Next Token : from, Posbility: 0.0000
Next Token : helper, Posbility: 0.0000
Next Token : int, Posbility: 0.0001
Next Token : if, Posbility: 0.0001
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of
 score:False
Error type: noerr
---------------------------
Next Token :  int, Posbility: 0.0000
Next Token : int, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_
 score:False
Error type: noerr
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : pair, Posbility: 0.0000
Next Token : even, Posbility: 0.0000
Next Token : odd, Posbility: 0.0002
Next Token : int, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int
 score:False
Error type: noerr
---------------------------
Next Token :  (1, Posbility: 0.0022
Next Token :  (((, Posbility: 0.0022
Next Token : (, Posbility: 0.0037
Next Token :  ((, Posbility: 0.0942
Next Token :  , Posbility: 0.8945
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int 
 score:False
Error type: noerr
---------------------------
Next Token : floor, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : pal, Posbility: 0.0002
Next Token : n, Posbility: 0.0097
Next Token : (, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : Pal, Posbility: 0.0016
Next Token : 3, Posbility: 0.0119
Next Token : pal, Posbility: 0.0153
Next Token : 2, Posbility: 0.0173
Next Token : n, Posbility: 0.9453
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ), Posbility: 0.0007
Next Token : -1), Posbility: 0.0029
Next Token :  *, Posbility: 0.0080
Next Token :  +, Posbility: 0.2637
Next Token :  , Posbility: 0.7188
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -2, Posbility: 0.0005
Next Token : ^, Posbility: 0.0009
Next Token : //, Posbility: 0.0040
Next Token : /, Posbility: 0.0228
Next Token : -, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  3), Posbility: 0.0017
Next Token :  1, Posbility: 0.0127
Next Token :  , Posbility: 0.0344
Next Token :  1), Posbility: 0.2559
Next Token :  2), Posbility: 0.6914
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0210
Next Token :  , Posbility: 0.0347
Next Token : 

, Posbility: 0.1069
Next Token :  +, Posbility: 0.3281
Next Token : 
, Posbility: 0.4785
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)

 score:False
Error type: noerr
---------------------------
Next Token : else, Posbility: 0.0139
Next Token :     , Posbility: 0.0148
Next Token : end, Posbility: 0.0315
Next Token : let, Posbility: 0.0334
Next Token :   , Posbility: 0.8633
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : ++, Posbility: 0.0007
Next Token : 
, Posbility: 0.0014
Next Token : +, Posbility: 0.0016
Next Token : |, Posbility: 0.0417
Next Token : else, Posbility: 0.9492
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  un, Posbility: 0.0129
Next Token : 
, Posbility: 0.0576
Next Token :  fail, Posbility: 0.0737
Next Token :  0, Posbility: 0.0947
Next Token :  , Posbility: 0.7031
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : pal, Posbility: 0.0610
Next Token : raise, Posbility: 0.1006
Next Token : assert, Posbility: 0.1143
Next Token : n, Posbility: 0.1465
Next Token : if, Posbility: 0.3984
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0021
Next Token :  is, Posbility: 0.0024
Next Token :  int, Posbility: 0.0039
Next Token :  not, Posbility: 0.0065
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0070
Next Token : Pal, Posbility: 0.0116
Next Token : (, Posbility: 0.0405
Next Token : pal, Posbility: 0.1099
Next Token : n, Posbility: 0.8125
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0157
Next Token :  >=, Posbility: 0.0203
Next Token :  =, Posbility: 0.1504
Next Token :  , Posbility: 0.2471
Next Token :  %, Posbility: 0.5234
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  12, Posbility: 0.0021
Next Token :  100, Posbility: 0.0021
Next Token :  10, Posbility: 0.0157
Next Token :  4, Posbility: 0.1157
Next Token :  , Posbility: 0.8555
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 7, Posbility: 0.0098
Next Token : 5, Posbility: 0.0126
Next Token : 6, Posbility: 0.0161
Next Token : 3, Posbility: 0.4160
Next Token : 2, Posbility: 0.5352
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0010
Next Token :  ==, Posbility: 0.0093
Next Token :  , Posbility: 0.0154
Next Token :  !=, Posbility: 0.0198
Next Token :  =, Posbility: 0.9492
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4, Posbility: 0.0006
Next Token :  -1, Posbility: 0.0339
Next Token :  1, Posbility: 0.0339
Next Token :  , Posbility: 0.2500
Next Token :  0, Posbility: 0.6797
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0027
Next Token :  ||, Posbility: 0.0045
Next Token :  and, Posbility: 0.1016
Next Token :  &&, Posbility: 0.1309
Next Token :  then, Posbility: 0.7500
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0020
Next Token :  0, Posbility: 0.0150
Next Token : 
, Posbility: 0.0405
Next Token :  1, Posbility: 0.1104
Next Token :  , Posbility: 0.8164
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0042
Next Token : (, Posbility: 0.0145
Next Token : 2, Posbility: 0.0306
Next Token : n, Posbility: 0.1367
Next Token : pal, Posbility: 0.7891
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then pal
 score:False
Error type: noerr
---------------------------
Next Token : id, Posbility: 0.0000
Next Token : inv, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : in, Posbility: 0.0001
Next Token : ind, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palind
 score:False
Error type: noerr
---------------------------
Next Token : Rom, Posbility: 0.0000
Next Token : ron, Posbility: 0.0000
Next Token : roman, Posbility: 0.0000
Next Token : ROM, Posbility: 0.0000
Next Token : rom, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrom
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ed, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  of, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_
 score:False
Error type: noerr
---------------------------
Next Token : for, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : int, Posbility: 0.0000
Next Token : pal, Posbility: 0.0001
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of
 score:False
Error type: noerr
---------------------------
Next Token : int, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_
 score:False
Error type: noerr
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : even, Posbility: 0.0000
Next Token : pair, Posbility: 0.0000
Next Token : odd, Posbility: 0.0001
Next Token : int, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int
 score:False
Error type: noerr
---------------------------
Next Token :  (((, Posbility: 0.0006
Next Token :  (1, Posbility: 0.0013
Next Token : (, Posbility: 0.0021
Next Token :  ((, Posbility: 0.0159
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int 
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0001
Next Token : 2, Posbility: 0.0004
Next Token : pal, Posbility: 0.0004
Next Token : n, Posbility: 0.0179
Next Token : (, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : floor, Posbility: 0.0005
Next Token : 3, Posbility: 0.0017
Next Token : 2, Posbility: 0.0066
Next Token : pal, Posbility: 0.0109
Next Token : n, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0022
Next Token : -1), Posbility: 0.0022
Next Token :  *, Posbility: 0.0059
Next Token :  +, Posbility: 0.1172
Next Token :  , Posbility: 0.8672
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : +1), Posbility: 0.0003
Next Token : -2, Posbility: 0.0005
Next Token : //, Posbility: 0.0062
Next Token : /, Posbility: 0.0752
Next Token : -, Posbility: 0.9180
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0056
Next Token :  1, Posbility: 0.0056
Next Token :  3), Posbility: 0.0413
Next Token :  2), Posbility: 0.1123
Next Token :  1), Posbility: 0.8281
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0171
Next Token :  , Posbility: 0.0596
Next Token : 

, Posbility: 0.1113
Next Token :  +, Posbility: 0.1426
Next Token : 
, Posbility: 0.6406
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)

 score:False
Error type: noerr
---------------------------
Next Token :     , Posbility: 0.0011
Next Token : let, Posbility: 0.0011
Next Token : else, Posbility: 0.0022
Next Token : end, Posbility: 0.0046
Next Token :   , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0003
Next Token : elif, Posbility: 0.0008
Next Token : 
, Posbility: 0.0011
Next Token : |, Posbility: 0.0179
Next Token : else, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0079
Next Token : 
, Posbility: 0.0114
Next Token :  fail, Posbility: 0.0214
Next Token :  0, Posbility: 0.0275
Next Token :  , Posbility: 0.9102
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0183
Next Token : assert, Posbility: 0.0206
Next Token : pal, Posbility: 0.0562
Next Token : n, Posbility: 0.0723
Next Token : if, Posbility: 0.7773
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  true, Posbility: 0.0004
Next Token :  1, Posbility: 0.0005
Next Token :  0, Posbility: 0.0006
Next Token :  not, Posbility: 0.0006
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0006
Next Token : Pal, Posbility: 0.0008
Next Token : pal, Posbility: 0.0052
Next Token : (, Posbility: 0.0075
Next Token : n, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0037
Next Token :  >=, Posbility: 0.0037
Next Token :  , Posbility: 0.0447
Next Token :  =, Posbility: 0.0447
Next Token :  %, Posbility: 0.8945
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  12, Posbility: 0.0001
Next Token :  1, Posbility: 0.0009
Next Token :  10, Posbility: 0.0009
Next Token :  4, Posbility: 0.0179
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 7, Posbility: 0.0004
Next Token : 5, Posbility: 0.0009
Next Token : 6, Posbility: 0.0011
Next Token : 3, Posbility: 0.0179
Next Token : 2, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0003
Next Token :  ==, Posbility: 0.0019
Next Token :  , Posbility: 0.0046
Next Token :  !=, Posbility: 0.0046
Next Token :  =, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4, Posbility: 0.0001
Next Token :  -1, Posbility: 0.0024
Next Token :  , Posbility: 0.0066
Next Token :  0, Posbility: 0.0178
Next Token :  1, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ?, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  and, Posbility: 0.0003
Next Token :  &&, Posbility: 0.0007
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0003
Next Token : 
, Posbility: 0.0024
Next Token :  0, Posbility: 0.0065
Next Token :  1, Posbility: 0.0178
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0005
Next Token : (, Posbility: 0.0039
Next Token : 2, Posbility: 0.0064
Next Token : n, Posbility: 0.0369
Next Token : pal, Posbility: 0.9492
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then pal
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : nd, Posbility: 0.0000
Next Token : inv, Posbility: 0.0000
Next Token : in, Posbility: 0.0000
Next Token : ind, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palind
 score:False
Error type: noerr
---------------------------
Next Token : ron, Posbility: 0.0000
Next Token : Rom, Posbility: 0.0000
Next Token : roman, Posbility: 0.0000
Next Token : ROM, Posbility: 0.0000
Next Token : rom, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrom
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : for, Posbility: 0.0000
Next Token : from, Posbility: 0.0000
Next Token : int, Posbility: 0.0000
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of
 score:False
Error type: noerr
---------------------------
Next Token :  int, Posbility: 0.0000
Next Token : int, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : even, Posbility: 0.0000
Next Token : odd, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : int, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  (1, Posbility: 0.0001
Next Token : (, Posbility: 0.0006
Next Token :  ((, Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int 
 score:False
Error type: noerr
---------------------------
Next Token : (-1), Posbility: 0.0000
Next Token : (0), Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : n, Posbility: 0.0028
Next Token : (, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : -, Posbility: 0.0002
Next Token : 3, Posbility: 0.0003
Next Token : pal, Posbility: 0.0005
Next Token : 2, Posbility: 0.0019
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -2, Posbility: 0.0002
Next Token :  -1), Posbility: 0.0003
Next Token : ), Posbility: 0.0005
Next Token :  +, Posbility: 0.0474
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : +1), Posbility: 0.0000
Next Token : -3, Posbility: 0.0001
Next Token : /, Posbility: 0.0009
Next Token : -2, Posbility: 0.0009
Next Token : -, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0), Posbility: 0.0021
Next Token :  , Posbility: 0.0056
Next Token :  3), Posbility: 0.0415
Next Token :  1), Posbility: 0.1128
Next Token :  2), Posbility: 0.8320
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0044
Next Token :  , Posbility: 0.0135
Next Token :  +, Posbility: 0.0471
Next Token : 

, Posbility: 0.2715
Next Token : 
, Posbility: 0.6523
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)

 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0108
Next Token : 

, Posbility: 0.0201
Next Token : let, Posbility: 0.0276
Next Token : else, Posbility: 0.0376
Next Token :   , Posbility: 0.8594
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : with, Posbility: 0.0007
Next Token : in, Posbility: 0.0016
Next Token : 
, Posbility: 0.0024
Next Token : |, Posbility: 0.0256
Next Token : else, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  error, Posbility: 0.0270
Next Token : 
, Posbility: 0.0393
Next Token :  fail, Posbility: 0.0830
Next Token :  0, Posbility: 0.0942
Next Token :  , Posbility: 0.6953
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0194
Next Token : n, Posbility: 0.0598
Next Token : raise, Posbility: 0.0869
Next Token : assert, Posbility: 0.1631
Next Token : if, Posbility: 0.5664
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  true, Posbility: 0.0007
Next Token :  0, Posbility: 0.0010
Next Token :  int, Posbility: 0.0010
Next Token :  not, Posbility: 0.0015
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0021
Next Token : Pal, Posbility: 0.0027
Next Token : pal, Posbility: 0.0137
Next Token : (, Posbility: 0.0155
Next Token : n, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0092
Next Token :  >=, Posbility: 0.0092
Next Token :  , Posbility: 0.0684
Next Token :  =, Posbility: 0.0684
Next Token :  %, Posbility: 0.8320
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0009
Next Token :  12, Posbility: 0.0009
Next Token :  10, Posbility: 0.0063
Next Token :  4, Posbility: 0.0469
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 7, Posbility: 0.0026
Next Token : 6, Posbility: 0.0054
Next Token : 5, Posbility: 0.0054
Next Token : 3, Posbility: 0.1797
Next Token : 2, Posbility: 0.8047
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0003
Next Token :  , Posbility: 0.0040
Next Token :  ==, Posbility: 0.0040
Next Token :  !=, Posbility: 0.0046
Next Token :  =, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4, Posbility: 0.0003
Next Token :  -1, Posbility: 0.0009
Next Token :  , Posbility: 0.0171
Next Token :  1, Posbility: 0.0466
Next Token :  0, Posbility: 0.9336
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token :  ||, Posbility: 0.0005
Next Token :  and, Posbility: 0.0031
Next Token :  &&, Posbility: 0.0059
Next Token :  then, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  -1, Posbility: 0.0008
Next Token : 
, Posbility: 0.0062
Next Token :  0, Posbility: 0.0170
Next Token :  1, Posbility: 0.0461
Next Token :  , Posbility: 0.9258
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0011
Next Token : (, Posbility: 0.0048
Next Token : 2, Posbility: 0.0102
Next Token : n, Posbility: 0.0586
Next Token : pal, Posbility: 0.9180
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then pal
 score:False
Error type: noerr
---------------------------
Next Token : nd, Posbility: 0.0000
Next Token : inv, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : in, Posbility: 0.0000
Next Token : ind, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palind
 score:False
Error type: noerr
---------------------------
Next Token : Rom, Posbility: 0.0000
Next Token : ron, Posbility: 0.0000
Next Token : roman, Posbility: 0.0000
Next Token : ROM, Posbility: 0.0000
Next Token : rom, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrom
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ed, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_
 score:False
Error type: noerr
---------------------------
Next Token : for, Posbility: 0.0000
Next Token : from, Posbility: 0.0000
Next Token : pal, Posbility: 0.0000
Next Token : int, Posbility: 0.0000
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of
 score:False
Error type: noerr
---------------------------
Next Token : int, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_
 score:False
Error type: noerr
---------------------------
Next Token : pair, Posbility: 0.0000
Next Token : even, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : odd, Posbility: 0.0000
Next Token : int, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0001
Next Token :  (1, Posbility: 0.0002
Next Token : (, Posbility: 0.0008
Next Token :  ((, Posbility: 0.0025
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int 
 score:False
Error type: noerr
---------------------------
Next Token : pal, Posbility: 0.0000
Next Token : (1), Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : n, Posbility: 0.0041
Next Token : (, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : -, Posbility: 0.0001
Next Token : 3, Posbility: 0.0003
Next Token : 2, Posbility: 0.0015
Next Token : pal, Posbility: 0.0022
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ), Posbility: 0.0005
Next Token :  *, Posbility: 0.0005
Next Token : -1), Posbility: 0.0009
Next Token :  +, Posbility: 0.0292
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -3, Posbility: 0.0001
Next Token : //, Posbility: 0.0001
Next Token : -2, Posbility: 0.0001
Next Token : /, Posbility: 0.0041
Next Token : -, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0008
Next Token :  , Posbility: 0.0021
Next Token :  3), Posbility: 0.0157
Next Token :  2), Posbility: 0.1167
Next Token :  1), Posbility: 0.8633
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
 score:False
Error type: noerr
---------------------------
Next Token :  else, Posbility: 0.0038
Next Token :  , Posbility: 0.0072
Next Token :  +, Posbility: 0.0081
Next Token : 

, Posbility: 0.0364
Next Token : 
, Posbility: 0.9414
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)

 score:False
Error type: noerr
---------------------------
Next Token : endif, Posbility: 0.0002
Next Token : 

, Posbility: 0.0005
Next Token : end, Posbility: 0.0012
Next Token : else, Posbility: 0.0025
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : elif, Posbility: 0.0002
Next Token : |, Posbility: 0.0013
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0039
Next Token : 
, Posbility: 0.0082
Next Token :  fail, Posbility: 0.0134
Next Token :  0, Posbility: 0.0153
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0063
Next Token : assert, Posbility: 0.0092
Next Token : pal, Posbility: 0.0118
Next Token : n, Posbility: 0.0152
Next Token : if, Posbility: 0.9375
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  true, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  not, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : Pal, Posbility: 0.0001
Next Token : pal, Posbility: 0.0004
Next Token : (, Posbility: 0.0019
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0007
Next Token :  >=, Posbility: 0.0007
Next Token :  , Posbility: 0.0085
Next Token :  =, Posbility: 0.0085
Next Token :  %, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  10, Posbility: 0.0001
Next Token :  1, Posbility: 0.0002
Next Token :  4, Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 7, Posbility: 0.0001
Next Token : 5, Posbility: 0.0003
Next Token : 6, Posbility: 0.0003
Next Token : 3, Posbility: 0.0032
Next Token : 2, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0009
Next Token :  , Posbility: 0.0009
Next Token :  !=, Posbility: 0.0009
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4, Posbility: 0.0000
Next Token :  -1, Posbility: 0.0009
Next Token :  , Posbility: 0.0024
Next Token :  0, Posbility: 0.0179
Next Token :  1, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0001
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0002
Next Token : 
, Posbility: 0.0012
Next Token :  1, Posbility: 0.0032
Next Token :  0, Posbility: 0.0041
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : (, Posbility: 0.0005
Next Token : 2, Posbility: 0.0007
Next Token : n, Posbility: 0.0052
Next Token : pal, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then pal
 score:False
Error type: noerr
---------------------------
Next Token : inf, Posbility: 0.0000
Next Token : nd, Posbility: 0.0000
Next Token : inv, Posbility: 0.0000
Next Token : in, Posbility: 0.0000
Next Token : ind, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palind
 score:False
Error type: noerr
---------------------------
Next Token : ron, Posbility: 0.0000
Next Token : Rom, Posbility: 0.0000
Next Token : roman, Posbility: 0.0000
Next Token : ROM, Posbility: 0.0000
Next Token : rom, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrom
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_
 score:False
Error type: noerr
---------------------------
Next Token :  of, Posbility: 0.0000
Next Token : for, Posbility: 0.0000
Next Token : from, Posbility: 0.0000
Next Token : int, Posbility: 0.0000
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : int, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : in, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : int, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token :  ((, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int 
 score:False
Error type: noerr
---------------------------
Next Token : (-1), Posbility: 0.0000
Next Token : (0), Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : n, Posbility: 0.0006
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : pal, Posbility: 0.0001
Next Token : 2, Posbility: 0.0003
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1), Posbility: 0.0001
Next Token :  -1), Posbility: 0.0001
Next Token : ), Posbility: 0.0001
Next Token :  +, Posbility: 0.0028
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : âˆ’, Posbility: 0.0000
Next Token : -3, Posbility: 0.0000
Next Token : /, Posbility: 0.0001
Next Token : -2, Posbility: 0.0002
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0024
Next Token :  4), Posbility: 0.0024
Next Token :  1), Posbility: 0.0176
Next Token :  3), Posbility: 0.0176
Next Token :  2), Posbility: 0.9570
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0030
Next Token :  in, Posbility: 0.0034
Next Token :  +, Posbility: 0.0038
Next Token : 

, Posbility: 0.1621
Next Token : 
, Posbility: 0.8242
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0031
Next Token : end, Posbility: 0.0038
Next Token : 

, Posbility: 0.0091
Next Token : else, Posbility: 0.0339
Next Token :   , Posbility: 0.9297
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0005
Next Token : 
, Posbility: 0.0010
Next Token : in, Posbility: 0.0017
Next Token : |, Posbility: 0.0085
Next Token : else, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  error, Posbility: 0.0183
Next Token : 
, Posbility: 0.0266
Next Token :  fail, Posbility: 0.0498
Next Token :  0, Posbility: 0.0820
Next Token :  , Posbility: 0.7773
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0117
Next Token : raise, Posbility: 0.0281
Next Token : n, Posbility: 0.0317
Next Token : assert, Posbility: 0.0525
Next Token : if, Posbility: 0.8203
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0003
Next Token :  int, Posbility: 0.0004
Next Token :  0, Posbility: 0.0005
Next Token :  not, Posbility: 0.0007
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0009
Next Token : Pal, Posbility: 0.0010
Next Token : pal, Posbility: 0.0035
Next Token : (, Posbility: 0.0085
Next Token : n, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0038
Next Token :  >=, Posbility: 0.0038
Next Token :  , Posbility: 0.0281
Next Token :  =, Posbility: 0.0281
Next Token :  %, Posbility: 0.9297
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0003
Next Token :  12, Posbility: 0.0003
Next Token :  10, Posbility: 0.0009
Next Token :  4, Posbility: 0.0179
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 7, Posbility: 0.0009
Next Token : 6, Posbility: 0.0023
Next Token : 5, Posbility: 0.0023
Next Token : 3, Posbility: 0.0596
Next Token : 2, Posbility: 0.9336
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0001
Next Token :  , Posbility: 0.0012
Next Token :  !=, Posbility: 0.0013
Next Token :  ==, Posbility: 0.0015
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4, Posbility: 0.0001
Next Token :  -1, Posbility: 0.0001
Next Token :  , Posbility: 0.0067
Next Token :  1, Posbility: 0.0067
Next Token :  0, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  ||, Posbility: 0.0001
Next Token :  and, Posbility: 0.0006
Next Token :  &&, Posbility: 0.0008
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  -1, Posbility: 0.0003
Next Token : 
, Posbility: 0.0009
Next Token :  0, Posbility: 0.0066
Next Token :  1, Posbility: 0.0178
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0003
Next Token : (, Posbility: 0.0015
Next Token : 2, Posbility: 0.0031
Next Token : n, Posbility: 0.0228
Next Token : pal, Posbility: 0.9688
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then pal
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : inv, Posbility: 0.0000
Next Token : nd, Posbility: 0.0000
Next Token : in, Posbility: 0.0000
Next Token : ind, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palind
 score:False
Error type: noerr
---------------------------
Next Token : Rom, Posbility: 0.0000
Next Token : ron, Posbility: 0.0000
Next Token : roman, Posbility: 0.0000
Next Token : ROM, Posbility: 0.0000
Next Token : rom, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrom
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ed, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_
 score:False
Error type: noerr
---------------------------
Next Token : pal, Posbility: 0.0000
Next Token : for, Posbility: 0.0000
Next Token : from, Posbility: 0.0000
Next Token : int, Posbility: 0.0000
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of
 score:False
Error type: noerr
---------------------------
Next Token : int, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_
 score:False
Error type: noerr
---------------------------
Next Token : string, Posbility: 0.0000
Next Token : num, Posbility: 0.0000
Next Token : odd, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : int, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : (, Posbility: 0.0004
Next Token :  ((, Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int 
 score:False
Error type: noerr
---------------------------
Next Token : (0), Posbility: 0.0000
Next Token : (1), Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : n, Posbility: 0.0012
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : next, Posbility: 0.0001
Next Token : 3, Posbility: 0.0001
Next Token : 2, Posbility: 0.0005
Next Token : pal, Posbility: 0.0006
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ), Posbility: 0.0003
Next Token :  -1), Posbility: 0.0003
Next Token : -1), Posbility: 0.0003
Next Token :  +, Posbility: 0.0110
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : +1), Posbility: 0.0000
Next Token : -3, Posbility: 0.0000
Next Token : -2, Posbility: 0.0000
Next Token : /, Posbility: 0.0009
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0), Posbility: 0.0003
Next Token :  , Posbility: 0.0009
Next Token :  3), Posbility: 0.0066
Next Token :  2), Posbility: 0.0178
Next Token :  1), Posbility: 0.9727
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0013
Next Token :  else, Posbility: 0.0019
Next Token :  , Posbility: 0.0021
Next Token : 

, Posbility: 0.0140
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0002
Next Token : 

, Posbility: 0.0002
Next Token : end, Posbility: 0.0005
Next Token : else, Posbility: 0.0015
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : //, Posbility: 0.0001
Next Token : elif, Posbility: 0.0001
Next Token : |, Posbility: 0.0003
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0024
Next Token : 
, Posbility: 0.0057
Next Token :  fail, Posbility: 0.0074
Next Token :  0, Posbility: 0.0107
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0040
Next Token : assert, Posbility: 0.0045
Next Token : pal, Posbility: 0.0051
Next Token : n, Posbility: 0.0084
Next Token : if, Posbility: 0.9688
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :  0, Posbility: 0.0001
Next Token :  not, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : Pal, Posbility: 0.0001
Next Token : pal, Posbility: 0.0002
Next Token : (, Posbility: 0.0013
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0003
Next Token :  >=, Posbility: 0.0004
Next Token :  , Posbility: 0.0041
Next Token :  =, Posbility: 0.0041
Next Token :  %, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  10, Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  4, Posbility: 0.0009
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 8, Posbility: 0.0000
Next Token : 6, Posbility: 0.0001
Next Token : 5, Posbility: 0.0001
Next Token : 3, Posbility: 0.0012
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token :  !=, Posbility: 0.0003
Next Token :  ==, Posbility: 0.0006
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token :  -1, Posbility: 0.0003
Next Token :  0, Posbility: 0.0067
Next Token :  1, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0001
Next Token : 
, Posbility: 0.0004
Next Token :  1, Posbility: 0.0009
Next Token :  0, Posbility: 0.0015
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Pal, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : 2, Posbility: 0.0003
Next Token : n, Posbility: 0.0025
Next Token : pal, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then pal
 score:False
Error type: noerr
---------------------------
Next Token : inf, Posbility: 0.0000
Next Token : nd, Posbility: 0.0000
Next Token : inv, Posbility: 0.0000
Next Token : in, Posbility: 0.0000
Next Token : ind, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palind
 score:False
Error type: noerr
---------------------------
Next Token : rim, Posbility: 0.0000
Next Token : Rom, Posbility: 0.0000
Next Token : roman, Posbility: 0.0000
Next Token : ROM, Posbility: 0.0000
Next Token : rom, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrom
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_
 score:False
Error type: noerr
---------------------------
Next Token : for, Posbility: 0.0000
Next Token : from, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : int, Posbility: 0.0000
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of
 score:False
Error type: noerr
---------------------------
Next Token : int, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_
 score:False
Error type: noerr
---------------------------
Next Token : it, Posbility: 0.0000
Next Token : in, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : int, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int 
 score:False
Error type: noerr
---------------------------
Next Token : (-1), Posbility: 0.0000
Next Token : (0), Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : n, Posbility: 0.0003
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : pal, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  â€“, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token :  -1), Posbility: 0.0000
Next Token :  +, Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : âˆ’, Posbility: 0.0000
Next Token : -3, Posbility: 0.0000
Next Token : /, Posbility: 0.0001
Next Token : -2, Posbility: 0.0001
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0009
Next Token :  2);, Posbility: 0.0009
Next Token :  3), Posbility: 0.0024
Next Token :  1), Posbility: 0.0067
Next Token :  2), Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0014
Next Token :  else, Posbility: 0.0014
Next Token :  in, Posbility: 0.0018
Next Token : 

, Posbility: 0.0845
Next Token : 
, Posbility: 0.9102
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)

 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0014
Next Token : ;, Posbility: 0.0019
Next Token : 

, Posbility: 0.0037
Next Token : else, Posbility: 0.0212
Next Token :   , Posbility: 0.9648
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token : let, Posbility: 0.0004
Next Token : in, Posbility: 0.0010
Next Token : |, Posbility: 0.0028
Next Token : else, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  error, Posbility: 0.0103
Next Token : 
, Posbility: 0.0170
Next Token :  fail, Posbility: 0.0317
Next Token :  0, Posbility: 0.0864
Next Token :  , Posbility: 0.8203
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0088
Next Token : raise, Posbility: 0.0145
Next Token : n, Posbility: 0.0211
Next Token : assert, Posbility: 0.0211
Next Token : if, Posbility: 0.8984
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  int, Posbility: 0.0002
Next Token :  0, Posbility: 0.0003
Next Token :  not, Posbility: 0.0004
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0004
Next Token : Pal, Posbility: 0.0004
Next Token : pal, Posbility: 0.0012
Next Token : (, Posbility: 0.0052
Next Token : n, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0018
Next Token :  >=, Posbility: 0.0023
Next Token :  , Posbility: 0.0223
Next Token :  =, Posbility: 0.0223
Next Token :  %, Posbility: 0.9492
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  12, Posbility: 0.0003
Next Token :  1, Posbility: 0.0005
Next Token :  10, Posbility: 0.0015
Next Token :  4, Posbility: 0.0179
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 7, Posbility: 0.0004
Next Token : 6, Posbility: 0.0010
Next Token : 5, Posbility: 0.0010
Next Token : 3, Posbility: 0.0229
Next Token : 2, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0006
Next Token :  !=, Posbility: 0.0007
Next Token :  ==, Posbility: 0.0009
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4, Posbility: 0.0001
Next Token :  -1, Posbility: 0.0001
Next Token :  , Posbility: 0.0067
Next Token :  1, Posbility: 0.0067
Next Token :  0, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  ||, Posbility: 0.0001
Next Token :  and, Posbility: 0.0002
Next Token :  &&, Posbility: 0.0003
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0001
Next Token : 
, Posbility: 0.0009
Next Token :  0, Posbility: 0.0025
Next Token :  1, Posbility: 0.0067
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0002
Next Token : (, Posbility: 0.0007
Next Token : 2, Posbility: 0.0015
Next Token : n, Posbility: 0.0085
Next Token : pal, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then pal
 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0000
Next Token : inv, Posbility: 0.0000
Next Token : nd, Posbility: 0.0000
Next Token : in, Posbility: 0.0000
Next Token : ind, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palind
 score:False
Error type: noerr
---------------------------
Next Token : rim, Posbility: 0.0000
Next Token : ron, Posbility: 0.0000
Next Token : roman, Posbility: 0.0000
Next Token : ROM, Posbility: 0.0000
Next Token : rom, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrom
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_
 score:False
Error type: noerr
---------------------------
Next Token :  of, Posbility: 0.0000
Next Token : for, Posbility: 0.0000
Next Token : from, Posbility: 0.0000
Next Token : int, Posbility: 0.0000
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of
 score:False
Error type: noerr
---------------------------
Next Token : int, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_
 score:False
Error type: noerr
---------------------------
Next Token :  int, Posbility: 0.0000
Next Token : it, Posbility: 0.0000
Next Token : num, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : int, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int 
 score:False
Error type: noerr
---------------------------
Next Token : (0), Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (1), Posbility: 0.0000
Next Token : n, Posbility: 0.0006
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : next, Posbility: 0.0000
Next Token : pal, Posbility: 0.0001
Next Token : 2, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  -1), Posbility: 0.0002
Next Token : -1), Posbility: 0.0002
Next Token : ), Posbility: 0.0002
Next Token :  +, Posbility: 0.0052
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : +1), Posbility: 0.0000
Next Token : -3, Posbility: 0.0000
Next Token : -2, Posbility: 0.0000
Next Token : /, Posbility: 0.0004
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0), Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  3), Posbility: 0.0025
Next Token :  2), Posbility: 0.0067
Next Token :  1), Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0005
Next Token :  , Posbility: 0.0010
Next Token :  else, Posbility: 0.0012
Next Token : 

, Posbility: 0.0059
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)

 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : ;, Posbility: 0.0002
Next Token : end, Posbility: 0.0004
Next Token : else, Posbility: 0.0019
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : elif, Posbility: 0.0001
Next Token : //, Posbility: 0.0001
Next Token : |, Posbility: 0.0002
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0017
Next Token : 
, Posbility: 0.0031
Next Token :  fail, Posbility: 0.0035
Next Token :  0, Posbility: 0.0075
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : assert, Posbility: 0.0024
Next Token : (, Posbility: 0.0027
Next Token : pal, Posbility: 0.0035
Next Token : n, Posbility: 0.0051
Next Token : if, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : Pal, Posbility: 0.0000
Next Token : pal, Posbility: 0.0001
Next Token : (, Posbility: 0.0009
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0002
Next Token :  >=, Posbility: 0.0002
Next Token :  , Posbility: 0.0022
Next Token :  =, Posbility: 0.0022
Next Token :  %, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  10, Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  4, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 8, Posbility: 0.0000
Next Token : 6, Posbility: 0.0001
Next Token : 5, Posbility: 0.0001
Next Token : 3, Posbility: 0.0006
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  !=, Posbility: 0.0002
Next Token :  ==, Posbility: 0.0006
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  -1, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  0, Posbility: 0.0025
Next Token :  1, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  1, Posbility: 0.0006
Next Token :  0, Posbility: 0.0009
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Pal, Posbility: 0.0001
Next Token : 2, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 0.0017
Next Token : pal, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then pal
 score:False
Error type: noerr
---------------------------
Next Token : inf, Posbility: 0.0000
Next Token : nd, Posbility: 0.0000
Next Token : inv, Posbility: 0.0000
Next Token : in, Posbility: 0.0000
Next Token : ind, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palind
 score:False
Error type: noerr
---------------------------
Next Token : ron, Posbility: 0.0000
Next Token : Rom, Posbility: 0.0000
Next Token : roman, Posbility: 0.0000
Next Token : ROM, Posbility: 0.0000
Next Token : rom, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrom
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_
 score:False
Error type: noerr
---------------------------
Next Token : from, Posbility: 0.0000
Next Token : for, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : int, Posbility: 0.0000
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of
 score:False
Error type: noerr
---------------------------
Next Token : int, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_
 score:False
Error type: noerr
---------------------------
Next Token : it, Posbility: 0.0000
Next Token : in, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token : int, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int 
 score:False
Error type: noerr
---------------------------
Next Token : (-1), Posbility: 0.0000
Next Token : (0), Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : n, Posbility: 0.0001
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : pal, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  â€“, Posbility: 0.0000
Next Token :  -1), Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token :  +, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : âˆ’, Posbility: 0.0000
Next Token : -3, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : -2, Posbility: 0.0001
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token :  2);, Posbility: 0.0003
Next Token :  1), Posbility: 0.0009
Next Token :  3), Posbility: 0.0009
Next Token :  2), Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0008
Next Token :  else, Posbility: 0.0009
Next Token :  , Posbility: 0.0009
Next Token : 

, Posbility: 0.0420
Next Token : 
, Posbility: 0.9531
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)

 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0007
Next Token : 

, Posbility: 0.0012
Next Token : ;, Posbility: 0.0014
Next Token : else, Posbility: 0.0131
Next Token :   , Posbility: 0.9805
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0003
Next Token : let, Posbility: 0.0005
Next Token : in, Posbility: 0.0009
Next Token : |, Posbility: 0.0019
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0076
Next Token : 
, Posbility: 0.0126
Next Token :  fail, Posbility: 0.0161
Next Token :  0, Posbility: 0.0564
Next Token :  , Posbility: 0.8828
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0071
Next Token : raise, Posbility: 0.0071
Next Token : assert, Posbility: 0.0104
Next Token : n, Posbility: 0.0151
Next Token : if, Posbility: 0.9375
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  int, Posbility: 0.0001
Next Token :  not, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0002
Next Token : Pal, Posbility: 0.0002
Next Token : pal, Posbility: 0.0005
Next Token : (, Posbility: 0.0032
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0011
Next Token :  >=, Posbility: 0.0019
Next Token :  , Posbility: 0.0138
Next Token :  =, Posbility: 0.0138
Next Token :  %, Posbility: 0.9688
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  100, Posbility: 0.0001
Next Token :  1, Posbility: 0.0003
Next Token :  10, Posbility: 0.0005
Next Token :  4, Posbility: 0.0067
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 7, Posbility: 0.0003
Next Token : 6, Posbility: 0.0006
Next Token : 5, Posbility: 0.0007
Next Token : 3, Posbility: 0.0140
Next Token : 2, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token :  !=, Posbility: 0.0004
Next Token :  ==, Posbility: 0.0006
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4, Posbility: 0.0000
Next Token :  -1, Posbility: 0.0001
Next Token :  , Posbility: 0.0025
Next Token :  1, Posbility: 0.0067
Next Token :  0, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  ||, Posbility: 0.0000
Next Token :  and, Posbility: 0.0001
Next Token :  &&, Posbility: 0.0001
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  -1, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  0, Posbility: 0.0025
Next Token :  1, Posbility: 0.0041
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : (, Posbility: 0.0004
Next Token : 2, Posbility: 0.0007
Next Token : n, Posbility: 0.0052
Next Token : pal, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then pal
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : nd, Posbility: 0.0000
Next Token : inv, Posbility: 0.0000
Next Token : in, Posbility: 0.0000
Next Token : ind, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palind
 score:False
Error type: noerr
---------------------------
Next Token : rim, Posbility: 0.0000
Next Token : ron, Posbility: 0.0000
Next Token : roman, Posbility: 0.0000
Next Token : ROM, Posbility: 0.0000
Next Token : rom, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrom
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ed, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_
 score:False
Error type: noerr
---------------------------
Next Token :  of, Posbility: 0.0000
Next Token : for, Posbility: 0.0000
Next Token : from, Posbility: 0.0000
Next Token : int, Posbility: 0.0000
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of
 score:False
Error type: noerr
---------------------------
Next Token : int, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_
 score:False
Error type: noerr
---------------------------
Next Token :  int, Posbility: 0.0000
Next Token : it, Posbility: 0.0000
Next Token : num, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : int, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int 
 score:False
Error type: noerr
---------------------------
Next Token : (0), Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (1), Posbility: 0.0000
Next Token : n, Posbility: 0.0004
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : next, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : pal, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1), Posbility: 0.0001
Next Token :  -1), Posbility: 0.0002
Next Token : ), Posbility: 0.0002
Next Token :  +, Posbility: 0.0036
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -3, Posbility: 0.0000
Next Token : âˆ’, Posbility: 0.0000
Next Token : -2, Posbility: 0.0000
Next Token : /, Posbility: 0.0002
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4), Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  3), Posbility: 0.0009
Next Token :  2), Posbility: 0.0025
Next Token :  1), Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0003
Next Token :  , Posbility: 0.0006
Next Token :  else, Posbility: 0.0007
Next Token : 

, Posbility: 0.0036
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)

 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : ;, Posbility: 0.0002
Next Token : end, Posbility: 0.0003
Next Token : else, Posbility: 0.0015
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : elif, Posbility: 0.0000
Next Token : //, Posbility: 0.0001
Next Token : |, Posbility: 0.0002
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0013
Next Token : 
, Posbility: 0.0024
Next Token :  fail, Posbility: 0.0024
Next Token :  0, Posbility: 0.0066
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : assert, Posbility: 0.0015
Next Token : (, Posbility: 0.0024
Next Token : pal, Posbility: 0.0024
Next Token : n, Posbility: 0.0040
Next Token : if, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : Pal, Posbility: 0.0000
Next Token : pal, Posbility: 0.0000
Next Token : (, Posbility: 0.0007
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0001
Next Token :  >=, Posbility: 0.0002
Next Token :  , Posbility: 0.0022
Next Token :  =, Posbility: 0.0022
Next Token :  %, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  10, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  4, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 8, Posbility: 0.0000
Next Token : 6, Posbility: 0.0000
Next Token : 5, Posbility: 0.0001
Next Token : 3, Posbility: 0.0005
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  !=, Posbility: 0.0002
Next Token :  ==, Posbility: 0.0005
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  -1, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  0, Posbility: 0.0025
Next Token :  1, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  1, Posbility: 0.0003
Next Token :  0, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Pal, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 0.0010
Next Token : pal, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then pal
 score:False
Error type: noerr
---------------------------
Next Token : inf, Posbility: 0.0000
Next Token : nd, Posbility: 0.0000
Next Token : inv, Posbility: 0.0000
Next Token : in, Posbility: 0.0000
Next Token : ind, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palind
 score:False
Error type: noerr
---------------------------
Next Token : Rom, Posbility: 0.0000
Next Token : rim, Posbility: 0.0000
Next Token : ROM, Posbility: 0.0000
Next Token : roman, Posbility: 0.0000
Next Token : rom, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrom
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_
 score:False
Error type: noerr
---------------------------
Next Token : for, Posbility: 0.0000
Next Token : from, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : int, Posbility: 0.0000
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of
 score:False
Error type: noerr
---------------------------
Next Token : int, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_
 score:False
Error type: noerr
---------------------------
Next Token : in, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token : int, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int 
 score:False
Error type: noerr
---------------------------
Next Token : (-1), Posbility: 0.0000
Next Token : (0), Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : n, Posbility: 0.0001
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : pal, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  â€“, Posbility: 0.0000
Next Token :  -1), Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token :  +, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : âˆ’, Posbility: 0.0000
Next Token : -3, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : -2, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token :  2);, Posbility: 0.0006
Next Token :  1), Posbility: 0.0009
Next Token :  3), Posbility: 0.0009
Next Token :  2), Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0005
Next Token :  , Posbility: 0.0006
Next Token :  else, Posbility: 0.0007
Next Token : 

, Posbility: 0.0229
Next Token : 
, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)

 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0005
Next Token : 

, Posbility: 0.0006
Next Token : ;, Posbility: 0.0009
Next Token : else, Posbility: 0.0085
Next Token :   , Posbility: 0.9844
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0003
Next Token : let, Posbility: 0.0005
Next Token : in, Posbility: 0.0010
Next Token : |, Posbility: 0.0012
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0061
Next Token : 
, Posbility: 0.0089
Next Token :  fail, Posbility: 0.0115
Next Token :  0, Posbility: 0.0454
Next Token :  , Posbility: 0.9102
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : raise, Posbility: 0.0045
Next Token : (, Posbility: 0.0050
Next Token : assert, Posbility: 0.0057
Next Token : n, Posbility: 0.0094
Next Token : if, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  int, Posbility: 0.0001
Next Token :  not, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : Pal, Posbility: 0.0002
Next Token : pal, Posbility: 0.0003
Next Token : (, Posbility: 0.0028
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0009
Next Token :  >=, Posbility: 0.0011
Next Token :  , Posbility: 0.0085
Next Token :  =, Posbility: 0.0085
Next Token :  %, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  12, Posbility: 0.0001
Next Token :  1, Posbility: 0.0002
Next Token :  10, Posbility: 0.0003
Next Token :  4, Posbility: 0.0032
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 8, Posbility: 0.0001
Next Token : 6, Posbility: 0.0004
Next Token : 5, Posbility: 0.0005
Next Token : 3, Posbility: 0.0067
Next Token : 2, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  !=, Posbility: 0.0002
Next Token :  ==, Posbility: 0.0004
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4, Posbility: 0.0001
Next Token :  -1, Posbility: 0.0001
Next Token :  , Posbility: 0.0025
Next Token :  1, Posbility: 0.0067
Next Token :  0, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ||, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  and, Posbility: 0.0001
Next Token :  &&, Posbility: 0.0001
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  0, Posbility: 0.0015
Next Token :  1, Posbility: 0.0041
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : (, Posbility: 0.0004
Next Token : 2, Posbility: 0.0006
Next Token : n, Posbility: 0.0059
Next Token : pal, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then pal
 score:False
Error type: noerr
---------------------------
Next Token : inf, Posbility: 0.0000
Next Token : inv, Posbility: 0.0000
Next Token : nd, Posbility: 0.0000
Next Token : in, Posbility: 0.0000
Next Token : ind, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palind
 score:False
Error type: noerr
---------------------------
Next Token : ron, Posbility: 0.0000
Next Token : rog, Posbility: 0.0000
Next Token : ROM, Posbility: 0.0000
Next Token : roman, Posbility: 0.0000
Next Token : rom, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrom
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ed, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_
 score:False
Error type: noerr
---------------------------
Next Token :  of, Posbility: 0.0000
Next Token : from, Posbility: 0.0000
Next Token : for, Posbility: 0.0000
Next Token : int, Posbility: 0.0000
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of
 score:False
Error type: noerr
---------------------------
Next Token : int, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_
 score:False
Error type: noerr
---------------------------
Next Token : it, Posbility: 0.0000
Next Token : num, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : int, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int 
 score:False
Error type: noerr
---------------------------
Next Token : (0), Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (1), Posbility: 0.0000
Next Token : n, Posbility: 0.0003
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : next, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : pal, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1), Posbility: 0.0001
Next Token :  -1), Posbility: 0.0001
Next Token : ), Posbility: 0.0001
Next Token :  +, Posbility: 0.0022
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -3, Posbility: 0.0000
Next Token : âˆ’, Posbility: 0.0000
Next Token : -2, Posbility: 0.0000
Next Token : /, Posbility: 0.0001
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4), Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  3), Posbility: 0.0009
Next Token :  2), Posbility: 0.0025
Next Token :  1), Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0002
Next Token :  , Posbility: 0.0005
Next Token :  else, Posbility: 0.0006
Next Token : 

, Posbility: 0.0019
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)

 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : ;, Posbility: 0.0002
Next Token : end, Posbility: 0.0002
Next Token : else, Posbility: 0.0015
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : elif, Posbility: 0.0000
Next Token : //, Posbility: 0.0000
Next Token : |, Posbility: 0.0001
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0010
Next Token :  fail, Posbility: 0.0019
Next Token : 
, Posbility: 0.0022
Next Token :  0, Posbility: 0.0052
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : assert, Posbility: 0.0010
Next Token : (, Posbility: 0.0017
Next Token : pal, Posbility: 0.0017
Next Token : n, Posbility: 0.0028
Next Token : if, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : Pal, Posbility: 0.0000
Next Token : pal, Posbility: 0.0000
Next Token : (, Posbility: 0.0006
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0001
Next Token :  >=, Posbility: 0.0001
Next Token :  , Posbility: 0.0013
Next Token :  =, Posbility: 0.0013
Next Token :  %, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  10, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  4, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 8, Posbility: 0.0000
Next Token : 6, Posbility: 0.0000
Next Token : 5, Posbility: 0.0000
Next Token : 3, Posbility: 0.0003
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  !=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0003
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  -1, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  0, Posbility: 0.0041
Next Token :  1, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  1, Posbility: 0.0003
Next Token :  0, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Pal, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 0.0010
Next Token : pal, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then pal
 score:False
Error type: noerr
---------------------------
Next Token : inf, Posbility: 0.0000
Next Token : nd, Posbility: 0.0000
Next Token : inv, Posbility: 0.0000
Next Token : in, Posbility: 0.0000
Next Token : ind, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palind
 score:False
Error type: noerr
---------------------------
Next Token : ROM, Posbility: 0.0000
Next Token : rim, Posbility: 0.0000
Next Token : roman, Posbility: 0.0000
Next Token : Rom, Posbility: 0.0000
Next Token : rom, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrom
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_
 score:False
Error type: noerr
---------------------------
Next Token : for, Posbility: 0.0000
Next Token : from, Posbility: 0.0000
Next Token : int, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of
 score:False
Error type: noerr
---------------------------
Next Token : int, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_
 score:False
Error type: noerr
---------------------------
Next Token : it, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : in, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token : int, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int 
 score:False
Error type: noerr
---------------------------
Next Token : (0), Posbility: 0.0000
Next Token : (-1), Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : n, Posbility: 0.0001
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : pal, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  â€“, Posbility: 0.0000
Next Token :  -1), Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : âˆ’, Posbility: 0.0000
Next Token : -3, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : -2, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token :  2);, Posbility: 0.0003
Next Token :  1), Posbility: 0.0006
Next Token :  3), Posbility: 0.0006
Next Token :  2), Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0004
Next Token :  else, Posbility: 0.0005
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0159
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)

 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0003
Next Token : 

, Posbility: 0.0005
Next Token : ;, Posbility: 0.0008
Next Token : else, Posbility: 0.0067
Next Token :   , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0003
Next Token : in, Posbility: 0.0005
Next Token : let, Posbility: 0.0005
Next Token : |, Posbility: 0.0008
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0055
Next Token : 
, Posbility: 0.0071
Next Token :  fail, Posbility: 0.0081
Next Token :  0, Posbility: 0.0361
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : raise, Posbility: 0.0035
Next Token : assert, Posbility: 0.0040
Next Token : (, Posbility: 0.0045
Next Token : n, Posbility: 0.0065
Next Token : if, Posbility: 0.9688
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  int, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  not, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : Pal, Posbility: 0.0001
Next Token : pal, Posbility: 0.0002
Next Token : (, Posbility: 0.0022
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0007
Next Token :  >=, Posbility: 0.0011
Next Token :  , Posbility: 0.0085
Next Token :  =, Posbility: 0.0085
Next Token :  %, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  12, Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  10, Posbility: 0.0001
Next Token :  4, Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 8, Posbility: 0.0001
Next Token : 6, Posbility: 0.0002
Next Token : 5, Posbility: 0.0003
Next Token : 3, Posbility: 0.0036
Next Token : 2, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  !=, Posbility: 0.0002
Next Token :  ==, Posbility: 0.0004
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4, Posbility: 0.0000
Next Token :  -1, Posbility: 0.0000
Next Token :  , Posbility: 0.0009
Next Token :  1, Posbility: 0.0025
Next Token :  0, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  else, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  0, Posbility: 0.0019
Next Token :  1, Posbility: 0.0041
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : 2, Posbility: 0.0005
Next Token : n, Posbility: 0.0046
Next Token : pal, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then pal
 score:False
Error type: noerr
---------------------------
Next Token : inf, Posbility: 0.0000
Next Token : nd, Posbility: 0.0000
Next Token : inv, Posbility: 0.0000
Next Token : in, Posbility: 0.0000
Next Token : ind, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palind
 score:False
Error type: noerr
---------------------------
Next Token : ron, Posbility: 0.0000
Next Token : rim, Posbility: 0.0000
Next Token : ROM, Posbility: 0.0000
Next Token : roman, Posbility: 0.0000
Next Token : rom, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrom
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ed, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_
 score:False
Error type: noerr
---------------------------
Next Token : for, Posbility: 0.0000
Next Token : from, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : int, Posbility: 0.0000
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of
 score:False
Error type: noerr
---------------------------
Next Token : int, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_
 score:False
Error type: noerr
---------------------------
Next Token : float, Posbility: 0.0000
Next Token : it, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : int, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int
 score:False
Error type: noerr
---------------------------
Next Token :  (1, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int 
 score:False
Error type: noerr
---------------------------
Next Token : (-1), Posbility: 0.0000
Next Token : (0), Posbility: 0.0000
Next Token : (1), Posbility: 0.0000
Next Token : n, Posbility: 0.0002
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : next, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : pal, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1), Posbility: 0.0001
Next Token :  -1), Posbility: 0.0001
Next Token : ), Posbility: 0.0001
Next Token :  +, Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -3, Posbility: 0.0000
Next Token : âˆ’, Posbility: 0.0000
Next Token : -2, Posbility: 0.0000
Next Token : /, Posbility: 0.0001
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4), Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  3), Posbility: 0.0003
Next Token :  2), Posbility: 0.0009
Next Token :  1), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0001
Next Token :  else, Posbility: 0.0004
Next Token :  , Posbility: 0.0004
Next Token : 

, Posbility: 0.0013
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : end, Posbility: 0.0002
Next Token : else, Posbility: 0.0009
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : elif, Posbility: 0.0000
Next Token : //, Posbility: 0.0000
Next Token : |, Posbility: 0.0001
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0008
Next Token :  fail, Posbility: 0.0013
Next Token : 
, Posbility: 0.0017
Next Token :  0, Posbility: 0.0046
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : assert, Posbility: 0.0010
Next Token : pal, Posbility: 0.0017
Next Token : (, Posbility: 0.0019
Next Token : n, Posbility: 0.0031
Next Token : if, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : Pal, Posbility: 0.0000
Next Token : pal, Posbility: 0.0000
Next Token : (, Posbility: 0.0004
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0001
Next Token :  >=, Posbility: 0.0001
Next Token :  , Posbility: 0.0008
Next Token :  =, Posbility: 0.0008
Next Token :  %, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n %
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token :  10, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  4, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 8, Posbility: 0.0000
Next Token : 6, Posbility: 0.0000
Next Token : 5, Posbility: 0.0000
Next Token : 3, Posbility: 0.0003
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  !=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0003
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  -1, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  0, Posbility: 0.0025
Next Token :  1, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  1, Posbility: 0.0002
Next Token :  0, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Pal, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 0.0006
Next Token : pal, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then pal
 score:False
Error type: noerr
---------------------------
Next Token : nd, Posbility: 0.0000
Next Token : inf, Posbility: 0.0000
Next Token : inv, Posbility: 0.0000
Next Token : in, Posbility: 0.0000
Next Token : ind, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palind
 score:False
Error type: noerr
---------------------------
Next Token : ROM, Posbility: 0.0000
Next Token : rim, Posbility: 0.0000
Next Token : Rom, Posbility: 0.0000
Next Token : roman, Posbility: 0.0000
Next Token : rom, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrom
 score:False
Error type: noerr
---------------------------
Next Token : ed, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_
 score:False
Error type: noerr
---------------------------
Next Token : for, Posbility: 0.0000
Next Token : from, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : int, Posbility: 0.0000
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of
 score:False
Error type: noerr
---------------------------
Next Token : int, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_
 score:False
Error type: noerr
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : it, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token : int, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int 
 score:False
Error type: noerr
---------------------------
Next Token : (-1), Posbility: 0.0000
Next Token : (0), Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : pal, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  â€“, Posbility: 0.0000
Next Token :  -1), Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : âˆ’, Posbility: 0.0000
Next Token : -3, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : -2, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0002
Next Token :  2);, Posbility: 0.0003
Next Token :  3), Posbility: 0.0003
Next Token :  1), Posbility: 0.0004
Next Token :  2), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0003
Next Token :  else, Posbility: 0.0004
Next Token :  , Posbility: 0.0004
Next Token : 

, Posbility: 0.0110
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)

 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token : ;, Posbility: 0.0007
Next Token : else, Posbility: 0.0041
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0002
Next Token : |, Posbility: 0.0006
Next Token : in, Posbility: 0.0006
Next Token : let, Posbility: 0.0006
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else
 score:False
Error type: noerr
---------------------------
Next Token :  1, Posbility: 0.0056
Next Token :  fail, Posbility: 0.0056
Next Token : 
, Posbility: 0.0063
Next Token :  0, Posbility: 0.0361
Next Token :  , Posbility: 0.9336
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else 
 score:False
Error type: noerr
---------------------------
Next Token : assert, Posbility: 0.0027
Next Token : pal, Posbility: 0.0035
Next Token : (, Posbility: 0.0040
Next Token : n, Posbility: 0.0058
Next Token : if, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  not, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if 
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : Pal, Posbility: 0.0001
Next Token : pal, Posbility: 0.0001
Next Token : (, Posbility: 0.0019
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n
 score:False
Error type: noerr
---------------------------
Next Token :  ==, Posbility: 0.0004
Next Token :  >=, Posbility: 0.0007
Next Token :  =, Posbility: 0.0052
Next Token :  , Posbility: 0.0067
Next Token :  %, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n %
 score:False
Error type: noerr
---------------------------
Next Token :  12, Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  10, Posbility: 0.0001
Next Token :  4, Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 
 score:False
Error type: noerr
---------------------------
Next Token : 8, Posbility: 0.0001
Next Token : 6, Posbility: 0.0002
Next Token : 5, Posbility: 0.0003
Next Token : 3, Posbility: 0.0036
Next Token : 2, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2
 score:False
Error type: noerr
---------------------------
Next Token :  ~, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  !=, Posbility: 0.0002
Next Token :  ==, Posbility: 0.0003
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 =
 score:False
Error type: noerr
---------------------------
Next Token :  4, Posbility: 0.0000
Next Token :  10, Posbility: 0.0000
Next Token :  , Posbility: 0.0009
Next Token :  1, Posbility: 0.0009
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0
 score:False
Error type: noerr
---------------------------
Next Token :  else, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  0, Posbility: 0.0012
Next Token :  1, Posbility: 0.0025
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then 
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : 2, Posbility: 0.0003
Next Token : n, Posbility: 0.0036
Next Token : pal, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then pal
 score:False
Error type: noerr
---------------------------
Next Token : inf, Posbility: 0.0000
Next Token : inv, Posbility: 0.0000
Next Token : nd, Posbility: 0.0000
Next Token : in, Posbility: 0.0000
Next Token : ind, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palind
 score:False
Error type: noerr
---------------------------
Next Token : ron, Posbility: 0.0000
Next Token : rim, Posbility: 0.0000
Next Token : ROM, Posbility: 0.0000
Next Token : roman, Posbility: 0.0000
Next Token : rom, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrom
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ed, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_
 score:False
Error type: noerr
---------------------------
Next Token : for, Posbility: 0.0000
Next Token : from, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : int, Posbility: 0.0000
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of
 score:False
Error type: noerr
---------------------------
Next Token : int, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_
 score:False
Error type: noerr
---------------------------
Next Token : in, Posbility: 0.0000
Next Token : it, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token : int, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int 
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : (0), Posbility: 0.0000
Next Token : (1), Posbility: 0.0000
Next Token : n, Posbility: 0.0002
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : next, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : pal, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n
 score:False
Error type: noerr
---------------------------
Next Token : -1), Posbility: 0.0001
Next Token :  -1), Posbility: 0.0001
Next Token : ), Posbility: 0.0001
Next Token :  +, Posbility: 0.0015
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n 
 score:False
Error type: noerr
---------------------------
Next Token : ^, Posbility: 0.0000
Next Token : âˆ’, Posbility: 0.0000
Next Token : -2, Posbility: 0.0000
Next Token : /, Posbility: 0.0001
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n -
 score:False
Error type: noerr
---------------------------
Next Token :  4), Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  3), Posbility: 0.0003
Next Token :  2), Posbility: 0.0012
Next Token :  1), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0001
Next Token :  else, Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0012
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : end, Posbility: 0.0002
Next Token : else, Posbility: 0.0007
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : elif, Posbility: 0.0000
Next Token : //, Posbility: 0.0000
Next Token : |, Posbility: 0.0001
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else
 score:False
Error type: noerr
---------------------------
Next Token :  1, Posbility: 0.0012
Next Token :  fail, Posbility: 0.0013
Next Token : 
, Posbility: 0.0019
Next Token :  0, Posbility: 0.0052
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else 
 score:False
Error type: noerr
---------------------------
Next Token : assert, Posbility: 0.0007
Next Token : pal, Posbility: 0.0013
Next Token : (, Posbility: 0.0015
Next Token : n, Posbility: 0.0022
Next Token : if, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if 
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : Pal, Posbility: 0.0000
Next Token : pal, Posbility: 0.0000
Next Token : (, Posbility: 0.0004
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n
 score:False
Error type: noerr
---------------------------
Next Token :  <=, Posbility: 0.0001
Next Token :  >=, Posbility: 0.0001
Next Token :  , Posbility: 0.0008
Next Token :  =, Posbility: 0.0008
Next Token :  %, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n %
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token :  10, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  4, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 
 score:False
Error type: noerr
---------------------------
Next Token : 8, Posbility: 0.0000
Next Token : 6, Posbility: 0.0000
Next Token : 5, Posbility: 0.0000
Next Token : 3, Posbility: 0.0002
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  !=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 =
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  -1, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  0, Posbility: 0.0019
Next Token :  1, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1
 score:False
Error type: noerr
---------------------------
Next Token :  Then, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  0, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then 
 score:False
Error type: noerr
---------------------------
Next Token : Pal, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 0.0006
Next Token : pal, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then pal
 score:False
Error type: noerr
---------------------------
Next Token : inf, Posbility: 0.0000
Next Token : nd, Posbility: 0.0000
Next Token : inv, Posbility: 0.0000
Next Token : in, Posbility: 0.0000
Next Token : ind, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palind
 score:False
Error type: noerr
---------------------------
Next Token : ROM, Posbility: 0.0000
Next Token : Rom, Posbility: 0.0000
Next Token : roman, Posbility: 0.0000
Next Token : rim, Posbility: 0.0000
Next Token : rom, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrom
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_
 score:False
Error type: noerr
---------------------------
Next Token : for, Posbility: 0.0000
Next Token : from, Posbility: 0.0000
Next Token : int, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of
 score:False
Error type: noerr
---------------------------
Next Token : int, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_
 score:False
Error type: noerr
---------------------------
Next Token : in, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : float, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token : int, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int 
 score:False
Error type: noerr
---------------------------
Next Token : (-1), Posbility: 0.0000
Next Token : (0), Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : pal, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n
 score:False
Error type: noerr
---------------------------
Next Token :  â€“, Posbility: 0.0000
Next Token :  -1), Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n 
 score:False
Error type: noerr
---------------------------
Next Token : âˆ’, Posbility: 0.0000
Next Token : -3, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : -2, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n -
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0002
Next Token :  3), Posbility: 0.0002
Next Token :  2);, Posbility: 0.0002
Next Token :  1), Posbility: 0.0003
Next Token :  2), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0002
Next Token :  else, Posbility: 0.0003
Next Token :  , Posbility: 0.0004
Next Token : 

, Posbility: 0.0076
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)

 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token : ;, Posbility: 0.0006
Next Token : else, Posbility: 0.0036
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0002
Next Token : |, Posbility: 0.0004
Next Token : in, Posbility: 0.0004
Next Token : let, Posbility: 0.0005
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else
 score:False
Error type: noerr
---------------------------
Next Token :  1, Posbility: 0.0044
Next Token : 
, Posbility: 0.0056
Next Token :  fail, Posbility: 0.0056
Next Token :  0, Posbility: 0.0322
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else 
 score:False
Error type: noerr
---------------------------
Next Token : assert, Posbility: 0.0021
Next Token : pal, Posbility: 0.0027
Next Token : (, Posbility: 0.0035
Next Token : n, Posbility: 0.0045
Next Token : if, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  not, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if 
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : Pal, Posbility: 0.0000
Next Token : pal, Posbility: 0.0001
Next Token : (, Posbility: 0.0015
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n
 score:False
Error type: noerr
---------------------------
Next Token :  ==, Posbility: 0.0004
Next Token :  >=, Posbility: 0.0006
Next Token :  =, Posbility: 0.0040
Next Token :  , Posbility: 0.0052
Next Token :  %, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n %
 score:False
Error type: noerr
---------------------------
Next Token :  12, Posbility: 0.0000
Next Token :  10, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  4, Posbility: 0.0013
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 
 score:False
Error type: noerr
---------------------------
Next Token : 8, Posbility: 0.0001
Next Token : 6, Posbility: 0.0002
Next Token : 5, Posbility: 0.0003
Next Token : 3, Posbility: 0.0032
Next Token : 2, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2
 score:False
Error type: noerr
---------------------------
Next Token :  ~, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  !=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0003
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 =
 score:False
Error type: noerr
---------------------------
Next Token :  4, Posbility: 0.0000
Next Token :  10, Posbility: 0.0000
Next Token :  , Posbility: 0.0009
Next Token :  1, Posbility: 0.0009
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0
 score:False
Error type: noerr
---------------------------
Next Token :  else, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  0, Posbility: 0.0009
Next Token :  1, Posbility: 0.0025
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then 
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : 2, Posbility: 0.0003
Next Token : n, Posbility: 0.0028
Next Token : pal, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then pal
 score:False
Error type: noerr
---------------------------
Next Token : inf, Posbility: 0.0000
Next Token : nd, Posbility: 0.0000
Next Token : inv, Posbility: 0.0000
Next Token : in, Posbility: 0.0000
Next Token : ind, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palind
 score:False
Error type: noerr
---------------------------
Next Token : ron, Posbility: 0.0000
Next Token : ROM, Posbility: 0.0000
Next Token : roman, Posbility: 0.0000
Next Token : rim, Posbility: 0.0000
Next Token : rom, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrom
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ed, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_
 score:False
Error type: noerr
---------------------------
Next Token : for, Posbility: 0.0000
Next Token : from, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : int, Posbility: 0.0000
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of
 score:False
Error type: noerr
---------------------------
Next Token : int, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_
 score:False
Error type: noerr
---------------------------
Next Token : float, Posbility: 0.0000
Next Token : it, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token : int, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int 
 score:False
Error type: noerr
---------------------------
Next Token : (0), Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (1), Posbility: 0.0000
Next Token : n, Posbility: 0.0001
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : next, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : pal, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n
 score:False
Error type: noerr
---------------------------
Next Token : -1), Posbility: 0.0000
Next Token :  -1), Posbility: 0.0001
Next Token : ), Posbility: 0.0001
Next Token :  +, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n 
 score:False
Error type: noerr
---------------------------
Next Token : ^, Posbility: 0.0000
Next Token : âˆ’, Posbility: 0.0000
Next Token : -2, Posbility: 0.0000
Next Token : /, Posbility: 0.0001
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n -
 score:False
Error type: noerr
---------------------------
Next Token :  4), Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  3), Posbility: 0.0003
Next Token :  2), Posbility: 0.0009
Next Token :  1), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0001
Next Token :  else, Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0010
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : end, Posbility: 0.0002
Next Token : else, Posbility: 0.0008
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the next smallest palindrome of a specified integer, returned as an integer. *)
let rec palindrome_of_int n =
  if n < 0 then 0
  else if n = 0 then 1
  else if n = 1 then n
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  else if n % 2 = 1 then palindrome_of_int (n - 2)
  else if n % 2 = 0 then palindrome_of_int (n - 1)
  
 score:False


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>