code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  one, Posbility: 0.1001
Next Token :  check, Posbility: 0.1133
Next Token :  rec, Posbility: 0.1865
Next Token :  , Posbility: 0.2119
Next Token :  is, Posbility: 0.2402
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : O, Posbility: 0.0061
Next Token : 1, Posbility: 0.0079
Next Token : _1_, Posbility: 0.0079
Next Token : One, Posbility: 0.0276
Next Token : _, Posbility: 0.9102
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : two, Posbility: 0.0278
Next Token : odd, Posbility: 0.0315
Next Token : 1, Posbility: 0.0359
Next Token : less, Posbility: 0.0757
Next Token : one, Posbility: 0.4941
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0009
Next Token : less, Posbility: 0.0009
Next Token :  , Posbility: 0.0024
Next Token :  =, Posbility: 0.0066
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : tw, Posbility: 0.0060
Next Token : minus, Posbility: 0.0099
Next Token : two, Posbility: 0.0099
Next Token : more, Posbility: 0.0271
Next Token : less, Posbility: 0.8945
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : er, Posbility: 0.0057
Next Token :  than, Posbility: 0.0057
Next Token :  , Posbility: 0.0155
Next Token :  =, Posbility: 0.1147
Next Token : _, Posbility: 0.8477
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0106
Next Token : then, Posbility: 0.0106
Next Token : two, Posbility: 0.1289
Next Token : tw, Posbility: 0.2119
Next Token : than, Posbility: 0.5781
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0009
Next Token :  , Posbility: 0.0019
Next Token :  =, Posbility: 0.0066
Next Token : _2_, Posbility: 0.0066
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0057
Next Token : t, Posbility: 0.0074
Next Token : double, Posbility: 0.0330
Next Token : two, Posbility: 0.0698
Next Token : tw, Posbility: 0.8477
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_tw
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ix, Posbility: 0.0000
Next Token : ICE, Posbility: 0.0000
Next Token : ic, Posbility: 0.0000
Next Token : enti, Posbility: 0.0000
Next Token : ice, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0023
Next Token :  its, Posbility: 0.0029
Next Token :  , Posbility: 0.0217
Next Token :  =, Posbility: 0.0459
Next Token : _, Posbility: 0.9219
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : rev, Posbility: 0.0457
Next Token : the, Posbility: 0.0752
Next Token : of, Posbility: 0.0752
Next Token : reverse, Posbility: 0.2041
Next Token : its, Posbility: 0.5547
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : self, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : self, Posbility: 0.0005
Next Token : re, Posbility: 0.0014
Next Token : inverse, Posbility: 0.0014
Next Token : rev, Posbility: 0.0471
Next Token : reverse, Posbility: 0.9453
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0231
Next Token :  num, Posbility: 0.0554
Next Token :  number, Posbility: 0.0913
Next Token :  =, Posbility: 0.2188
Next Token :  , Posbility: 0.5234
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : m, Posbility: 0.0018
Next Token : y, Posbility: 0.0021
Next Token : (, Posbility: 0.0120
Next Token : x, Posbility: 0.3105
Next Token : n, Posbility: 0.6562
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0007
Next Token :   , Posbility: 0.0009
Next Token : 
, Posbility: 0.0022
Next Token :  , Posbility: 0.0085
Next Token :  =, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0092
Next Token :  match, Posbility: 0.0092
Next Token :  not, Posbility: 0.0104
Next Token :  , Posbility: 0.1846
Next Token : 
, Posbility: 0.7305
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0085
Next Token : let, Posbility: 0.0096
Next Token :    , Posbility: 0.0232
Next Token :     , Posbility: 0.1709
Next Token :   , Posbility: 0.7656
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0405
Next Token : (, Posbility: 0.0669
Next Token : if, Posbility: 0.0859
Next Token : n, Posbility: 0.0859
Next Token : let, Posbility: 0.6328
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0143
Next Token :  two, Posbility: 0.0304
Next Token :  one, Posbility: 0.0344
Next Token :  rec, Posbility: 0.0442
Next Token :  , Posbility: 0.6914
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0903
Next Token : r, Posbility: 0.1157
Next Token : reverse, Posbility: 0.1484
Next Token : rev, Posbility: 0.1689
Next Token : n, Posbility: 0.2451
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0544
Next Token : 2, Posbility: 0.0898
Next Token : 1, Posbility: 0.1016
Next Token : _, Posbility: 0.3125
Next Token :  =, Posbility: 0.3555
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  str, Posbility: 0.0023
Next Token :  to, Posbility: 0.0038
Next Token :  int, Posbility: 0.0102
Next Token :  String, Posbility: 0.0278
Next Token :  , Posbility: 0.9219
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ref, Posbility: 0.0074
Next Token : if, Posbility: 0.0156
Next Token : Int, Posbility: 0.0258
Next Token : (, Posbility: 0.0292
Next Token : n, Posbility: 0.8516
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0417
Next Token :  +, Posbility: 0.0474
Next Token : ., Posbility: 0.0688
Next Token :  %, Posbility: 0.1138
Next Token :  in, Posbility: 0.6523
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  (*, Posbility: 0.0007
Next Token :   , Posbility: 0.0051
Next Token : 

, Posbility: 0.0095
Next Token :  , Posbility: 0.0156
Next Token : 
, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0005
Next Token :    , Posbility: 0.0009
Next Token :  , Posbility: 0.0010
Next Token :     , Posbility: 0.0075
Next Token :   , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0217
Next Token : n, Posbility: 0.0669
Next Token : if, Posbility: 0.0972
Next Token : (, Posbility: 0.1099
Next Token : let, Posbility: 0.6328
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  half, Posbility: 0.0099
Next Token :  two, Posbility: 0.0238
Next Token :  rec, Posbility: 0.0269
Next Token :  one, Posbility: 0.0305
Next Token :  , Posbility: 0.7852
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0515
Next Token : reverse, Posbility: 0.0962
Next Token : r, Posbility: 0.1240
Next Token : rev, Posbility: 0.1406
Next Token : n, Posbility: 0.4316
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0352
Next Token : 2, Posbility: 0.0400
Next Token : ', Posbility: 0.0581
Next Token : _, Posbility: 0.1089
Next Token :  =, Posbility: 0.7070
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0048
Next Token :  ~, Posbility: 0.0048
Next Token :  is, Posbility: 0.0062
Next Token :  String, Posbility: 0.0216
Next Token :  , Posbility: 0.9180
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0102
Next Token : List, Posbility: 0.0115
Next Token : Int, Posbility: 0.0190
Next Token : (, Posbility: 0.0518
Next Token : n, Posbility: 0.8086
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0564
Next Token :  %, Posbility: 0.0564
Next Token :  *, Posbility: 0.0820
Next Token :  +, Posbility: 0.1055
Next Token :  in, Posbility: 0.6094
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0004
Next Token :   , Posbility: 0.0039
Next Token : 

, Posbility: 0.0106
Next Token :  , Posbility: 0.0325
Next Token : 
, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0003
Next Token :    , Posbility: 0.0004
Next Token :     , Posbility: 0.0028
Next Token :  , Posbility: 0.0096
Next Token :   , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : not, Posbility: 0.0233
Next Token : n, Posbility: 0.0559
Next Token : (, Posbility: 0.0718
Next Token : if, Posbility: 0.0718
Next Token : let, Posbility: 0.6836
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  num, Posbility: 0.0042
Next Token :  two, Posbility: 0.0069
Next Token :  one, Posbility: 0.0089
Next Token :  rec, Posbility: 0.0188
Next Token :  , Posbility: 0.9062
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : reverse, Posbility: 0.0171
Next Token : rev, Posbility: 0.0248
Next Token : x, Posbility: 0.0281
Next Token : r, Posbility: 0.0408
Next Token : n, Posbility: 0.8203
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0039
Next Token :  , Posbility: 0.0051
Next Token : ', Posbility: 0.0057
Next Token : _, Posbility: 0.0065
Next Token :  =, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0008
Next Token :  String, Posbility: 0.0009
Next Token : 
, Posbility: 0.0013
Next Token :  1, Posbility: 0.0013
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0009
Next Token : if, Posbility: 0.0009
Next Token : 2, Posbility: 0.0021
Next Token : (, Posbility: 0.0075
Next Token : n, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  %, Posbility: 0.0056
Next Token :  , Posbility: 0.0072
Next Token :  *, Posbility: 0.0172
Next Token :  +, Posbility: 0.0221
Next Token :  in, Posbility: 0.9375
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0001
Next Token :   , Posbility: 0.0007
Next Token :  , Posbility: 0.0066
Next Token : 

, Posbility: 0.0096
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0002
Next Token :    , Posbility: 0.0003
Next Token :     , Posbility: 0.0013
Next Token :  , Posbility: 0.0109
Next Token :   , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : false, Posbility: 0.0222
Next Token : n, Posbility: 0.0366
Next Token : (, Posbility: 0.0469
Next Token : if, Posbility: 0.0532
Next Token : let, Posbility: 0.7344
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0014
Next Token :  two, Posbility: 0.0024
Next Token :  one, Posbility: 0.0039
Next Token :  rec, Posbility: 0.0084
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : rev, Posbility: 0.0039
Next Token : (, Posbility: 0.0050
Next Token : r, Posbility: 0.0064
Next Token : x, Posbility: 0.0094
Next Token : n, Posbility: 0.9570
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0012
Next Token : ', Posbility: 0.0012
Next Token : _, Posbility: 0.0019
Next Token :  , Posbility: 0.0022
Next Token :  =, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0002
Next Token :  0, Posbility: 0.0004
Next Token : 
, Posbility: 0.0006
Next Token :  1, Posbility: 0.0006
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0004
Next Token : -, Posbility: 0.0005
Next Token : 2, Posbility: 0.0013
Next Token : (, Posbility: 0.0036
Next Token : n, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  %, Posbility: 0.0010
Next Token :  , Posbility: 0.0021
Next Token :  *, Posbility: 0.0066
Next Token :  +, Posbility: 0.0096
Next Token :  in, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0001
Next Token :   , Posbility: 0.0005
Next Token :  , Posbility: 0.0040
Next Token : 

, Posbility: 0.0109
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0001
Next Token :    , Posbility: 0.0002
Next Token :     , Posbility: 0.0008
Next Token :  , Posbility: 0.0110
Next Token :   , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0269
Next Token : false, Posbility: 0.0269
Next Token : (, Posbility: 0.0344
Next Token : if, Posbility: 0.0391
Next Token : let, Posbility: 0.7852
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0009
Next Token :  two, Posbility: 0.0011
Next Token :  one, Posbility: 0.0024
Next Token :  rec, Posbility: 0.0040
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : rev, Posbility: 0.0015
Next Token : r, Posbility: 0.0027
Next Token : (, Posbility: 0.0031
Next Token : x, Posbility: 0.0051
Next Token : n, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0004
Next Token : 1, Posbility: 0.0005
Next Token : _, Posbility: 0.0008
Next Token :  , Posbility: 0.0009
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2*, Posbility: 0.0001
Next Token :  0, Posbility: 0.0003
Next Token : 
, Posbility: 0.0004
Next Token :  1, Posbility: 0.0004
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0003
Next Token : -, Posbility: 0.0004
Next Token : 2, Posbility: 0.0010
Next Token : (, Posbility: 0.0025
Next Token : n, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  %, Posbility: 0.0004
Next Token :  , Posbility: 0.0012
Next Token :  *, Posbility: 0.0036
Next Token :  +, Posbility: 0.0059
Next Token :  in, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  true, Posbility: 0.0000
Next Token :   , Posbility: 0.0004
Next Token :  , Posbility: 0.0024
Next Token : 

, Posbility: 0.0085
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0002
Next Token : 

, Posbility: 0.0002
Next Token :     , Posbility: 0.0007
Next Token :  , Posbility: 0.0085
Next Token :   , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0220
Next Token : false, Posbility: 0.0220
Next Token : (, Posbility: 0.0282
Next Token : if, Posbility: 0.0320
Next Token : let, Posbility: 0.8242
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0005
Next Token :  two, Posbility: 0.0008
Next Token :  one, Posbility: 0.0017
Next Token :  rec, Posbility: 0.0022
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : rev, Posbility: 0.0007
Next Token : r, Posbility: 0.0015
Next Token : (, Posbility: 0.0024
Next Token : x, Posbility: 0.0031
Next Token : n, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0003
Next Token : 1, Posbility: 0.0003
Next Token : _, Posbility: 0.0005
Next Token :  , Posbility: 0.0007
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2*, Posbility: 0.0001
Next Token :  0, Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token :  1, Posbility: 0.0002
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0003
Next Token : -, Posbility: 0.0003
Next Token : 2, Posbility: 0.0009
Next Token : (, Posbility: 0.0022
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  %, Posbility: 0.0003
Next Token :  , Posbility: 0.0007
Next Token :  *, Posbility: 0.0025
Next Token :  +, Posbility: 0.0046
Next Token :  in, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  true, Posbility: 0.0000
Next Token :   , Posbility: 0.0003
Next Token :  , Posbility: 0.0017
Next Token : 

, Posbility: 0.0076
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0002
Next Token : 

, Posbility: 0.0002
Next Token :     , Posbility: 0.0005
Next Token :  , Posbility: 0.0076
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0175
Next Token : false, Posbility: 0.0198
Next Token : (, Posbility: 0.0254
Next Token : if, Posbility: 0.0288
Next Token : let, Posbility: 0.8438
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0004
Next Token :  two, Posbility: 0.0005
Next Token :  one, Posbility: 0.0013
Next Token :  rec, Posbility: 0.0013
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : rev, Posbility: 0.0004
Next Token : r, Posbility: 0.0009
Next Token : (, Posbility: 0.0019
Next Token : x, Posbility: 0.0025
Next Token : n, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0002
Next Token : 1, Posbility: 0.0003
Next Token : _, Posbility: 0.0004
Next Token :  , Posbility: 0.0006
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2*, Posbility: 0.0001
Next Token :  0, Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token :  1, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0002
Next Token : -, Posbility: 0.0002
Next Token : 2, Posbility: 0.0007
Next Token : (, Posbility: 0.0017
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 0.0005
Next Token :  *, Posbility: 0.0015
Next Token :  +, Posbility: 0.0028
Next Token :  in, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  true, Posbility: 0.0000
Next Token :   , Posbility: 0.0003
Next Token :  , Posbility: 0.0013
Next Token : 

, Posbility: 0.0067
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0002
Next Token : 

, Posbility: 0.0002
Next Token :     , Posbility: 0.0005
Next Token :  , Posbility: 0.0067
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0156
Next Token : false, Posbility: 0.0156
Next Token : (, Posbility: 0.0258
Next Token : if, Posbility: 0.0292
Next Token : let, Posbility: 0.8555
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0004
Next Token :  two, Posbility: 0.0005
Next Token :  rec, Posbility: 0.0009
Next Token :  one, Posbility: 0.0012
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : rev, Posbility: 0.0003
Next Token : r, Posbility: 0.0006
Next Token : (, Posbility: 0.0015
Next Token : x, Posbility: 0.0017
Next Token : n, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0002
Next Token : 1, Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token :  , Posbility: 0.0004
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2*, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  1, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0002
Next Token : -, Posbility: 0.0002
Next Token : 2, Posbility: 0.0006
Next Token : (, Posbility: 0.0015
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token :  *, Posbility: 0.0013
Next Token :  +, Posbility: 0.0028
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  true, Posbility: 0.0000
Next Token :   , Posbility: 0.0003
Next Token :  , Posbility: 0.0012
Next Token : 

, Posbility: 0.0059
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0002
Next Token : 

, Posbility: 0.0002
Next Token :     , Posbility: 0.0005
Next Token :  , Posbility: 0.0059
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : true, Posbility: 0.0125
Next Token : n, Posbility: 0.0141
Next Token : (, Posbility: 0.0233
Next Token : if, Posbility: 0.0264
Next Token : let, Posbility: 0.8750
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0003
Next Token :  two, Posbility: 0.0004
Next Token :  rec, Posbility: 0.0007
Next Token :  one, Posbility: 0.0010
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0002
Next Token : r, Posbility: 0.0005
Next Token : (, Posbility: 0.0013
Next Token : x, Posbility: 0.0015
Next Token : n, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0002
Next Token : 1, Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token :  , Posbility: 0.0005
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2*, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  1, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0002
Next Token : -, Posbility: 0.0002
Next Token : 2, Posbility: 0.0006
Next Token : (, Posbility: 0.0013
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  *, Posbility: 0.0010
Next Token :  +, Posbility: 0.0022
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  true, Posbility: 0.0000
Next Token :   , Posbility: 0.0003
Next Token :  , Posbility: 0.0009
Next Token : 

, Posbility: 0.0052
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :    , Posbility: 0.0002
Next Token :     , Posbility: 0.0005
Next Token :  , Posbility: 0.0052
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : true, Posbility: 0.0111
Next Token : n, Posbility: 0.0126
Next Token : (, Posbility: 0.0236
Next Token : if, Posbility: 0.0236
Next Token : let, Posbility: 0.8828
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0002
Next Token :  two, Posbility: 0.0003
Next Token :  rec, Posbility: 0.0005
Next Token :  one, Posbility: 0.0007
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0002
Next Token : r, Posbility: 0.0004
Next Token : (, Posbility: 0.0012
Next Token : x, Posbility: 0.0013
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token : 1, Posbility: 0.0002
Next Token : _, Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2*, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  1, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : -, Posbility: 0.0002
Next Token : 2, Posbility: 0.0006
Next Token : (, Posbility: 0.0012
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  *, Posbility: 0.0009
Next Token :  +, Posbility: 0.0019
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0008
Next Token : 

, Posbility: 0.0052
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :    , Posbility: 0.0002
Next Token :     , Posbility: 0.0005
Next Token :  , Posbility: 0.0046
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : false, Posbility: 0.0111
Next Token : n, Posbility: 0.0126
Next Token : (, Posbility: 0.0234
Next Token : if, Posbility: 0.0266
Next Token : let, Posbility: 0.8828
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0002
Next Token :  two, Posbility: 0.0003
Next Token :  rec, Posbility: 0.0004
Next Token :  one, Posbility: 0.0007
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0002
Next Token : r, Posbility: 0.0004
Next Token : (, Posbility: 0.0010
Next Token : x, Posbility: 0.0012
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2*, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  1, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0002
Next Token : -, Posbility: 0.0002
Next Token : 2, Posbility: 0.0006
Next Token : (, Posbility: 0.0013
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  *, Posbility: 0.0010
Next Token :  +, Posbility: 0.0022
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0003
Next Token :  , Posbility: 0.0009
Next Token : 

, Posbility: 0.0052
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :    , Posbility: 0.0002
Next Token :     , Posbility: 0.0005
Next Token :  , Posbility: 0.0046
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : false, Posbility: 0.0099
Next Token : n, Posbility: 0.0112
Next Token : (, Posbility: 0.0210
Next Token : if, Posbility: 0.0238
Next Token : let, Posbility: 0.8945
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0002
Next Token :  two, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0003
Next Token :  one, Posbility: 0.0006
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0001
Next Token : r, Posbility: 0.0003
Next Token : (, Posbility: 0.0009
Next Token : x, Posbility: 0.0010
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2*, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  1, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0002
Next Token : if, Posbility: 0.0002
Next Token : 2, Posbility: 0.0006
Next Token : (, Posbility: 0.0012
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  *, Posbility: 0.0007
Next Token :  +, Posbility: 0.0017
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0008
Next Token : 

, Posbility: 0.0041
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :    , Posbility: 0.0002
Next Token :     , Posbility: 0.0005
Next Token :  , Posbility: 0.0041
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : false, Posbility: 0.0099
Next Token : n, Posbility: 0.0112
Next Token : (, Posbility: 0.0237
Next Token : if, Posbility: 0.0269
Next Token : let, Posbility: 0.8867
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0002
Next Token :  two, Posbility: 0.0003
Next Token :  rec, Posbility: 0.0003
Next Token :  one, Posbility: 0.0006
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0001
Next Token : r, Posbility: 0.0002
Next Token : (, Posbility: 0.0008
Next Token : x, Posbility: 0.0009
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2*, Posbility: 0.0000
Next Token :  0, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : -, Posbility: 0.0001
Next Token : 2, Posbility: 0.0005
Next Token : (, Posbility: 0.0010
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  *, Posbility: 0.0008
Next Token :  +, Posbility: 0.0017
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0006
Next Token : 

, Posbility: 0.0041
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :    , Posbility: 0.0002
Next Token :     , Posbility: 0.0005
Next Token :  , Posbility: 0.0041
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : false, Posbility: 0.0099
Next Token : n, Posbility: 0.0112
Next Token : (, Posbility: 0.0238
Next Token : if, Posbility: 0.0238
Next Token : let, Posbility: 0.8906
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0002
Next Token :  two, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0002
Next Token :  one, Posbility: 0.0005
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0001
Next Token : r, Posbility: 0.0002
Next Token : (, Posbility: 0.0007
Next Token : x, Posbility: 0.0008
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2*, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  1, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : -, Posbility: 0.0001
Next Token : 2, Posbility: 0.0006
Next Token : (, Posbility: 0.0010
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  *, Posbility: 0.0008
Next Token :  +, Posbility: 0.0017
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0006
Next Token : 

, Posbility: 0.0041
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0005
Next Token :  , Posbility: 0.0036
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : false, Posbility: 0.0089
Next Token : n, Posbility: 0.0101
Next Token : (, Posbility: 0.0212
Next Token : if, Posbility: 0.0212
Next Token : let, Posbility: 0.9023
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0002
Next Token :  two, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0002
Next Token :  one, Posbility: 0.0005
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0001
Next Token : r, Posbility: 0.0002
Next Token : (, Posbility: 0.0007
Next Token : x, Posbility: 0.0008
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2*, Posbility: 0.0000
Next Token :  0, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  1, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : -, Posbility: 0.0001
Next Token : 2, Posbility: 0.0005
Next Token : (, Posbility: 0.0010
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  *, Posbility: 0.0006
Next Token :  +, Posbility: 0.0015
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0036
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :    , Posbility: 0.0002
Next Token :     , Posbility: 0.0005
Next Token :  , Posbility: 0.0032
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : false, Posbility: 0.0079
Next Token : n, Posbility: 0.0101
Next Token : (, Posbility: 0.0214
Next Token : if, Posbility: 0.0214
Next Token : let, Posbility: 0.9102
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0002
Next Token :  two, Posbility: 0.0002
Next Token :  one, Posbility: 0.0004
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0001
Next Token : r, Posbility: 0.0002
Next Token : (, Posbility: 0.0007
Next Token : x, Posbility: 0.0007
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2*, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0001
Next Token : if, Posbility: 0.0001
Next Token : 2, Posbility: 0.0005
Next Token : (, Posbility: 0.0010
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  *, Posbility: 0.0006
Next Token :  +, Posbility: 0.0015
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0036
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :    , Posbility: 0.0002
Next Token :     , Posbility: 0.0005
Next Token :  , Posbility: 0.0032
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : false, Posbility: 0.0078
Next Token : n, Posbility: 0.0101
Next Token : if, Posbility: 0.0212
Next Token : (, Posbility: 0.0242
Next Token : let, Posbility: 0.9062
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0002
Next Token :  two, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0002
Next Token :  one, Posbility: 0.0004
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0001
Next Token : r, Posbility: 0.0002
Next Token : (, Posbility: 0.0007
Next Token : x, Posbility: 0.0008
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2*, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0001
Next Token : if, Posbility: 0.0001
Next Token : 2, Posbility: 0.0004
Next Token : (, Posbility: 0.0009
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  *, Posbility: 0.0006
Next Token :  +, Posbility: 0.0013
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0036
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :    , Posbility: 0.0002
Next Token :     , Posbility: 0.0005
Next Token :  , Posbility: 0.0032
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : false, Posbility: 0.0079
Next Token : n, Posbility: 0.0101
Next Token : (, Posbility: 0.0214
Next Token : if, Posbility: 0.0214
Next Token : let, Posbility: 0.9102
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  two, Posbility: 0.0002
Next Token :  one, Posbility: 0.0004
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0001
Next Token : r, Posbility: 0.0002
Next Token : (, Posbility: 0.0006
Next Token : x, Posbility: 0.0007
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2*, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  1, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0001
Next Token : if, Posbility: 0.0001
Next Token : 2, Posbility: 0.0004
Next Token : (, Posbility: 0.0008
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  *, Posbility: 0.0006
Next Token :  +, Posbility: 0.0013
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token : 

, Posbility: 0.0028
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :    , Posbility: 0.0002
Next Token :     , Posbility: 0.0005
Next Token :  , Posbility: 0.0028
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : false, Posbility: 0.0070
Next Token : n, Posbility: 0.0090
Next Token : (, Posbility: 0.0190
Next Token : if, Posbility: 0.0190
Next Token : let, Posbility: 0.9180
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0002
Next Token :  two, Posbility: 0.0002
Next Token :  one, Posbility: 0.0004
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : r, Posbility: 0.0001
Next Token : (, Posbility: 0.0006
Next Token : x, Posbility: 0.0006
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2*, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  1, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0001
Next Token : if, Posbility: 0.0001
Next Token : 2, Posbility: 0.0004
Next Token : (, Posbility: 0.0008
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  *, Posbility: 0.0005
Next Token :  +, Posbility: 0.0012
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token : 

, Posbility: 0.0028
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :    , Posbility: 0.0002
Next Token :     , Posbility: 0.0005
Next Token :  , Posbility: 0.0028
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : false, Posbility: 0.0079
Next Token : n, Posbility: 0.0090
Next Token : (, Posbility: 0.0190
Next Token : if, Posbility: 0.0190
Next Token : let, Posbility: 0.9180
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  two, Posbility: 0.0001
Next Token :  one, Posbility: 0.0004
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : r, Posbility: 0.0001
Next Token : (, Posbility: 0.0005
Next Token : x, Posbility: 0.0006
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2*, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0001
Next Token : if, Posbility: 0.0001
Next Token : 2, Posbility: 0.0004
Next Token : (, Posbility: 0.0008
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  *, Posbility: 0.0004
Next Token :  +, Posbility: 0.0010
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token : 

, Posbility: 0.0032
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :    , Posbility: 0.0002
Next Token :     , Posbility: 0.0005
Next Token :  , Posbility: 0.0025
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : false, Posbility: 0.0063
Next Token : n, Posbility: 0.0081
Next Token : if, Posbility: 0.0150
Next Token : (, Posbility: 0.0171
Next Token : let, Posbility: 0.9297
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  two, Posbility: 0.0001
Next Token :  one, Posbility: 0.0003
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : r, Posbility: 0.0001
Next Token : (, Posbility: 0.0006
Next Token : x, Posbility: 0.0006
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0001
Next Token : if, Posbility: 0.0001
Next Token : 2, Posbility: 0.0004
Next Token : (, Posbility: 0.0007
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  *, Posbility: 0.0004
Next Token :  +, Posbility: 0.0010
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token : 

, Posbility: 0.0025
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :    , Posbility: 0.0002
Next Token :     , Posbility: 0.0005
Next Token :  , Posbility: 0.0025
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : false, Posbility: 0.0062
Next Token : n, Posbility: 0.0080
Next Token : if, Posbility: 0.0170
Next Token : (, Posbility: 0.0192
Next Token : let, Posbility: 0.9258
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  two, Posbility: 0.0001
Next Token :  one, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : r, Posbility: 0.0001
Next Token : (, Posbility: 0.0004
Next Token : x, Posbility: 0.0004
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2*, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0001
Next Token : if, Posbility: 0.0001
Next Token : 2, Posbility: 0.0004
Next Token : (, Posbility: 0.0008
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  *, Posbility: 0.0004
Next Token :  +, Posbility: 0.0009
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token : 

, Posbility: 0.0028
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :    , Posbility: 0.0002
Next Token :     , Posbility: 0.0005
Next Token :  , Posbility: 0.0025
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : false, Posbility: 0.0063
Next Token : n, Posbility: 0.0071
Next Token : if, Posbility: 0.0151
Next Token : (, Posbility: 0.0171
Next Token : let, Posbility: 0.9297
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  rec, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  two, Posbility: 0.0001
Next Token :  one, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : r, Posbility: 0.0001
Next Token : (, Posbility: 0.0005
Next Token : x, Posbility: 0.0005
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  0, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0001
Next Token : if, Posbility: 0.0001
Next Token : 2, Posbility: 0.0003
Next Token : (, Posbility: 0.0006
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  *, Posbility: 0.0004
Next Token :  +, Posbility: 0.0009
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0025
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0005
Next Token :  , Posbility: 0.0025
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : false, Posbility: 0.0056
Next Token : n, Posbility: 0.0071
Next Token : if, Posbility: 0.0151
Next Token : (, Posbility: 0.0171
Next Token : let, Posbility: 0.9336
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0001
Next Token :  two, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  one, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : r, Posbility: 0.0001
Next Token : (, Posbility: 0.0005
Next Token : x, Posbility: 0.0005
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0001
Next Token : if, Posbility: 0.0001
Next Token : 2, Posbility: 0.0003
Next Token : (, Posbility: 0.0006
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  *, Posbility: 0.0004
Next Token :  +, Posbility: 0.0008
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token : 

, Posbility: 0.0028
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0005
Next Token :  , Posbility: 0.0022
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : false, Posbility: 0.0056
Next Token : n, Posbility: 0.0071
Next Token : if, Posbility: 0.0134
Next Token : (, Posbility: 0.0171
Next Token : let, Posbility: 0.9336
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  two, Posbility: 0.0001
Next Token :  one, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : r, Posbility: 0.0001
Next Token : x, Posbility: 0.0003
Next Token : (, Posbility: 0.0004
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0001
Next Token : if, Posbility: 0.0001
Next Token : 2, Posbility: 0.0003
Next Token : (, Posbility: 0.0007
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  *, Posbility: 0.0003
Next Token :  +, Posbility: 0.0007
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token : 

, Posbility: 0.0028
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0005
Next Token :  , Posbility: 0.0022
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : false, Posbility: 0.0049
Next Token : n, Posbility: 0.0063
Next Token : if, Posbility: 0.0134
Next Token : (, Posbility: 0.0172
Next Token : let, Posbility: 0.9375
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  two, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  one, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : r, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : x, Posbility: 0.0003
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : 3, Posbility: 0.0001
Next Token : 2, Posbility: 0.0003
Next Token : (, Posbility: 0.0006
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  *, Posbility: 0.0003
Next Token :  +, Posbility: 0.0008
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0025
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0005
Next Token :  , Posbility: 0.0019
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : false, Posbility: 0.0039
Next Token : n, Posbility: 0.0056
Next Token : if, Posbility: 0.0119
Next Token : (, Posbility: 0.0153
Next Token : let, Posbility: 0.9453
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  two, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  one, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : r, Posbility: 0.0001
Next Token : x, Posbility: 0.0004
Next Token : (, Posbility: 0.0004
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0001
Next Token : if, Posbility: 0.0001
Next Token : 2, Posbility: 0.0003
Next Token : (, Posbility: 0.0005
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  *, Posbility: 0.0003
Next Token :  +, Posbility: 0.0007
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0022
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0005
Next Token :  , Posbility: 0.0022
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : false, Posbility: 0.0039
Next Token : n, Posbility: 0.0056
Next Token : if, Posbility: 0.0106
Next Token : (, Posbility: 0.0135
Next Token : let, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0001
Next Token :  two, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  one, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : r, Posbility: 0.0001
Next Token : x, Posbility: 0.0003
Next Token : (, Posbility: 0.0003
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0001
Next Token : if, Posbility: 0.0001
Next Token : 2, Posbility: 0.0003
Next Token : (, Posbility: 0.0006
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  *, Posbility: 0.0003
Next Token :  +, Posbility: 0.0006
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0022
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0004
Next Token :  , Posbility: 0.0019
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : false, Posbility: 0.0034
Next Token : n, Posbility: 0.0050
Next Token : if, Posbility: 0.0106
Next Token : (, Posbility: 0.0135
Next Token : let, Posbility: 0.9531
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  two, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  one, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : r, Posbility: 0.0001
Next Token : x, Posbility: 0.0003
Next Token : (, Posbility: 0.0003
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : 3, Posbility: 0.0001
Next Token : 2, Posbility: 0.0003
Next Token : (, Posbility: 0.0006
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  *, Posbility: 0.0002
Next Token :  +, Posbility: 0.0006
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0019
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0004
Next Token :  , Posbility: 0.0017
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : false, Posbility: 0.0034
Next Token : n, Posbility: 0.0050
Next Token : if, Posbility: 0.0093
Next Token : (, Posbility: 0.0136
Next Token : let, Posbility: 0.9531
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0001
Next Token :  two, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  one, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : r, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : x, Posbility: 0.0003
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : 3, Posbility: 0.0001
Next Token : 2, Posbility: 0.0002
Next Token : (, Posbility: 0.0005
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  *, Posbility: 0.0002
Next Token :  +, Posbility: 0.0006
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0022
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0005
Next Token :  , Posbility: 0.0017
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : false, Posbility: 0.0034
Next Token : n, Posbility: 0.0050
Next Token : if, Posbility: 0.0083
Next Token : (, Posbility: 0.0120
Next Token : let, Posbility: 0.9570
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  two, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  one, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : r, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : x, Posbility: 0.0003
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0001
Next Token : if, Posbility: 0.0001
Next Token : 2, Posbility: 0.0002
Next Token : (, Posbility: 0.0004
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  *, Posbility: 0.0002
Next Token :  +, Posbility: 0.0006
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0019
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0004
Next Token :  , Posbility: 0.0022
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : true, Posbility: 0.0027
Next Token : n, Posbility: 0.0045
Next Token : if, Posbility: 0.0073
Next Token : (, Posbility: 0.0121
Next Token : let, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  two, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  v, Posbility: 0.0001
Next Token :  one, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : r, Posbility: 0.0001
Next Token : x, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0001
Next Token : 2, Posbility: 0.0002
Next Token : (, Posbility: 0.0004
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  *, Posbility: 0.0002
Next Token :  +, Posbility: 0.0005
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0017
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0000
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0004
Next Token :  , Posbility: 0.0019
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : true, Posbility: 0.0027
Next Token : n, Posbility: 0.0039
Next Token : if, Posbility: 0.0073
Next Token : (, Posbility: 0.0121
Next Token : let, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  two, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  one, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : r, Posbility: 0.0001
Next Token : x, Posbility: 0.0003
Next Token : (, Posbility: 0.0003
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0001
Next Token : 2, Posbility: 0.0002
Next Token : (, Posbility: 0.0004
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  *, Posbility: 0.0002
Next Token :  +, Posbility: 0.0005
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0017
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0004
Next Token :  , Posbility: 0.0015
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : true, Posbility: 0.0021
Next Token : n, Posbility: 0.0045
Next Token : if, Posbility: 0.0065
Next Token : (, Posbility: 0.0107
Next Token : let, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :  two, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  one, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : r, Posbility: 0.0000
Next Token : x, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0001
Next Token : 2, Posbility: 0.0002
Next Token : (, Posbility: 0.0004
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  *, Posbility: 0.0002
Next Token :  +, Posbility: 0.0004
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0017
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0004
Next Token :  , Posbility: 0.0017
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : false, Posbility: 0.0031
Next Token : n, Posbility: 0.0039
Next Token : if, Posbility: 0.0074
Next Token : (, Posbility: 0.0107
Next Token : let, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  one, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : r, Posbility: 0.0000
Next Token : x, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0001
Next Token : 2, Posbility: 0.0002
Next Token : (, Posbility: 0.0004
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  *, Posbility: 0.0002
Next Token :  +, Posbility: 0.0004
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0017
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0004
Next Token :  , Posbility: 0.0017
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : true, Posbility: 0.0021
Next Token : n, Posbility: 0.0039
Next Token : if, Posbility: 0.0057
Next Token : (, Posbility: 0.0107
Next Token : let, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  one, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : r, Posbility: 0.0000
Next Token : x, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0001
Next Token : 2, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  *, Posbility: 0.0001
Next Token :  +, Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0015
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0004
Next Token :  , Posbility: 0.0017
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : true, Posbility: 0.0021
Next Token : n, Posbility: 0.0039
Next Token : if, Posbility: 0.0065
Next Token : (, Posbility: 0.0107
Next Token : let, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  one, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : r, Posbility: 0.0000
Next Token : x, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  *, Posbility: 0.0001
Next Token :  +, Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0015
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0004
Next Token :  , Posbility: 0.0015
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : true, Posbility: 0.0021
Next Token : n, Posbility: 0.0039
Next Token : if, Posbility: 0.0065
Next Token : (, Posbility: 0.0107
Next Token : let, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  two, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  one, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : x, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0001
Next Token : 2, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  *, Posbility: 0.0001
Next Token :  +, Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0013
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0013
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : false, Posbility: 0.0017
Next Token : n, Posbility: 0.0035
Next Token : if, Posbility: 0.0045
Next Token : (, Posbility: 0.0095
Next Token : let, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  one, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : r, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : x, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  *, Posbility: 0.0001
Next Token :  +, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0015
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0000
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0015
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : false, Posbility: 0.0021
Next Token : n, Posbility: 0.0031
Next Token : if, Posbility: 0.0051
Next Token : (, Posbility: 0.0095
Next Token : let, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  one, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : x, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  *, Posbility: 0.0001
Next Token :  +, Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0015
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0015
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : true, Posbility: 0.0017
Next Token : n, Posbility: 0.0031
Next Token : if, Posbility: 0.0040
Next Token : (, Posbility: 0.0095
Next Token : let, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  one, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : r, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : x, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  *, Posbility: 0.0001
Next Token :  +, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0010
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0013
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : true, Posbility: 0.0011
Next Token : n, Posbility: 0.0024
Next Token : if, Posbility: 0.0040
Next Token : (, Posbility: 0.0084
Next Token : let, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  one, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  *, Posbility: 0.0001
Next Token :  +, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0012
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0013
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : true, Posbility: 0.0013
Next Token : n, Posbility: 0.0027
Next Token : if, Posbility: 0.0035
Next Token : (, Posbility: 0.0095
Next Token : let, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  one, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  *, Posbility: 0.0001
Next Token :  +, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0012
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0000
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0010
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : true, Posbility: 0.0015
Next Token : n, Posbility: 0.0027
Next Token : if, Posbility: 0.0031
Next Token : (, Posbility: 0.0074
Next Token : let, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  one, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  *, Posbility: 0.0001
Next Token :  +, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0010
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0000
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0012
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : true, Posbility: 0.0013
Next Token : n, Posbility: 0.0027
Next Token : if, Posbility: 0.0035
Next Token : (, Posbility: 0.0084
Next Token : let, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  one, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  *, Posbility: 0.0001
Next Token :  +, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0009
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0010
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : true, Posbility: 0.0009
Next Token : n, Posbility: 0.0021
Next Token : if, Posbility: 0.0027
Next Token : (, Posbility: 0.0075
Next Token : let, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  one, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  *, Posbility: 0.0001
Next Token :  +, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0010
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0010
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : true, Posbility: 0.0010
Next Token : n, Posbility: 0.0024
Next Token : if, Posbility: 0.0027
Next Token : (, Posbility: 0.0075
Next Token : let, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  one, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  *, Posbility: 0.0001
Next Token :  +, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0009
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0010
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : true, Posbility: 0.0008
Next Token : n, Posbility: 0.0019
Next Token : if, Posbility: 0.0024
Next Token : (, Posbility: 0.0075
Next Token : let, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  one, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  *, Posbility: 0.0001
Next Token :  +, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0009
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0010
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : true, Posbility: 0.0008
Next Token : n, Posbility: 0.0019
Next Token : if, Posbility: 0.0024
Next Token : (, Posbility: 0.0066
Next Token : let, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  one, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : =, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  *, Posbility: 0.0001
Next Token :  +, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0009
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0000
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0009
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : true, Posbility: 0.0007
Next Token : n, Posbility: 0.0019
Next Token : if, Posbility: 0.0024
Next Token : (, Posbility: 0.0066
Next Token : let, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  one, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  *, Posbility: 0.0001
Next Token :  +, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0008
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0008
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : true, Posbility: 0.0006
Next Token : if, Posbility: 0.0019
Next Token : n, Posbility: 0.0019
Next Token : (, Posbility: 0.0059
Next Token : let, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  one, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : =, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  *, Posbility: 0.0001
Next Token :  +, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0007
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0000
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0007
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : true, Posbility: 0.0009
Next Token : n, Posbility: 0.0024
Next Token : if, Posbility: 0.0027
Next Token : (, Posbility: 0.0075
Next Token : let, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  one, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0007
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0000
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0009
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : true, Posbility: 0.0007
Next Token : n, Posbility: 0.0015
Next Token : if, Posbility: 0.0022
Next Token : (, Posbility: 0.0059
Next Token : let, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  one, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : =, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0008
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : true, Posbility: 0.0008
Next Token : n, Posbility: 0.0017
Next Token : if, Posbility: 0.0019
Next Token : (, Posbility: 0.0066
Next Token : let, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  one, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  *, Posbility: 0.0001
Next Token :  +, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0000
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0007
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : true, Posbility: 0.0006
Next Token : n, Posbility: 0.0017
Next Token : if, Posbility: 0.0022
Next Token : (, Posbility: 0.0066
Next Token : let, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  one, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  *, Posbility: 0.0001
Next Token :  +, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0007
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0007
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0005
Next Token : n, Posbility: 0.0013
Next Token : if, Posbility: 0.0015
Next Token : (, Posbility: 0.0052
Next Token : let, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  one, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : =, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0007
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : true, Posbility: 0.0006
Next Token : n, Posbility: 0.0015
Next Token : if, Posbility: 0.0019
Next Token : (, Posbility: 0.0059
Next Token : let, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  one, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : =, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  *, Posbility: 0.0001
Next Token :  +, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0000
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0007
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0005
Next Token : n, Posbility: 0.0013
Next Token : if, Posbility: 0.0015
Next Token : (, Posbility: 0.0052
Next Token : let, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  one, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0000
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0006
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0005
Next Token : n, Posbility: 0.0010
Next Token : if, Posbility: 0.0015
Next Token : (, Posbility: 0.0052
Next Token : let, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  one, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: noerr
---------------------------
Next Token : =, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: noerr
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0005
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0007
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0004
Next Token : n, Posbility: 0.0009
Next Token : if, Posbility: 0.0013
Next Token : (, Posbility: 0.0046
Next Token : let, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  one, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: noerr
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0005
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0000
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0007
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0005
Next Token : n, Posbility: 0.0010
Next Token : if, Posbility: 0.0015
Next Token : (, Posbility: 0.0052
Next Token : let, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: noerr
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  one, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: noerr
---------------------------
Next Token : =, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: noerr
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0000
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0004
Next Token : n, Posbility: 0.0010
Next Token : if, Posbility: 0.0013
Next Token : (, Posbility: 0.0046
Next Token : let, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  one, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: noerr
---------------------------
Next Token : =, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: noerr
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0003
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0006
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token : n, Posbility: 0.0008
Next Token : if, Posbility: 0.0012
Next Token : (, Posbility: 0.0041
Next Token : let, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  one, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: noerr
---------------------------
Next Token : =, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: noerr
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in

 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0006
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0004
Next Token : if, Posbility: 0.0010
Next Token : n, Posbility: 0.0010
Next Token : (, Posbility: 0.0041
Next Token : let, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  one, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n
 score:False
Error type: noerr
---------------------------
Next Token : =, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n =
 score:False
Error type: noerr
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = 
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if a given number is one less than twice its reverse. *)
let is_one_less_than_twice_its_reverse n =
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
  let n = n in
 score:False


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>