code:
 (* Write a function to flatten a list and sum all of its elements. *)
let
Next Token :  rec, Posbility: 0.4785
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec
Next Token :  , Posbility: 0.8398
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec 
Next Token : flatten, Posbility: 0.6914
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten
Next Token :  , Posbility: 0.3184
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten 
Next Token : x, Posbility: 0.4043
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten x
Next Token : s, Posbility: 0.5156
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs
Next Token :  =, Posbility: 0.9141
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
Next Token : 
, Posbility: 0.8125
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =

Next Token :   , Posbility: 0.8203
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  
Next Token : match, Posbility: 0.7305
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match 
Next Token : x, Posbility: 0.9453
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match x
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs
Next Token :  with, Posbility: 0.9961
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
Next Token : 
, Posbility: 0.9688
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with

Next Token :   , Posbility: 0.9180
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  
Next Token : |, Posbility: 0.9648
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  |
Next Token :  [], Posbility: 0.9492
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | []
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] ->
Next Token :  0, Posbility: 0.6797
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
Next Token : 
, Posbility: 0.9023
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  |
Next Token :  , Posbility: 0.7852
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | 
Next Token : x, Posbility: 0.7812
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x
Next Token :  , Posbility: 0.5859
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x 
Next Token : ::, Posbility: 0.9961
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x ::
Next Token :  , Posbility: 0.8984
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: 
Next Token : x, Posbility: 0.8555
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: x
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs
Next Token :  , Posbility: 0.8125
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs 
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs ->
Next Token :  , Posbility: 0.5703
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> 
Next Token : x, Posbility: 0.8516
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x
Next Token :  +, Posbility: 0.9648
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x +
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + 
Next Token : flatten, Posbility: 0.9102
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten 
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten x
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
Next Token : 
, Posbility: 0.7188
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs

Next Token : let, Posbility: 0.4199
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let
Next Token :  rec, Posbility: 0.5898
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec
Next Token :  sum, Posbility: 0.5352
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum
Next Token :  , Posbility: 0.3887
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum 
Next Token : x, Posbility: 0.9453
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum x
Next Token : s, Posbility: 0.9805
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs
Next Token :  =, Posbility: 0.9883
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
Next Token : 
, Posbility: 0.8047
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =

Next Token :   , Posbility: 0.9883
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  
Next Token : match, Posbility: 0.8555
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match 
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match x
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match xs
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match xs with
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match xs with

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match xs with
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match xs with
  |
Next Token :  [], Posbility: 0.9883
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match xs with
  | []
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match xs with
  | [] 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match xs with
  | [] ->
Next Token :  0, Posbility: 0.9844
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match xs with
  | [] -> 0
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match xs with
  | [] -> 0

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match xs with
  | [] -> 0
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match xs with
  | [] -> 0
  |
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match xs with
  | [] -> 0
  | 
Next Token : x, Posbility: 0.9766
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match xs with
  | [] -> 0
  | x
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match xs with
  | [] -> 0
  | x 
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match xs with
  | [] -> 0
  | x ::
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match xs with
  | [] -> 0
  | x :: 
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match xs with
  | [] -> 0
  | x :: x
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match xs with
  | [] -> 0
  | x :: xs
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match xs with
  | [] -> 0
  | x :: xs 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match xs with
  | [] -> 0
  | x :: xs ->
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> 
Next Token : x, Posbility: 0.9883
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x
Next Token :  +, Posbility: 0.9883
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x +
Next Token :  sum, Posbility: 0.9922
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + sum
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + sum 
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + sum x
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to flatten a list and sum all of its elements. *)
let rec flatten xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + flatten xs
let rec sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + sum xs
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END--------

processing time : :3.227464199066162

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>