code:
 (* Write a function to convert more than one list to nested dictionary. *)
let
Next Token :  rec, Posbility: 0.5469
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec
Next Token :  , Posbility: 0.4922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec 
Next Token : dict, Posbility: 0.1465
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict
Next Token : _, Posbility: 0.5352
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_
Next Token : of, Posbility: 0.3535
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of
Next Token : _, Posbility: 0.9570
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_
Next Token : list, Posbility: 0.4043
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list
Next Token :  , Posbility: 0.4766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list 
Next Token : lst, Posbility: 0.2832
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst
Next Token :  =, Posbility: 0.7969
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
Next Token : 
, Posbility: 0.8711
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =

Next Token :   , Posbility: 0.8164
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  
Next Token : match, Posbility: 0.5898
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match 
Next Token : lst, Posbility: 0.9805
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst
Next Token :  with, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
Next Token : 
, Posbility: 0.9609
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with

Next Token :   , Posbility: 0.9180
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  
Next Token : |, Posbility: 0.9453
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  |
Next Token :  [], Posbility: 0.8750
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | []
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] 
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] ->
Next Token :  , Posbility: 0.4941
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> 
Next Token : Dict, Posbility: 0.1709
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict
Next Token : ., Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.
Next Token : empty, Posbility: 0.6523
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
Next Token : 
, Posbility: 0.9297
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  |
Next Token :  , Posbility: 0.6758
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | 
Next Token : hd, Posbility: 0.3633
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd
Next Token :  , Posbility: 0.4785
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd 
Next Token : ::, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd ::
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: 
Next Token : tl, Posbility: 0.9023
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl 
Next Token : ->, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
Next Token : 
, Posbility: 0.6484
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->

Next Token :     , Posbility: 0.5000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    
Next Token : let, Posbility: 0.7852
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let
Next Token :  , Posbility: 0.4531
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let 
Next Token : hd, Posbility: 0.2676
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd
Next Token : _, Posbility: 0.4922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_
Next Token : dict, Posbility: 0.3828
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict
Next Token :  =, Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict =
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = 
Next Token : dict, Posbility: 0.9375
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_
Next Token : list, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list 
Next Token : hd, Posbility: 0.9688
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd
Next Token :  in, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in

Next Token :     , Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    
Next Token : let, Posbility: 0.5430
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let
Next Token :  , Posbility: 0.6172
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let 
Next Token : tl, Posbility: 0.4473
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_
Next Token : dict, Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict
Next Token :  =, Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict =
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = 
Next Token : dict, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list 
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in

Next Token :     , Posbility: 0.9375
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    
Next Token : let, Posbility: 0.4473
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let
Next Token :  , Posbility: 0.5703
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let 
Next Token : hd, Posbility: 0.3027
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd
Next Token : _, Posbility: 0.9219
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_
Next Token : key, Posbility: 0.3125
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key
Next Token :  =, Posbility: 0.8555
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key =
Next Token :  , Posbility: 0.7734
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = 
Next Token : hd, Posbility: 0.3496
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd
Next Token : _, Posbility: 0.6641
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_
Next Token : dict, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict
Next Token : ., Posbility: 0.8906
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.
Next Token : key, Posbility: 0.4746
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key
Next Token :  in, Posbility: 0.8906
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in

Next Token :     , Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    
Next Token : let, Posbility: 0.7227
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let
Next Token :  , Posbility: 0.8477
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let 
Next Token : tl, Posbility: 0.4355
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_
Next Token : key, Posbility: 0.9258
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key =
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = 
Next Token : tl, Posbility: 0.9648
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in

Next Token :     , Posbility: 0.9805
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    
Next Token : let, Posbility: 0.5664
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let
Next Token :  , Posbility: 0.7227
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let 
Next Token : hd, Posbility: 0.6992
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_
Next Token : value, Posbility: 0.3945
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value
Next Token :  =, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value =
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = 
Next Token : hd, Posbility: 0.9141
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict
Next Token : ., Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.
Next Token : value, Posbility: 0.9453
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value
Next Token :  in, Posbility: 0.9609
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    
Next Token : let, Posbility: 0.9688
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let 
Next Token : tl, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_
Next Token : value, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = 
Next Token : tl, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.
Next Token : value, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in

Next Token :     , Posbility: 0.9648
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    
Next Token : let, Posbility: 0.5625
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let
Next Token :  , Posbility: 0.5938
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let 
Next Token : hd, Posbility: 0.4395
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd
Next Token : _, Posbility: 0.9609
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_
Next Token : dict, Posbility: 0.1641
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict
Next Token :  =, Posbility: 0.5859
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict =
Next Token :  , Posbility: 0.7383
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = 
Next Token : Dict, Posbility: 0.6992
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict
Next Token : ., Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.
Next Token : add, Posbility: 0.6016
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add
Next Token :  , Posbility: 0.9219
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add 
Next Token : hd, Posbility: 0.9414
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_
Next Token : key, Posbility: 0.9492
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key 
Next Token : hd, Posbility: 0.8828
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_
Next Token : value, Posbility: 0.9688
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value 
Next Token : hd, Posbility: 0.9570
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict
Next Token :  in, Posbility: 0.9727
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    
Next Token : let, Posbility: 0.9492
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let 
Next Token : tl, Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_
Next Token : dict, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict =
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = 
Next Token : Dict, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.
Next Token : add, Posbility: 0.9727
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add 
Next Token : tl, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key 
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_
Next Token : value, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value 
Next Token : tl, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in

Next Token :     , Posbility: 0.9727
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    
Next Token : let, Posbility: 0.4395
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let
Next Token :  , Posbility: 0.6758
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let 
Next Token : dict, Posbility: 0.2656
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict
Next Token :  =, Posbility: 0.9062
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict =
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = 
Next Token : Dict, Posbility: 0.7578
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.
Next Token : add, Posbility: 0.8711
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add 
Next Token : hd, Posbility: 0.9727
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_
Next Token : key, Posbility: 0.8789
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key 
Next Token : hd, Posbility: 0.6836
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_
Next Token : dict, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict
Next Token :  , Posbility: 0.8750
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict 
Next Token : tl, Posbility: 0.9414
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in

Next Token :     , Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    
Next Token : dict, Posbility: 0.9414
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict
Next Token : _, Posbility: 0.8984
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list 
Next Token : tl, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
Next Token : 
, Posbility: 0.7617
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl

Next Token : in, Posbility: 0.4512
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
Next Token : 
, Posbility: 0.7656
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in

Next Token : let, Posbility: 0.3613
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let
Next Token :  rec, Posbility: 0.5547
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec
Next Token :  , Posbility: 0.6133
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec 
Next Token : dict, Posbility: 0.6914
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_
Next Token : of, Posbility: 0.8867
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_
Next Token : list, Posbility: 0.3320
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list
Next Token : _, Posbility: 0.7188
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_
Next Token : list, Posbility: 0.0659
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list
Next Token :  , Posbility: 0.6172
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list 
Next Token : lst, Posbility: 0.7031
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst
Next Token :  =, Posbility: 0.8477
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
Next Token : 
, Posbility: 0.9688
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =

Next Token :   , Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  
Next Token : match, Posbility: 0.8789
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match 
Next Token : lst, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  |
Next Token :  [], Posbility: 0.9570
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | []
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] ->
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> 
Next Token : Dict, Posbility: 0.9609
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.
Next Token : empty, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  |
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | 
Next Token : hd, Posbility: 0.9258
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd 
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd ::
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: 
Next Token : tl, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl 
Next Token : ->, Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    
Next Token : let, Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let 
Next Token : hd, Posbility: 0.9570
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_
Next Token : dict, Posbility: 0.9688
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict
Next Token :  =, Posbility: 0.9727
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = 
Next Token : dict, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list
Next Token : _, Posbility: 0.8789
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list 
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    
Next Token : let, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let 
Next Token : tl, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_
Next Token : dict, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = 
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list 
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    
Next Token : let, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let 
Next Token : hd, Posbility: 0.9688
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_
Next Token : key, Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = 
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    
Next Token : let, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let 
Next Token : tl, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_
Next Token : key, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = 
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    
Next Token : let, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let 
Next Token : hd, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_
Next Token : value, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = 
Next Token : hd, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.
Next Token : value, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    
Next Token : let, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let 
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_
Next Token : value, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = 
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.
Next Token : value, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    
Next Token : let, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let 
Next Token : hd, Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_
Next Token : dict, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict =
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = 
Next Token : Dict, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.
Next Token : add, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add 
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key 
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_
Next Token : value, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value 
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    
Next Token : let, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let 
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = 
Next Token : Dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.
Next Token : add, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add 
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key 
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_
Next Token : value, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value 
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    
Next Token : let, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let 
Next Token : dict, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = 
Next Token : Dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.
Next Token : add, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add 
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key 
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict 
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list
Next Token : _, Posbility: 0.9531
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list 
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
Next Token : 
, Posbility: 0.8984
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl

Next Token : in, Posbility: 0.9453
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
Next Token : 
, Posbility: 0.7734
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in

Next Token : let, Posbility: 0.6836
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let
Next Token :  rec, Posbility: 0.6055
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec
Next Token :  , Posbility: 0.5820
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec 
Next Token : dict, Posbility: 0.7148
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_
Next Token : of, Posbility: 0.9180
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_
Next Token : list, Posbility: 0.5234
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_
Next Token : list, Posbility: 0.4766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list
Next Token : _, Posbility: 0.9727
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_
Next Token : list, Posbility: 0.8828
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list
Next Token :  , Posbility: 0.8750
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list 
Next Token : lst, Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =

Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  
Next Token : match, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match 
Next Token : lst, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  |
Next Token :  [], Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | []
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] ->
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> 
Next Token : Dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.
Next Token : empty, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  |
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | 
Next Token : hd, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd 
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd ::
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: 
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl 
Next Token : ::, Posbility: 0.8516
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ::
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: 
Next Token : tr, Posbility: 0.3105
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr 
Next Token : ->, Posbility: 0.8945
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    
Next Token : let, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let 
Next Token : hd, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_
Next Token : dict, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = 
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list
Next Token : _, Posbility: 0.8789
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list 
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    
Next Token : let, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let 
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = 
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list 
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    
Next Token : let, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let 
Next Token : tr, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = 
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list 
Next Token : tr, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    
Next Token : let, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let 
Next Token : hd, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_
Next Token : key, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = 
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    
Next Token : let, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let 
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = 
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    
Next Token : let, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let 
Next Token : tr, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = 
Next Token : tr, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    
Next Token : let, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let 
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_
Next Token : value, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = 
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.
Next Token : value, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    
Next Token : let, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let 
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_
Next Token : value, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = 
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.
Next Token : value, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    
Next Token : let, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let 
Next Token : tr, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_
Next Token : value, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = 
Next Token : tr, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.
Next Token : value, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    
Next Token : let, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let 
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict =
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = 
Next Token : Dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.
Next Token : add, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add 
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key 
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_
Next Token : value, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value 
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    
Next Token : let, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let 
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = 
Next Token : Dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.
Next Token : add, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add 
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key 
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_
Next Token : value, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value 
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    
Next Token : let, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let 
Next Token : tr, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = 
Next Token : Dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.
Next Token : add, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add 
Next Token : tr, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key 
Next Token : tr, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_
Next Token : value, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value 
Next Token : tr, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    
Next Token : let, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let 
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict =
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = 
Next Token : Dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.
Next Token : add, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add 
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key 
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict 
Next Token : tl, Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict
Next Token :  , Posbility: 0.4902
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict 
Next Token : tr, Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list 
Next Token : tr, Posbility: 0.9492
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
Next Token : 
, Posbility: 0.9453
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr

Next Token : in, Posbility: 0.9805
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
Next Token : 
, Posbility: 0.7305
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in

Next Token : let, Posbility: 0.6484
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let
Next Token :  rec, Posbility: 0.7031
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec
Next Token :  , Posbility: 0.7227
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec 
Next Token : dict, Posbility: 0.8125
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_
Next Token : of, Posbility: 0.9609
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_
Next Token : list, Posbility: 0.7695
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_
Next Token : list, Posbility: 0.7500
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_
Next Token : list, Posbility: 0.8359
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_
Next Token : list, Posbility: 0.9570
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list
Next Token :  , Posbility: 0.8633
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list 
Next Token : lst, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  
Next Token : match, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match 
Next Token : lst, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  |
Next Token :  [], Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | []
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] ->
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> 
Next Token : Dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.
Next Token : empty, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  |
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | 
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd 
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd ::
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: 
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl 
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ::
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: 
Next Token : tr, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr 
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ::
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: 
Next Token : tt, Posbility: 0.7617
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt 
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    
Next Token : let, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let 
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = 
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list 
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    
Next Token : let, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let 
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = 
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list 
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    
Next Token : let, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let 
Next Token : tr, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = 
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list 
Next Token : tr, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    
Next Token : let, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let 
Next Token : tt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = 
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list 
Next Token : tt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    
Next Token : let, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let 
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = 
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    
Next Token : let, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let 
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = 
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    
Next Token : let, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let 
Next Token : tr, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = 
Next Token : tr, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    
Next Token : let, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let 
Next Token : tt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = 
Next Token : tt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    
Next Token : let, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let 
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_
Next Token : value, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = 
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.
Next Token : value, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    
Next Token : let, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let 
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_
Next Token : value, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = 
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.
Next Token : value, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    
Next Token : let, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let 
Next Token : tr, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_
Next Token : value, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = 
Next Token : tr, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.
Next Token : value, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    
Next Token : let, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let 
Next Token : tt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let tt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let tt_
Next Token : value, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let tt_value
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let tt_value =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let tt_value = 
Next Token : tt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let tt_value = tt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let tt_value = tt_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let tt_value = tt_dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let tt_value = tt_dict.
Next Token : value, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let tt_value = tt_dict.value
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let tt_value = tt_dict.value in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let tt_value = tt_dict.value in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let tt_value = tt_dict.value in
    
Next Token : let, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let tt_value = tt_dict.value in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let tt_value = tt_dict.value in
    let 
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let tt_value = tt_dict.value in
    let hd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let tt_value = tt_dict.value in
    let hd_
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let tt_value = tt_dict.value in
    let hd_dict
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let tt_value = tt_dict.value in
    let hd_dict =
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let tt_value = tt_dict.value in
    let hd_dict = 
Next Token : Dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let tt_value = tt_dict.value in
    let hd_dict = Dict
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let tt_value = tt_dict.value in
    let hd_dict = Dict.
Next Token : add, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let tt_value = tt_dict.value in
    let hd_dict = Dict.add
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let tt_value = tt_dict.value in
    let hd_dict = Dict.add 
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list tl
in
let rec dict_of_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list_list hd in
    let tl_dict = dict_of_list_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let dict = Dict.add hd_key hd_dict tl_dict in
    dict_of_list_list tl
in
let rec dict_of_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr ->
    let hd_dict = dict_of_list_list_list hd in
    let tl_dict = dict_of_list_list_list tl in
    let tr_dict = dict_of_list_list_list tr in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let hd_dict = Dict.add hd_key hd_value hd_dict in
    let tl_dict = Dict.add tl_key tl_value tl_dict in
    let tr_dict = Dict.add tr_key tr_value tr_dict in
    let dict = Dict.add hd_key hd_dict tl_dict tr_dict in
    dict_of_list_list_list tr
in
let rec dict_of_list_list_list_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl :: tr :: tt ->
    let hd_dict = dict_of_list_list_list_list hd in
    let tl_dict = dict_of_list_list_list_list tl in
    let tr_dict = dict_of_list_list_list_list tr in
    let tt_dict = dict_of_list_list_list_list tt in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let tr_key = tr_dict.key in
    let tt_key = tt_dict.key in
    let hd_value = hd_dict.value in
    let tl_value = tl_dict.value in
    let tr_value = tr_dict.value in
    let tt_value = tt_dict.value in
    let hd_dict = Dict.add hd


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>