code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let
Next Token :  rec, Posbility: 0.6172
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec
Next Token :  remove, Posbility: 0.5195
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove
Next Token : _, Posbility: 0.9414
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_
Next Token : cons, Posbility: 0.4160
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_cons
Next Token : e, Posbility: 0.9414
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_conse
Next Token : cut, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecut
Next Token : ive, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive
Next Token : _, Posbility: 0.8750
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_
Next Token : duplicate, Posbility: 0.8672
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicate
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates
Next Token :  , Posbility: 0.6250
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates 
Next Token : x, Posbility: 0.2773
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x
Next Token :  =, Posbility: 0.7148
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
Next Token : 
, Posbility: 0.8984
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =

Next Token :   , Posbility: 0.8242
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  
Next Token : match, Posbility: 0.5547
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match 
Next Token : x, Posbility: 0.8359
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x
Next Token :  with, Posbility: 0.9844
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
Next Token : 
, Posbility: 0.8906
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with

Next Token :   , Posbility: 0.9102
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  
Next Token : |, Posbility: 0.8984
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  |
Next Token :  [], Posbility: 0.9258
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | []
Next Token :  , Posbility: 0.9375
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] 
Next Token : ->, Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] ->
Next Token :  [], Posbility: 0.8672
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
Next Token : 
, Posbility: 0.9727
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  |
Next Token :  , Posbility: 0.6914
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | 
Next Token : x, Posbility: 0.6172
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x
Next Token :  , Posbility: 0.4707
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x 
Next Token : ::, Posbility: 0.9883
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x ::
Next Token :  , Posbility: 0.8828
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: 
Next Token : x, Posbility: 0.6289
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: x
Next Token : s, Posbility: 0.8750
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs
Next Token :  , Posbility: 0.8203
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs 
Next Token : ->, Posbility: 0.9492
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
Next Token : 
, Posbility: 0.6523
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->

Next Token :       , Posbility: 0.6367
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      
Next Token : let, Posbility: 0.4980
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let
Next Token :  , Posbility: 0.5117
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let 
Next Token : y, Posbility: 0.3750
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y
Next Token :  =, Posbility: 0.8320
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y =
Next Token :  remove, Posbility: 0.5625
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_
Next Token : cons, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_cons
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_conse
Next Token : cut, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecut
Next Token : ive, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_
Next Token : duplicate, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicate
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates 
Next Token : x, Posbility: 0.9648
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates x
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs
Next Token :  in, Posbility: 0.9648
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in

Next Token :       , Posbility: 0.9805
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      
Next Token : if, Posbility: 0.5273
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if
Next Token :  , Posbility: 0.6914
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if 
Next Token : x, Posbility: 0.3008
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x
Next Token :  =, Posbility: 0.5156
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x =
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = 
Next Token : y, Posbility: 0.9180
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y
Next Token : [0], Posbility: 0.3516
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0]
Next Token :  then, Posbility: 0.9844
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then
Next Token :  , Posbility: 0.7422
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then 
Next Token : x, Posbility: 0.4824
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then x
Next Token : s, Posbility: 0.4844
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then xs
Next Token :  else, Posbility: 0.5547
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then xs else
Next Token :  , Posbility: 0.8438
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then xs else 
Next Token : x, Posbility: 0.4395
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then xs else x
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then xs else x 
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then xs else x ::
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then xs else x :: 
Next Token : y, Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then xs else x :: y
Next Token : 
, Posbility: 0.5898
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then xs else x :: y

Next Token :   , Posbility: 0.8125
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then xs else x :: y
  
Next Token : ;, Posbility: 0.6523
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then xs else x :: y
  ;
Next Token : ;, Posbility: 0.9375
---------------------------
code:
 (* Write a function to remove consecutive duplicates of a given list. *)
let rec remove_consecutive_duplicates x =
  match x with
  | [] -> []
  | x :: xs ->
      let y = remove_consecutive_duplicates xs in
      if x = y[0] then xs else x :: y
  ;;
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END--------

processing time : :3.6068551540374756

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>