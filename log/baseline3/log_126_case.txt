code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let
Next Token :  rec, Posbility: 0.3242
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec
Next Token :  count, Posbility: 0.5859
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count
Next Token : _, Posbility: 0.6523
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_
Next Token : occ, Posbility: 0.2402
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ
Next Token :  , Posbility: 0.4336
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ 
Next Token : t, Posbility: 0.2539
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t
Next Token :  , Posbility: 0.5625
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t 
Next Token : e, Posbility: 0.6211
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e
Next Token :  =, Posbility: 0.7383
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
Next Token : 
, Posbility: 0.8242
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =

Next Token :   , Posbility: 0.7852
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  
Next Token : match, Posbility: 0.7031
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match 
Next Token : t, Posbility: 0.7852
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t
Next Token :  with, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with

Next Token :   , Posbility: 0.8867
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  
Next Token : |, Posbility: 0.9766
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  |
Next Token :  , Posbility: 0.4531
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | 
Next Token : (, Posbility: 0.4492
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (
Next Token : _, Posbility: 0.1943
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_
Next Token : ,, Posbility: 0.8633
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_,
Next Token :  , Posbility: 0.6836
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, 
Next Token : _, Posbility: 0.3027
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _
Next Token : ,, Posbility: 0.5352
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _,
Next Token :  , Posbility: 0.8906
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, 
Next Token : _, Posbility: 0.4609
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _
Next Token : ), Posbility: 0.5000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _)
Next Token :  , Posbility: 0.8828
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) 
Next Token : ->, Posbility: 0.8594
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) ->
Next Token :  , Posbility: 0.4277
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> 
Next Token : if, Posbility: 0.1689
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if 
Next Token : e, Posbility: 0.9648
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e
Next Token :  =, Posbility: 0.8984
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e =
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = 
Next Token : t, Posbility: 0.4707
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t
Next Token : ., Posbility: 0.8594
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.
Next Token : 1, Posbility: 0.2871
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1
Next Token :  then, Posbility: 0.9844
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then
Next Token :  1, Posbility: 0.7812
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1
Next Token :  else, Posbility: 0.9297
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else
Next Token :  0, Posbility: 0.9023
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
Next Token : 
, Posbility: 0.8906
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0

Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  
Next Token : |, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  |
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | 
Next Token : (, Posbility: 0.7500
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (
Next Token : _, Posbility: 0.4570
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_
Next Token : ,, Posbility: 0.9609
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_,
Next Token :  , Posbility: 0.8945
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, 
Next Token : _, Posbility: 0.6406
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _
Next Token : ,, Posbility: 0.8242
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _,
Next Token :  , Posbility: 0.8398
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, 
Next Token : _, Posbility: 0.4004
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _
Next Token : ,, Posbility: 0.4746
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _,
Next Token :  , Posbility: 0.9219
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, 
Next Token : _, Posbility: 0.6562
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _
Next Token : ), Posbility: 0.7461
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _)
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) 
Next Token : ->, Posbility: 0.9805
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) ->
Next Token :  , Posbility: 0.4336
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> 
Next Token : if, Posbility: 0.8555
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if 
Next Token : e, Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = 
Next Token : t, Posbility: 0.9883
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.
Next Token : 2, Posbility: 0.7344
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2
Next Token :  then, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then
Next Token :  1, Posbility: 0.9805
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1
Next Token :  else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else
Next Token :  0, Posbility: 0.9727
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
Next Token : 
, Posbility: 0.9453
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0

Next Token :   , Posbility: 0.9805
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  
Next Token : |, Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  |
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | 
Next Token : (, Posbility: 0.8477
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (
Next Token : _, Posbility: 0.7617
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_
Next Token : ,, Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_,
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, 
Next Token : _, Posbility: 0.9180
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _
Next Token : ,, Posbility: 0.9766
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _,
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, 
Next Token : _, Posbility: 0.8711
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _
Next Token : ,, Posbility: 0.9844
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _,
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, 
Next Token : _, Posbility: 0.9297
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _,
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, 
Next Token : _, Posbility: 0.8945
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _
Next Token : ), Posbility: 0.9219
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _)
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) ->
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> 
Next Token : if, Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if 
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = 
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.
Next Token : 3, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1
Next Token :  else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else
Next Token :  0, Posbility: 0.9805
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
Next Token : 
, Posbility: 0.9258
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0

Next Token :   , Posbility: 0.9688
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  
Next Token : |, Posbility: 0.9844
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  |
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | 
Next Token : (, Posbility: 0.8125
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (
Next Token : _, Posbility: 0.7617
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_
Next Token : ,, Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_,
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, 
Next Token : _, Posbility: 0.9570
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _
Next Token : ,, Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _,
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, 
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, 
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, 
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _,
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, 
Next Token : _, Posbility: 0.9570
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _
Next Token : ), Posbility: 0.8789
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _)
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) ->
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> 
Next Token : if, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if 
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = 
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.
Next Token : 4, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1
Next Token :  else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else
Next Token :  0, Posbility: 0.9883
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
Next Token : 
, Posbility: 0.8711
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0

Next Token :   , Posbility: 0.9414
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  
Next Token : |, Posbility: 0.9766
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  |
Next Token :  , Posbility: 0.8906
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | 
Next Token : (, Posbility: 0.7109
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (
Next Token : _, Posbility: 0.6484
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_
Next Token : ,, Posbility: 0.9883
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_,
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, 
Next Token : _, Posbility: 0.9219
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _
Next Token : ,, Posbility: 0.9844
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _,
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, 
Next Token : _, Posbility: 0.9648
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _
Next Token : ,, Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, 
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, 
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, 
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _,
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, 
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _
Next Token : ), Posbility: 0.9805
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _)
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) ->
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> 
Next Token : if, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if 
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = 
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.
Next Token : 5, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1
Next Token :  else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else
Next Token :  0, Posbility: 0.9727
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
Next Token : 
, Posbility: 0.8945
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0

Next Token :   , Posbility: 0.9492
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  
Next Token : |, Posbility: 0.9844
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  |
Next Token :  , Posbility: 0.8984
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | 
Next Token : (, Posbility: 0.7188
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (
Next Token : _, Posbility: 0.6836
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_
Next Token : ,, Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_,
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, 
Next Token : _, Posbility: 0.9375
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _
Next Token : ,, Posbility: 0.9883
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _,
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, 
Next Token : _, Posbility: 0.9766
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, 
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, 
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, 
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, 
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, 
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _
Next Token : ), Posbility: 0.9805
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _)
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) ->
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> 
Next Token : if, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if 
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = 
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.
Next Token : 6, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1
Next Token :  else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else
Next Token :  0, Posbility: 0.9844
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
Next Token : 
, Posbility: 0.9492
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0

Next Token :   , Posbility: 0.9688
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  
Next Token : |, Posbility: 0.9844
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  |
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | 
Next Token : (, Posbility: 0.8047
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (
Next Token : _, Posbility: 0.8164
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_,
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, 
Next Token : _, Posbility: 0.9727
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, 
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, 
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, 
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _
Next Token : ), Posbility: 0.9883
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _)
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) ->
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> 
Next Token : if, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if 
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = 
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.
Next Token : 7, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1
Next Token :  else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else
Next Token :  0, Posbility: 0.9844
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
Next Token : 
, Posbility: 0.9453
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0

Next Token :   , Posbility: 0.9570
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  
Next Token : |, Posbility: 0.9805
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  |
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | 
Next Token : (, Posbility: 0.8320
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (
Next Token : _, Posbility: 0.8477
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_,
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, 
Next Token : _, Posbility: 0.9727
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, 
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _
Next Token : ), Posbility: 0.9883
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _)
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) ->
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> 
Next Token : if, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if 
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = 
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.
Next Token : 8, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1
Next Token :  else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else
Next Token :  0, Posbility: 0.9883
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
Next Token : 
, Posbility: 0.9141
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0

Next Token :   , Posbility: 0.9414
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  
Next Token : |, Posbility: 0.9688
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  |
Next Token :  , Posbility: 0.9258
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | 
Next Token : (, Posbility: 0.7305
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (
Next Token : _, Posbility: 0.7891
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_
Next Token : ,, Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_,
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, 
Next Token : _, Posbility: 0.9688
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, 
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, 
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _
Next Token : ), Posbility: 0.9844
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _)
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) ->
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> 
Next Token : if, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if 
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = 
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.
Next Token : 9, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1
Next Token :  else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else
Next Token :  0, Posbility: 0.9844
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
Next Token : 
, Posbility: 0.8594
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0

Next Token :   , Posbility: 0.9141
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  
Next Token : |, Posbility: 0.9570
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  |
Next Token :  , Posbility: 0.8516
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | 
Next Token : (, Posbility: 0.6055
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (
Next Token : _, Posbility: 0.6172
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_
Next Token : ,, Posbility: 0.9844
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_,
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, 
Next Token : _, Posbility: 0.8867
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _
Next Token : ,, Posbility: 0.9844
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _,
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, 
Next Token : _, Posbility: 0.9648
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _
Next Token : ,, Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, 
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, 
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, 
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, 
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 0.9844
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _
Next Token : ), Posbility: 0.9805
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _)
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) ->
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> 
Next Token : if, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if 
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = 
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.
Next Token : 10, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1
Next Token :  else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else
Next Token :  0, Posbility: 0.9883
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
Next Token : 
, Posbility: 0.9102
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0

Next Token :   , Posbility: 0.9375
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  
Next Token : |, Posbility: 0.9648
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  |
Next Token :  , Posbility: 0.9102
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | 
Next Token : (, Posbility: 0.6602
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (
Next Token : _, Posbility: 0.6875
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_
Next Token : ,, Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_,
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, 
Next Token : _, Posbility: 0.9492
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _
Next Token : ,, Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, 
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, 
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, 
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ), Posbility: 0.9805
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _)
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) ->
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> 
Next Token : if, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if 
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = 
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.
Next Token : 11, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1
Next Token :  else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else
Next Token :  0, Posbility: 0.9883
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0

Next Token :   , Posbility: 0.9766
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  
Next Token : |, Posbility: 0.9844
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  |
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | 
Next Token : (, Posbility: 0.8867
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (
Next Token : _, Posbility: 0.8984
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, 
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, 
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 0.9844
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ), Posbility: 0.9883
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _)
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) ->
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> 
Next Token : if, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if 
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = 
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.
Next Token : 12, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1
Next Token :  else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else
Next Token :  0, Posbility: 0.9844
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
Next Token : 
, Posbility: 0.9453
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0

Next Token :   , Posbility: 0.9727
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  
Next Token : |, Posbility: 0.9492
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  |
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | 
Next Token : (, Posbility: 0.7812
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (
Next Token : _, Posbility: 0.8320
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_,
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, 
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, 
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 0.9805
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ), Posbility: 0.9805
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _)
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) ->
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> 
Next Token : if, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if 
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = 
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.
Next Token : 13, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1
Next Token :  else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else
Next Token :  0, Posbility: 0.9883
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0

Next Token :   , Posbility: 0.9766
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  
Next Token : |, Posbility: 0.9805
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  |
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | 
Next Token : (, Posbility: 0.9336
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (
Next Token : _, Posbility: 0.9414
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, 
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 0.9883
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ), Posbility: 0.9883
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _)
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) ->
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> 
Next Token : if, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if 
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = 
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.
Next Token : 14, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1
Next Token :  else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else
Next Token :  0, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0

Next Token :   , Posbility: 0.9883
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  
Next Token : |, Posbility: 0.9844
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  |
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | 
Next Token : (, Posbility: 0.9414
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (
Next Token : _, Posbility: 0.9570
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 0.9805
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ), Posbility: 0.9805
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _)
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) ->
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> 
Next Token : if, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if 
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = 
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.
Next Token : 15, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1
Next Token :  else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else
Next Token :  0, Posbility: 0.9844
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
Next Token : 
, Posbility: 0.9453
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0

Next Token :   , Posbility: 0.9688
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  
Next Token : |, Posbility: 0.9570
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  |
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | 
Next Token : (, Posbility: 0.8086
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (
Next Token : _, Posbility: 0.8516
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, 
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, 
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 0.9688
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ), Posbility: 0.9805
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _)
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) ->
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> 
Next Token : if, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if 
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = 
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.
Next Token : 16, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1
Next Token :  else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else
Next Token :  0, Posbility: 0.9883
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
Next Token : 
, Posbility: 0.9609
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0

Next Token :   , Posbility: 0.9805
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  
Next Token : |, Posbility: 0.9492
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  |
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | 
Next Token : (, Posbility: 0.8633
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (
Next Token : _, Posbility: 0.9258
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, 
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 0.9531
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ), Posbility: 0.9883
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _)
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) ->
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> 
Next Token : if, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if 
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = 
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.
Next Token : 17, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1
Next Token :  else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else
Next Token :  0, Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0

Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  
Next Token : |, Posbility: 0.9844
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  |
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | 
Next Token : (, Posbility: 0.9570
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (
Next Token : _, Posbility: 0.9727
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 0.9805
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ), Posbility: 0.9883
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _)
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) ->
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> 
Next Token : if, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if 
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = 
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.
Next Token : 18, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1
Next Token :  else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else
Next Token :  0, Posbility: 0.9922
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0

Next Token :   , Posbility: 0.9883
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  
Next Token : |, Posbility: 0.9805
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  |
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | 
Next Token : (, Posbility: 0.9648
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (
Next Token : _, Posbility: 0.9766
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a  function that takes in a tuple and an element and counts the occcurences of the element in the tuple. *)
let rec count_occ t e =
  match t with
  | (_, _, _) -> if e = t.1 then 1 else 0
  | (_, _, _, _) -> if e = t.2 then 1 else 0
  | (_, _, _, _, _) -> if e = t.3 then 1 else 0
  | (_, _, _, _, _, _) -> if e = t.4 then 1 else 0
  | (_, _, _, _, _, _, _) -> if e = t.5 then 1 else 0
  | (_, _, _, _, _, _, _, _) -> if e = t.6 then 1 else 0
  | (_, _, _, _, _, _, _, _, _) -> if e = t.7 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _) -> if e = t.8 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _) -> if e = t.9 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.10 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.11 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.12 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.13 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.14 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.15 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.16 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.17 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _) -> if e = t.18 then 1 else 0
  | (_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _,


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>